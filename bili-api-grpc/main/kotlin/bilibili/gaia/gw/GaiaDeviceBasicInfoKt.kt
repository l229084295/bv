// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/gaia/gw/gw_api.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.gaia.gw;

@kotlin.jvm.JvmName("-initializegaiaDeviceBasicInfo")
public inline fun gaiaDeviceBasicInfo(block: bilibili.gaia.gw.GaiaDeviceBasicInfoKt.Dsl.() -> kotlin.Unit): bilibili.gaia.gw.GaiaDeviceBasicInfo =
  bilibili.gaia.gw.GaiaDeviceBasicInfoKt.Dsl._create(bilibili.gaia.gw.GaiaDeviceBasicInfo.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.gaia.gw.GaiaDeviceBasicInfo`
 */
public object GaiaDeviceBasicInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.gaia.gw.GaiaDeviceBasicInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.gaia.gw.GaiaDeviceBasicInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.gaia.gw.GaiaDeviceBasicInfo = _builder.build()

    /**
     * ```
     * 平台&应用信息
     * ```
     *
     * `string platform = 1;`
     */
    public var platform: kotlin.String
      @JvmName("getPlatform")
      get() = _builder.getPlatform()
      @JvmName("setPlatform")
      set(value) {
        _builder.setPlatform(value)
      }
    /**
     * ```
     * 平台&应用信息
     * ```
     *
     * `string platform = 1;`
     */
    public fun clearPlatform() {
      _builder.clearPlatform()
    }

    /**
     * ```
     * 运行设备, 用于区分不同的app, 见客户端传入的对应参数。对于苹果系统，device有效值为phone, pad；安卓无法区分phone和pad，留空即可。
     * ```
     *
     * `string device = 2;`
     */
    public var device: kotlin.String
      @JvmName("getDevice")
      get() = _builder.getDevice()
      @JvmName("setDevice")
      set(value) {
        _builder.setDevice(value)
      }
    /**
     * ```
     * 运行设备, 用于区分不同的app, 见客户端传入的对应参数。对于苹果系统，device有效值为phone, pad；安卓无法区分phone和pad，留空即可。
     * ```
     *
     * `string device = 2;`
     */
    public fun clearDevice() {
      _builder.clearDevice()
    }

    /**
     * ```
     * 包类型，用于区分不同的app, 见客户端传入的对应参数（mobi_app ）；对于web端请求，请传空
     * ```
     *
     * `string mobi_app = 3;`
     */
    public var mobiApp: kotlin.String
      @JvmName("getMobiApp")
      get() = _builder.getMobiApp()
      @JvmName("setMobiApp")
      set(value) {
        _builder.setMobiApp(value)
      }
    /**
     * ```
     * 包类型，用于区分不同的app, 见客户端传入的对应参数（mobi_app ）；对于web端请求，请传空
     * ```
     *
     * `string mobi_app = 3;`
     */
    public fun clearMobiApp() {
      _builder.clearMobiApp()
    }

    /**
     * ```
     * 客户端appkey, 用以区分不同的客户端，对应客户端请求参数中的appkey,如果无法获取可传空“”
     * ```
     *
     * `string origin = 4;`
     */
    public var origin: kotlin.String
      @JvmName("getOrigin")
      get() = _builder.getOrigin()
      @JvmName("setOrigin")
      set(value) {
        _builder.setOrigin(value)
      }
    /**
     * ```
     * 客户端appkey, 用以区分不同的客户端，对应客户端请求参数中的appkey,如果无法获取可传空“”
     * ```
     *
     * `string origin = 4;`
     */
    public fun clearOrigin() {
      _builder.clearOrigin()
    }

    /**
     * ```
     * app产品编号 //产品编号，由数据平台分配，粉=1，白=2，蓝=3，直播姬=4，HD=5，海外=6，OTT=7，漫画=8，TV野版=9，小视频=10，网易漫画=11，网易漫画lite=12，网易漫画HD=13,国际版=14
     * ```
     *
     * `string app_id = 5;`
     */
    public var appId: kotlin.String
      @JvmName("getAppId")
      get() = _builder.getAppId()
      @JvmName("setAppId")
      set(value) {
        _builder.setAppId(value)
      }
    /**
     * ```
     * app产品编号 //产品编号，由数据平台分配，粉=1，白=2，蓝=3，直播姬=4，HD=5，海外=6，OTT=7，漫画=8，TV野版=9，小视频=10，网易漫画=11，网易漫画lite=12，网易漫画HD=13,国际版=14
     * ```
     *
     * `string app_id = 5;`
     */
    public fun clearAppId() {
      _builder.clearAppId()
    }

    /**
     * ```
     * 应用的版本信息
     * ```
     *
     * `string sdkver = 6;`
     */
    public var sdkver: kotlin.String
      @JvmName("getSdkver")
      get() = _builder.getSdkver()
      @JvmName("setSdkver")
      set(value) {
        _builder.setSdkver(value)
      }
    /**
     * ```
     * 应用的版本信息
     * ```
     *
     * `string sdkver = 6;`
     */
    public fun clearSdkver() {
      _builder.clearSdkver()
    }

    /**
     * ```
     * app版本  "app_version":"5.36.0"
     * ```
     *
     * `string app_version = 7;`
     */
    public var appVersion: kotlin.String
      @JvmName("getAppVersion")
      get() = _builder.getAppVersion()
      @JvmName("setAppVersion")
      set(value) {
        _builder.setAppVersion(value)
      }
    /**
     * ```
     * app版本  "app_version":"5.36.0"
     * ```
     *
     * `string app_version = 7;`
     */
    public fun clearAppVersion() {
      _builder.clearAppVersion()
    }

    /**
     * ```
     * app版本号 "app_version_code":"5360000"
     * ```
     *
     * `string app_version_code = 8;`
     */
    public var appVersionCode: kotlin.String
      @JvmName("getAppVersionCode")
      get() = _builder.getAppVersionCode()
      @JvmName("setAppVersionCode")
      set(value) {
        _builder.setAppVersionCode(value)
      }
    /**
     * ```
     * app版本号 "app_version_code":"5360000"
     * ```
     *
     * `string app_version_code = 8;`
     */
    public fun clearAppVersionCode() {
      _builder.clearAppVersionCode()
    }

    /**
     * ```
     * app版本号，见客户端传入的对应参数；对于web端请求，请传空
     * ```
     *
     * `string build = 9;`
     */
    public var build: kotlin.String
      @JvmName("getBuild")
      get() = _builder.getBuild()
      @JvmName("setBuild")
      set(value) {
        _builder.setBuild(value)
      }
    /**
     * ```
     * app版本号，见客户端传入的对应参数；对于web端请求，请传空
     * ```
     *
     * `string build = 9;`
     */
    public fun clearBuild() {
      _builder.clearBuild()
    }

    /**
     * ```
     * 渠道信息
     * ```
     *
     * `string channel = 10;`
     */
    public var channel: kotlin.String
      @JvmName("getChannel")
      get() = _builder.getChannel()
      @JvmName("setChannel")
      set(value) {
        _builder.setChannel(value)
      }
    /**
     * ```
     * 渠道信息
     * ```
     *
     * `string channel = 10;`
     */
    public fun clearChannel() {
      _builder.clearChannel()
    }

    /**
     * ```
     * 机器硬件信息
     * ```
     *
     * `string brand = 11;`
     */
    public var brand: kotlin.String
      @JvmName("getBrand")
      get() = _builder.getBrand()
      @JvmName("setBrand")
      set(value) {
        _builder.setBrand(value)
      }
    /**
     * ```
     * 机器硬件信息
     * ```
     *
     * `string brand = 11;`
     */
    public fun clearBrand() {
      _builder.clearBrand()
    }

    /**
     * ```
     * 手机型号，见客户端传入的对应参数
     * ```
     *
     * `string model = 12;`
     */
    public var model: kotlin.String
      @JvmName("getModel")
      get() = _builder.getModel()
      @JvmName("setModel")
      set(value) {
        _builder.setModel(value)
      }
    /**
     * ```
     * 手机型号，见客户端传入的对应参数
     * ```
     *
     * `string model = 12;`
     */
    public fun clearModel() {
      _builder.clearModel()
    }

    /**
     * ```
     * 系统版本，见客户端传入的对应参数
     * ```
     *
     * `string osver = 13;`
     */
    public var osver: kotlin.String
      @JvmName("getOsver")
      get() = _builder.getOsver()
      @JvmName("setOsver")
      set(value) {
        _builder.setOsver(value)
      }
    /**
     * ```
     * 系统版本，见客户端传入的对应参数
     * ```
     *
     * `string osver = 13;`
     */
    public fun clearOsver() {
      _builder.clearOsver()
    }

    /**
     * `string user_agent = 14;`
     */
    public var userAgent: kotlin.String
      @JvmName("getUserAgent")
      get() = _builder.getUserAgent()
      @JvmName("setUserAgent")
      set(value) {
        _builder.setUserAgent(value)
      }
    /**
     * `string user_agent = 14;`
     */
    public fun clearUserAgent() {
      _builder.clearUserAgent()
    }

    /**
     * ```
     * 设备标识信息
     * ```
     *
     * `string buvid_local = 15;`
     */
    public var buvidLocal: kotlin.String
      @JvmName("getBuvidLocal")
      get() = _builder.getBuvidLocal()
      @JvmName("setBuvidLocal")
      set(value) {
        _builder.setBuvidLocal(value)
      }
    /**
     * ```
     * 设备标识信息
     * ```
     *
     * `string buvid_local = 15;`
     */
    public fun clearBuvidLocal() {
      _builder.clearBuvidLocal()
    }

    /**
     * ```
     * 设备唯一标识
     * ```
     *
     * `string buvid = 16;`
     */
    public var buvid: kotlin.String
      @JvmName("getBuvid")
      get() = _builder.getBuvid()
      @JvmName("setBuvid")
      set(value) {
        _builder.setBuvid(value)
      }
    /**
     * ```
     * 设备唯一标识
     * ```
     *
     * `string buvid = 16;`
     */
    public fun clearBuvid() {
      _builder.clearBuvid()
    }

    /**
     * ```
     * 登陆用户信息
     * ```
     *
     * `string mid = 17;`
     */
    public var mid: kotlin.String
      @JvmName("getMid")
      get() = _builder.getMid()
      @JvmName("setMid")
      set(value) {
        _builder.setMid(value)
      }
    /**
     * ```
     * 登陆用户信息
     * ```
     *
     * `string mid = 17;`
     */
    public fun clearMid() {
      _builder.clearMid()
    }

    /**
     * ```
     * 本次启动信息
     * ```
     *
     * `int64 fts = 18;`
     */
    public var fts: kotlin.Long
      @JvmName("getFts")
      get() = _builder.getFts()
      @JvmName("setFts")
      set(value) {
        _builder.setFts(value)
      }
    /**
     * ```
     * 本次启动信息
     * ```
     *
     * `int64 fts = 18;`
     */
    public fun clearFts() {
      _builder.clearFts()
    }

    /**
     * ```
     * 是否首次启动 是：0 否：1
     * ```
     *
     * `int32 first = 19;`
     */
    public var first: kotlin.Int
      @JvmName("getFirst")
      get() = _builder.getFirst()
      @JvmName("setFirst")
      set(value) {
        _builder.setFirst(value)
      }
    /**
     * ```
     * 是否首次启动 是：0 否：1
     * ```
     *
     * `int32 first = 19;`
     */
    public fun clearFirst() {
      _builder.clearFirst()
    }

    /**
     * ```
     * 网络相关的信息
     * ```
     *
     * `string network = 20;`
     */
    public var network: kotlin.String
      @JvmName("getNetwork")
      get() = _builder.getNetwork()
      @JvmName("setNetwork")
      set(value) {
        _builder.setNetwork(value)
      }
    /**
     * ```
     * 网络相关的信息
     * ```
     *
     * `string network = 20;`
     */
    public fun clearNetwork() {
      _builder.clearNetwork()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.gaia.gw.GaiaDeviceBasicInfo.copy(block: `bilibili.gaia.gw`.GaiaDeviceBasicInfoKt.Dsl.() -> kotlin.Unit): bilibili.gaia.gw.GaiaDeviceBasicInfo =
  `bilibili.gaia.gw`.GaiaDeviceBasicInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

