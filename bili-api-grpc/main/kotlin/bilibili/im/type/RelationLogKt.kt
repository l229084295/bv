// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/im/type/im.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.im.type;

@kotlin.jvm.JvmName("-initializerelationLog")
public inline fun relationLog(block: bilibili.im.type.RelationLogKt.Dsl.() -> kotlin.Unit): bilibili.im.type.RelationLog =
  bilibili.im.type.RelationLogKt.Dsl._create(bilibili.im.type.RelationLog.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.im.type.RelationLog`
 */
public object RelationLogKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.im.type.RelationLog.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.im.type.RelationLog.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.im.type.RelationLog = _builder.build()

    /**
     * ```
     * 操作类型
     * ```
     *
     * `.bilibili.im.type.RelationLogType log_type = 1;`
     */
    public var logType: bilibili.im.type.RelationLogType
      @JvmName("getLogType")
      get() = _builder.getLogType()
      @JvmName("setLogType")
      set(value) {
        _builder.setLogType(value)
      }
    public var logTypeValue: kotlin.Int
      @JvmName("getLogTypeValue")
      get() = _builder.getLogTypeValue()
      @JvmName("setLogTypeValue")
      set(value) {
        _builder.setLogTypeValue(value)
      }
    /**
     * ```
     * 操作类型
     * ```
     *
     * `.bilibili.im.type.RelationLogType log_type = 1;`
     */
    public fun clearLogType() {
      _builder.clearLogType()
    }

    /**
     * ```
     * 操作seqno
     * ```
     *
     * `uint64 oplog_seqno = 2;`
     */
    public var oplogSeqno: kotlin.Long
      @JvmName("getOplogSeqno")
      get() = _builder.getOplogSeqno()
      @JvmName("setOplogSeqno")
      set(value) {
        _builder.setOplogSeqno(value)
      }
    /**
     * ```
     * 操作seqno
     * ```
     *
     * `uint64 oplog_seqno = 2;`
     */
    public fun clearOplogSeqno() {
      _builder.clearOplogSeqno()
    }

    /**
     * ```
     * 好友信息
     * ```
     *
     * `.bilibili.im.type.FriendRelation friend_relation = 3;`
     */
    public var friendRelation: bilibili.im.type.FriendRelation
      @JvmName("getFriendRelation")
      get() = _builder.getFriendRelation()
      @JvmName("setFriendRelation")
      set(value) {
        _builder.setFriendRelation(value)
      }
    /**
     * ```
     * 好友信息
     * ```
     *
     * `.bilibili.im.type.FriendRelation friend_relation = 3;`
     */
    public fun clearFriendRelation() {
      _builder.clearFriendRelation()
    }
    /**
     * ```
     * 好友信息
     * ```
     *
     * `.bilibili.im.type.FriendRelation friend_relation = 3;`
     * @return Whether the friendRelation field is set.
     */
    public fun hasFriendRelation(): kotlin.Boolean {
      return _builder.hasFriendRelation()
    }
    public val RelationLogKt.Dsl.friendRelationOrNull: bilibili.im.type.FriendRelation?
      get() = _builder.friendRelationOrNull

    /**
     * ```
     * 群信息
     * ```
     *
     * `.bilibili.im.type.GroupRelation group_relation = 4;`
     */
    public var groupRelation: bilibili.im.type.GroupRelation
      @JvmName("getGroupRelation")
      get() = _builder.getGroupRelation()
      @JvmName("setGroupRelation")
      set(value) {
        _builder.setGroupRelation(value)
      }
    /**
     * ```
     * 群信息
     * ```
     *
     * `.bilibili.im.type.GroupRelation group_relation = 4;`
     */
    public fun clearGroupRelation() {
      _builder.clearGroupRelation()
    }
    /**
     * ```
     * 群信息
     * ```
     *
     * `.bilibili.im.type.GroupRelation group_relation = 4;`
     * @return Whether the groupRelation field is set.
     */
    public fun hasGroupRelation(): kotlin.Boolean {
      return _builder.hasGroupRelation()
    }
    public val RelationLogKt.Dsl.groupRelationOrNull: bilibili.im.type.GroupRelation?
      get() = _builder.groupRelationOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.im.type.RelationLog.copy(block: `bilibili.im.type`.RelationLogKt.Dsl.() -> kotlin.Unit): bilibili.im.type.RelationLog =
  `bilibili.im.type`.RelationLogKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.im.type.RelationLogOrBuilder.friendRelationOrNull: bilibili.im.type.FriendRelation?
  get() = if (hasFriendRelation()) getFriendRelation() else null

public val bilibili.im.type.RelationLogOrBuilder.groupRelationOrNull: bilibili.im.type.GroupRelation?
  get() = if (hasGroupRelation()) getGroupRelation() else null

