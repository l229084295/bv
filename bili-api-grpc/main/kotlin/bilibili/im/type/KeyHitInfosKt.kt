// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/im/type/im.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.im.type;

@kotlin.jvm.JvmName("-initializekeyHitInfos")
public inline fun keyHitInfos(block: bilibili.im.type.KeyHitInfosKt.Dsl.() -> kotlin.Unit): bilibili.im.type.KeyHitInfos =
  bilibili.im.type.KeyHitInfosKt.Dsl._create(bilibili.im.type.KeyHitInfos.newBuilder()).apply { block() }._build()
/**
 * ```
 * 关键词命中信息
 * ```
 *
 * Protobuf type `bilibili.im.type.KeyHitInfos`
 */
public object KeyHitInfosKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.im.type.KeyHitInfos.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.im.type.KeyHitInfos.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.im.type.KeyHitInfos = _builder.build()

    /**
     * ```
     * ```
     *
     * `string toast = 1;`
     */
    public var toast: kotlin.String
      @JvmName("getToast")
      get() = _builder.getToast()
      @JvmName("setToast")
      set(value) {
        _builder.setToast(value)
      }
    /**
     * ```
     * ```
     *
     * `string toast = 1;`
     */
    public fun clearToast() {
      _builder.clearToast()
    }

    /**
     * ```
     * ```
     *
     * `uint32 rule_id = 2;`
     */
    public var ruleId: kotlin.Int
      @JvmName("getRuleId")
      get() = _builder.getRuleId()
      @JvmName("setRuleId")
      set(value) {
        _builder.setRuleId(value)
      }
    /**
     * ```
     * ```
     *
     * `uint32 rule_id = 2;`
     */
    public fun clearRuleId() {
      _builder.clearRuleId()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class HighTextProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.im.type.HighText high_text = 3;`
     */
     public val highText: com.google.protobuf.kotlin.DslList<bilibili.im.type.HighText, HighTextProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getHighTextList()
      )
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.im.type.HighText high_text = 3;`
     * @param value The highText to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addHighText")
    public fun com.google.protobuf.kotlin.DslList<bilibili.im.type.HighText, HighTextProxy>.add(value: bilibili.im.type.HighText) {
      _builder.addHighText(value)
    }
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.im.type.HighText high_text = 3;`
     * @param value The highText to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignHighText")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bilibili.im.type.HighText, HighTextProxy>.plusAssign(value: bilibili.im.type.HighText) {
      add(value)
    }
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.im.type.HighText high_text = 3;`
     * @param values The highText to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllHighText")
    public fun com.google.protobuf.kotlin.DslList<bilibili.im.type.HighText, HighTextProxy>.addAll(values: kotlin.collections.Iterable<bilibili.im.type.HighText>) {
      _builder.addAllHighText(values)
    }
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.im.type.HighText high_text = 3;`
     * @param values The highText to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllHighText")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bilibili.im.type.HighText, HighTextProxy>.plusAssign(values: kotlin.collections.Iterable<bilibili.im.type.HighText>) {
      addAll(values)
    }
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.im.type.HighText high_text = 3;`
     * @param index The index to set the value at.
     * @param value The highText to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setHighText")
    public operator fun com.google.protobuf.kotlin.DslList<bilibili.im.type.HighText, HighTextProxy>.set(index: kotlin.Int, value: bilibili.im.type.HighText) {
      _builder.setHighText(index, value)
    }
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.im.type.HighText high_text = 3;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearHighText")
    public fun com.google.protobuf.kotlin.DslList<bilibili.im.type.HighText, HighTextProxy>.clear() {
      _builder.clearHighText()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.im.type.KeyHitInfos.copy(block: `bilibili.im.type`.KeyHitInfosKt.Dsl.() -> kotlin.Unit): bilibili.im.type.KeyHitInfos =
  `bilibili.im.type`.KeyHitInfosKt.Dsl._create(this.toBuilder()).apply { block() }._build()

