// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/im/type/im.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.im.type;

@kotlin.jvm.JvmName("-initializehighText")
public inline fun highText(block: bilibili.im.type.HighTextKt.Dsl.() -> kotlin.Unit): bilibili.im.type.HighText =
  bilibili.im.type.HighTextKt.Dsl._create(bilibili.im.type.HighText.newBuilder()).apply { block() }._build()
/**
 * ```
 * 关键词高亮文本
 * ```
 *
 * Protobuf type `bilibili.im.type.HighText`
 */
public object HighTextKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.im.type.HighText.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.im.type.HighText.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.im.type.HighText = _builder.build()

    /**
     * ```
     * ```
     *
     * `string title = 1;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * ```
     *
     * `string title = 1;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * ```
     *
     * `string url = 2;`
     */
    public var url: kotlin.String
      @JvmName("getUrl")
      get() = _builder.getUrl()
      @JvmName("setUrl")
      set(value) {
        _builder.setUrl(value)
      }
    /**
     * ```
     * ```
     *
     * `string url = 2;`
     */
    public fun clearUrl() {
      _builder.clearUrl()
    }

    /**
     * ```
     * 表示高亮文本应该高亮第几个匹配的文本，ps：比如，“有疑问请联系客服，联系客服时，请说明具体的情况”，一共有2个匹配的文本，要高亮第一个匹配的，则index=1
     * ```
     *
     * `uint32 index = 3;`
     */
    public var index: kotlin.Int
      @JvmName("getIndex")
      get() = _builder.getIndex()
      @JvmName("setIndex")
      set(value) {
        _builder.setIndex(value)
      }
    /**
     * ```
     * 表示高亮文本应该高亮第几个匹配的文本，ps：比如，“有疑问请联系客服，联系客服时，请说明具体的情况”，一共有2个匹配的文本，要高亮第一个匹配的，则index=1
     * ```
     *
     * `uint32 index = 3;`
     */
    public fun clearIndex() {
      _builder.clearIndex()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.im.type.HighText.copy(block: `bilibili.im.type`.HighTextKt.Dsl.() -> kotlin.Unit): bilibili.im.type.HighText =
  `bilibili.im.type`.HighTextKt.Dsl._create(this.toBuilder()).apply { block() }._build()

