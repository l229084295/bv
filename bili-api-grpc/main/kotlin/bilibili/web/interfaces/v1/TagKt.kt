// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/web/interfaces/v1/interfaces.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.web.interfaces.v1;

@kotlin.jvm.JvmName("-initializetag")
public inline fun tag(block: bilibili.web.interfaces.v1.TagKt.Dsl.() -> kotlin.Unit): bilibili.web.interfaces.v1.Tag =
  bilibili.web.interfaces.v1.TagKt.Dsl._create(bilibili.web.interfaces.v1.Tag.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.web.interfaces.v1.Tag`
 */
public object TagKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.web.interfaces.v1.Tag.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.web.interfaces.v1.Tag.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.web.interfaces.v1.Tag = _builder.build()

    /**
     * ```
     * ```
     *
     * `int64 id = 1;`
     */
    public var id: kotlin.Long
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 id = 1;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * ```
     * ```
     *
     * `string name = 2;`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * ```
     * ```
     *
     * `string name = 2;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * ```
     * ```
     *
     * `string cover = 3;`
     */
    public var cover: kotlin.String
      @JvmName("getCover")
      get() = _builder.getCover()
      @JvmName("setCover")
      set(value) {
        _builder.setCover(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover = 3;`
     */
    public fun clearCover() {
      _builder.clearCover()
    }

    /**
     * ```
     * ```
     *
     * `string head_cover = 4;`
     */
    public var headCover: kotlin.String
      @JvmName("getHeadCover")
      get() = _builder.getHeadCover()
      @JvmName("setHeadCover")
      set(value) {
        _builder.setHeadCover(value)
      }
    /**
     * ```
     * ```
     *
     * `string head_cover = 4;`
     */
    public fun clearHeadCover() {
      _builder.clearHeadCover()
    }

    /**
     * ```
     * ```
     *
     * `string content = 5;`
     */
    public var content: kotlin.String
      @JvmName("getContent")
      get() = _builder.getContent()
      @JvmName("setContent")
      set(value) {
        _builder.setContent(value)
      }
    /**
     * ```
     * ```
     *
     * `string content = 5;`
     */
    public fun clearContent() {
      _builder.clearContent()
    }

    /**
     * ```
     * ```
     *
     * `string short_content = 6;`
     */
    public var shortContent: kotlin.String
      @JvmName("getShortContent")
      get() = _builder.getShortContent()
      @JvmName("setShortContent")
      set(value) {
        _builder.setShortContent(value)
      }
    /**
     * ```
     * ```
     *
     * `string short_content = 6;`
     */
    public fun clearShortContent() {
      _builder.clearShortContent()
    }

    /**
     * ```
     * ```
     *
     * `int32 type = 7;`
     */
    public var type: kotlin.Int
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 type = 7;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * ```
     * ```
     *
     * `int32 state = 8;`
     */
    public var state: kotlin.Int
      @JvmName("getState")
      get() = _builder.getState()
      @JvmName("setState")
      set(value) {
        _builder.setState(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 state = 8;`
     */
    public fun clearState() {
      _builder.clearState()
    }

    /**
     * ```
     * ```
     *
     * `int64 ctime = 9;`
     */
    public var ctime: kotlin.Long
      @JvmName("getCtime")
      get() = _builder.getCtime()
      @JvmName("setCtime")
      set(value) {
        _builder.setCtime(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 ctime = 9;`
     */
    public fun clearCtime() {
      _builder.clearCtime()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.web.interfaces.v1.TagCount tag_count = 10;`
     */
    public var tagCount: bilibili.web.interfaces.v1.TagCount
      @JvmName("getTagCount")
      get() = _builder.getTagCount()
      @JvmName("setTagCount")
      set(value) {
        _builder.setTagCount(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.web.interfaces.v1.TagCount tag_count = 10;`
     */
    public fun clearTagCount() {
      _builder.clearTagCount()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.web.interfaces.v1.TagCount tag_count = 10;`
     * @return Whether the tagCount field is set.
     */
    public fun hasTagCount(): kotlin.Boolean {
      return _builder.hasTagCount()
    }
    public val TagKt.Dsl.tagCountOrNull: bilibili.web.interfaces.v1.TagCount?
      get() = _builder.tagCountOrNull

    /**
     * ```
     * ```
     *
     * `int32 is_atten = 11;`
     */
    public var isAtten: kotlin.Int
      @JvmName("getIsAtten")
      get() = _builder.getIsAtten()
      @JvmName("setIsAtten")
      set(value) {
        _builder.setIsAtten(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 is_atten = 11;`
     */
    public fun clearIsAtten() {
      _builder.clearIsAtten()
    }

    /**
     * ```
     * ```
     *
     * `int64 likes = 12;`
     */
    public var likes: kotlin.Long
      @JvmName("getLikes")
      get() = _builder.getLikes()
      @JvmName("setLikes")
      set(value) {
        _builder.setLikes(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 likes = 12;`
     */
    public fun clearLikes() {
      _builder.clearLikes()
    }

    /**
     * ```
     * ```
     *
     * `int64 hates = 13;`
     */
    public var hates: kotlin.Long
      @JvmName("getHates")
      get() = _builder.getHates()
      @JvmName("setHates")
      set(value) {
        _builder.setHates(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 hates = 13;`
     */
    public fun clearHates() {
      _builder.clearHates()
    }

    /**
     * ```
     * ```
     *
     * `int32 attribute = 14;`
     */
    public var attribute: kotlin.Int
      @JvmName("getAttribute")
      get() = _builder.getAttribute()
      @JvmName("setAttribute")
      set(value) {
        _builder.setAttribute(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 attribute = 14;`
     */
    public fun clearAttribute() {
      _builder.clearAttribute()
    }

    /**
     * ```
     * ```
     *
     * `int32 liked = 15;`
     */
    public var liked: kotlin.Int
      @JvmName("getLiked")
      get() = _builder.getLiked()
      @JvmName("setLiked")
      set(value) {
        _builder.setLiked(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 liked = 15;`
     */
    public fun clearLiked() {
      _builder.clearLiked()
    }

    /**
     * ```
     * ```
     *
     * `int32 hated = 16;`
     */
    public var hated: kotlin.Int
      @JvmName("getHated")
      get() = _builder.getHated()
      @JvmName("setHated")
      set(value) {
        _builder.setHated(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 hated = 16;`
     */
    public fun clearHated() {
      _builder.clearHated()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.web.interfaces.v1.Tag.copy(block: `bilibili.web.interfaces.v1`.TagKt.Dsl.() -> kotlin.Unit): bilibili.web.interfaces.v1.Tag =
  `bilibili.web.interfaces.v1`.TagKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.web.interfaces.v1.TagOrBuilder.tagCountOrNull: bilibili.web.interfaces.v1.TagCount?
  get() = if (hasTagCount()) getTagCount() else null

