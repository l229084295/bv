// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/web/interfaces/v1/interfaces.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.web.interfaces.v1;

@kotlin.jvm.JvmName("-initializestat")
public inline fun stat(block: bilibili.web.interfaces.v1.StatKt.Dsl.() -> kotlin.Unit): bilibili.web.interfaces.v1.Stat =
  bilibili.web.interfaces.v1.StatKt.Dsl._create(bilibili.web.interfaces.v1.Stat.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.web.interfaces.v1.Stat`
 */
public object StatKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.web.interfaces.v1.Stat.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.web.interfaces.v1.Stat.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.web.interfaces.v1.Stat = _builder.build()

    /**
     * ```
     * ```
     *
     * `int64 aid = 1;`
     */
    public var aid: kotlin.Long
      @JvmName("getAid")
      get() = _builder.getAid()
      @JvmName("setAid")
      set(value) {
        _builder.setAid(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 aid = 1;`
     */
    public fun clearAid() {
      _builder.clearAid()
    }

    /**
     * ```
     * ```
     *
     * `int32 view = 2;`
     */
    public var view: kotlin.Int
      @JvmName("getView")
      get() = _builder.getView()
      @JvmName("setView")
      set(value) {
        _builder.setView(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 view = 2;`
     */
    public fun clearView() {
      _builder.clearView()
    }

    /**
     * ```
     * ```
     *
     * `int32 danmaku = 3;`
     */
    public var danmaku: kotlin.Int
      @JvmName("getDanmaku")
      get() = _builder.getDanmaku()
      @JvmName("setDanmaku")
      set(value) {
        _builder.setDanmaku(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 danmaku = 3;`
     */
    public fun clearDanmaku() {
      _builder.clearDanmaku()
    }

    /**
     * ```
     * ```
     *
     * `int32 reply = 4;`
     */
    public var reply: kotlin.Int
      @JvmName("getReply")
      get() = _builder.getReply()
      @JvmName("setReply")
      set(value) {
        _builder.setReply(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 reply = 4;`
     */
    public fun clearReply() {
      _builder.clearReply()
    }

    /**
     * ```
     * ```
     *
     * `int32 fav = 5;`
     */
    public var fav: kotlin.Int
      @JvmName("getFav")
      get() = _builder.getFav()
      @JvmName("setFav")
      set(value) {
        _builder.setFav(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 fav = 5;`
     */
    public fun clearFav() {
      _builder.clearFav()
    }

    /**
     * ```
     * ```
     *
     * `int32 coin = 6;`
     */
    public var coin: kotlin.Int
      @JvmName("getCoin")
      get() = _builder.getCoin()
      @JvmName("setCoin")
      set(value) {
        _builder.setCoin(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 coin = 6;`
     */
    public fun clearCoin() {
      _builder.clearCoin()
    }

    /**
     * ```
     * ```
     *
     * `int32 share = 7;`
     */
    public var share: kotlin.Int
      @JvmName("getShare")
      get() = _builder.getShare()
      @JvmName("setShare")
      set(value) {
        _builder.setShare(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 share = 7;`
     */
    public fun clearShare() {
      _builder.clearShare()
    }

    /**
     * ```
     * ```
     *
     * `int32 now_rank = 8;`
     */
    public var nowRank: kotlin.Int
      @JvmName("getNowRank")
      get() = _builder.getNowRank()
      @JvmName("setNowRank")
      set(value) {
        _builder.setNowRank(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 now_rank = 8;`
     */
    public fun clearNowRank() {
      _builder.clearNowRank()
    }

    /**
     * ```
     * ```
     *
     * `int32 his_rank = 9;`
     */
    public var hisRank: kotlin.Int
      @JvmName("getHisRank")
      get() = _builder.getHisRank()
      @JvmName("setHisRank")
      set(value) {
        _builder.setHisRank(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 his_rank = 9;`
     */
    public fun clearHisRank() {
      _builder.clearHisRank()
    }

    /**
     * ```
     * ```
     *
     * `int32 like = 10;`
     */
    public var like: kotlin.Int
      @JvmName("getLike")
      get() = _builder.getLike()
      @JvmName("setLike")
      set(value) {
        _builder.setLike(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 like = 10;`
     */
    public fun clearLike() {
      _builder.clearLike()
    }

    /**
     * ```
     * ```
     *
     * `int32 dislike = 11;`
     */
    public var dislike: kotlin.Int
      @JvmName("getDislike")
      get() = _builder.getDislike()
      @JvmName("setDislike")
      set(value) {
        _builder.setDislike(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 dislike = 11;`
     */
    public fun clearDislike() {
      _builder.clearDislike()
    }

    /**
     * ```
     * ```
     *
     * `string evaluation = 12;`
     */
    public var evaluation: kotlin.String
      @JvmName("getEvaluation")
      get() = _builder.getEvaluation()
      @JvmName("setEvaluation")
      set(value) {
        _builder.setEvaluation(value)
      }
    /**
     * ```
     * ```
     *
     * `string evaluation = 12;`
     */
    public fun clearEvaluation() {
      _builder.clearEvaluation()
    }

    /**
     * ```
     * ```
     *
     * `string argue_msg = 13;`
     */
    public var argueMsg: kotlin.String
      @JvmName("getArgueMsg")
      get() = _builder.getArgueMsg()
      @JvmName("setArgueMsg")
      set(value) {
        _builder.setArgueMsg(value)
      }
    /**
     * ```
     * ```
     *
     * `string argue_msg = 13;`
     */
    public fun clearArgueMsg() {
      _builder.clearArgueMsg()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.web.interfaces.v1.Stat.copy(block: `bilibili.web.interfaces.v1`.StatKt.Dsl.() -> kotlin.Unit): bilibili.web.interfaces.v1.Stat =
  `bilibili.web.interfaces.v1`.StatKt.Dsl._create(this.toBuilder()).apply { block() }._build()

