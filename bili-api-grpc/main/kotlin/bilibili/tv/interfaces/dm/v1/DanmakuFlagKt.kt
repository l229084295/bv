// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/tv/interfaces/dm/v1/dm.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.tv.interfaces.dm.v1;

@kotlin.jvm.JvmName("-initializedanmakuFlag")
public inline fun danmakuFlag(block: bilibili.tv.interfaces.dm.v1.DanmakuFlagKt.Dsl.() -> kotlin.Unit): bilibili.tv.interfaces.dm.v1.DanmakuFlag =
  bilibili.tv.interfaces.dm.v1.DanmakuFlagKt.Dsl._create(bilibili.tv.interfaces.dm.v1.DanmakuFlag.newBuilder()).apply { block() }._build()
/**
 * ```
 * 弹幕ai云屏蔽条目
 * ```
 *
 * Protobuf type `bilibili.tv.interfaces.dm.v1.DanmakuFlag`
 */
public object DanmakuFlagKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.tv.interfaces.dm.v1.DanmakuFlag.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.tv.interfaces.dm.v1.DanmakuFlag.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.tv.interfaces.dm.v1.DanmakuFlag = _builder.build()

    /**
     * ```
     * 弹幕dmid
     * ```
     *
     * `int64 dmid = 1;`
     */
    public var dmid: kotlin.Long
      @JvmName("getDmid")
      get() = _builder.getDmid()
      @JvmName("setDmid")
      set(value) {
        _builder.setDmid(value)
      }
    /**
     * ```
     * 弹幕dmid
     * ```
     *
     * `int64 dmid = 1;`
     */
    public fun clearDmid() {
      _builder.clearDmid()
    }

    /**
     * ```
     * 评分
     * ```
     *
     * `uint32 flag = 2;`
     */
    public var flag: kotlin.Int
      @JvmName("getFlag")
      get() = _builder.getFlag()
      @JvmName("setFlag")
      set(value) {
        _builder.setFlag(value)
      }
    /**
     * ```
     * 评分
     * ```
     *
     * `uint32 flag = 2;`
     */
    public fun clearFlag() {
      _builder.clearFlag()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.tv.interfaces.dm.v1.DanmakuFlag.copy(block: `bilibili.tv.interfaces.dm.v1`.DanmakuFlagKt.Dsl.() -> kotlin.Unit): bilibili.tv.interfaces.dm.v1.DanmakuFlag =
  `bilibili.tv.interfaces.dm.v1`.DanmakuFlagKt.Dsl._create(this.toBuilder()).apply { block() }._build()

