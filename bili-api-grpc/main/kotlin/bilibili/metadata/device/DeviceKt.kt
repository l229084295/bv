// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/metadata/device/device.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.metadata.device;

@kotlin.jvm.JvmName("-initializedevice")
public inline fun device(block: bilibili.metadata.device.DeviceKt.Dsl.() -> kotlin.Unit): bilibili.metadata.device.Device =
  bilibili.metadata.device.DeviceKt.Dsl._create(bilibili.metadata.device.Device.newBuilder()).apply { block() }._build()
/**
 * ```
 * 设备信息
 * gRPC头部:x-bili-device-bin
 * ```
 *
 * Protobuf type `bilibili.metadata.device.Device`
 */
public object DeviceKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.metadata.device.Device.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.metadata.device.Device.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.metadata.device.Device = _builder.build()

    /**
     * ```
     * 产品id
     * 粉 白 蓝 直播姬 HD 海外 OTT 漫画 TV野版 小视频 网易漫画 网易漫画 网易漫画HD 国际版 东南亚版
     * 1  2  3    4    5   6    7   8     9     10      11       12       13       14       30
     * ```
     *
     * `int32 app_id = 1;`
     */
    public var appId: kotlin.Int
      @JvmName("getAppId")
      get() = _builder.getAppId()
      @JvmName("setAppId")
      set(value) {
        _builder.setAppId(value)
      }
    /**
     * ```
     * 产品id
     * 粉 白 蓝 直播姬 HD 海外 OTT 漫画 TV野版 小视频 网易漫画 网易漫画 网易漫画HD 国际版 东南亚版
     * 1  2  3    4    5   6    7   8     9     10      11       12       13       14       30
     * ```
     *
     * `int32 app_id = 1;`
     */
    public fun clearAppId() {
      _builder.clearAppId()
    }

    /**
     * ```
     * 构建id
     * ```
     *
     * `int32 build = 2;`
     */
    public var build: kotlin.Int
      @JvmName("getBuild")
      get() = _builder.getBuild()
      @JvmName("setBuild")
      set(value) {
        _builder.setBuild(value)
      }
    /**
     * ```
     * 构建id
     * ```
     *
     * `int32 build = 2;`
     */
    public fun clearBuild() {
      _builder.clearBuild()
    }

    /**
     * ```
     * 设备buvid
     * ```
     *
     * `string buvid = 3;`
     */
    public var buvid: kotlin.String
      @JvmName("getBuvid")
      get() = _builder.getBuvid()
      @JvmName("setBuvid")
      set(value) {
        _builder.setBuvid(value)
      }
    /**
     * ```
     * 设备buvid
     * ```
     *
     * `string buvid = 3;`
     */
    public fun clearBuvid() {
      _builder.clearBuvid()
    }

    /**
     * ```
     * 包类型
     * ```
     *
     * `string mobi_app = 4;`
     */
    public var mobiApp: kotlin.String
      @JvmName("getMobiApp")
      get() = _builder.getMobiApp()
      @JvmName("setMobiApp")
      set(value) {
        _builder.setMobiApp(value)
      }
    /**
     * ```
     * 包类型
     * ```
     *
     * `string mobi_app = 4;`
     */
    public fun clearMobiApp() {
      _builder.clearMobiApp()
    }

    /**
     * ```
     * 平台类型
     * ios android
     * ```
     *
     * `string platform = 5;`
     */
    public var platform: kotlin.String
      @JvmName("getPlatform")
      get() = _builder.getPlatform()
      @JvmName("setPlatform")
      set(value) {
        _builder.setPlatform(value)
      }
    /**
     * ```
     * 平台类型
     * ios android
     * ```
     *
     * `string platform = 5;`
     */
    public fun clearPlatform() {
      _builder.clearPlatform()
    }

    /**
     * ```
     * 设备类型
     * ```
     *
     * `string device = 6;`
     */
    public var device: kotlin.String
      @JvmName("getDevice")
      get() = _builder.getDevice()
      @JvmName("setDevice")
      set(value) {
        _builder.setDevice(value)
      }
    /**
     * ```
     * 设备类型
     * ```
     *
     * `string device = 6;`
     */
    public fun clearDevice() {
      _builder.clearDevice()
    }

    /**
     * ```
     * 渠道
     * ```
     *
     * `string channel = 7;`
     */
    public var channel: kotlin.String
      @JvmName("getChannel")
      get() = _builder.getChannel()
      @JvmName("setChannel")
      set(value) {
        _builder.setChannel(value)
      }
    /**
     * ```
     * 渠道
     * ```
     *
     * `string channel = 7;`
     */
    public fun clearChannel() {
      _builder.clearChannel()
    }

    /**
     * ```
     * 手机品牌
     * ```
     *
     * `string brand = 8;`
     */
    public var brand: kotlin.String
      @JvmName("getBrand")
      get() = _builder.getBrand()
      @JvmName("setBrand")
      set(value) {
        _builder.setBrand(value)
      }
    /**
     * ```
     * 手机品牌
     * ```
     *
     * `string brand = 8;`
     */
    public fun clearBrand() {
      _builder.clearBrand()
    }

    /**
     * ```
     * 手机型号
     * ```
     *
     * `string model = 9;`
     */
    public var model: kotlin.String
      @JvmName("getModel")
      get() = _builder.getModel()
      @JvmName("setModel")
      set(value) {
        _builder.setModel(value)
      }
    /**
     * ```
     * 手机型号
     * ```
     *
     * `string model = 9;`
     */
    public fun clearModel() {
      _builder.clearModel()
    }

    /**
     * ```
     * 系统版本
     * ```
     *
     * `string osver = 10;`
     */
    public var osver: kotlin.String
      @JvmName("getOsver")
      get() = _builder.getOsver()
      @JvmName("setOsver")
      set(value) {
        _builder.setOsver(value)
      }
    /**
     * ```
     * 系统版本
     * ```
     *
     * `string osver = 10;`
     */
    public fun clearOsver() {
      _builder.clearOsver()
    }

    /**
     * ```
     * 本地设备指纹
     * ```
     *
     * `string fp_local = 11;`
     */
    public var fpLocal: kotlin.String
      @JvmName("getFpLocal")
      get() = _builder.getFpLocal()
      @JvmName("setFpLocal")
      set(value) {
        _builder.setFpLocal(value)
      }
    /**
     * ```
     * 本地设备指纹
     * ```
     *
     * `string fp_local = 11;`
     */
    public fun clearFpLocal() {
      _builder.clearFpLocal()
    }

    /**
     * ```
     * 远程设备指纹
     * ```
     *
     * `string fp_remote = 12;`
     */
    public var fpRemote: kotlin.String
      @JvmName("getFpRemote")
      get() = _builder.getFpRemote()
      @JvmName("setFpRemote")
      set(value) {
        _builder.setFpRemote(value)
      }
    /**
     * ```
     * 远程设备指纹
     * ```
     *
     * `string fp_remote = 12;`
     */
    public fun clearFpRemote() {
      _builder.clearFpRemote()
    }

    /**
     * ```
     * APP版本号
     * ```
     *
     * `string version_name = 13;`
     */
    public var versionName: kotlin.String
      @JvmName("getVersionName")
      get() = _builder.getVersionName()
      @JvmName("setVersionName")
      set(value) {
        _builder.setVersionName(value)
      }
    /**
     * ```
     * APP版本号
     * ```
     *
     * `string version_name = 13;`
     */
    public fun clearVersionName() {
      _builder.clearVersionName()
    }

    /**
     * ```
     * 设备指纹, 不区分本地或远程设备指纹，作为推送目标的索引
     * ```
     *
     * `string fp = 14;`
     */
    public var fp: kotlin.String
      @JvmName("getFp")
      get() = _builder.getFp()
      @JvmName("setFp")
      set(value) {
        _builder.setFp(value)
      }
    /**
     * ```
     * 设备指纹, 不区分本地或远程设备指纹，作为推送目标的索引
     * ```
     *
     * `string fp = 14;`
     */
    public fun clearFp() {
      _builder.clearFp()
    }

    /**
     * ```
     * 首次启动时的毫秒时间戳
     * ```
     *
     * `int64 fts = 15;`
     */
    public var fts: kotlin.Long
      @JvmName("getFts")
      get() = _builder.getFts()
      @JvmName("setFts")
      set(value) {
        _builder.setFts(value)
      }
    /**
     * ```
     * 首次启动时的毫秒时间戳
     * ```
     *
     * `int64 fts = 15;`
     */
    public fun clearFts() {
      _builder.clearFts()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.metadata.device.Device.copy(block: `bilibili.metadata.device`.DeviceKt.Dsl.() -> kotlin.Unit): bilibili.metadata.device.Device =
  `bilibili.metadata.device`.DeviceKt.Dsl._create(this.toBuilder()).apply { block() }._build()

