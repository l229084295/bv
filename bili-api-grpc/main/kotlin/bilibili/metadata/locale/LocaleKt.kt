// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/metadata/locale/locale.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.metadata.locale;

@kotlin.jvm.JvmName("-initializelocale")
public inline fun locale(block: bilibili.metadata.locale.LocaleKt.Dsl.() -> kotlin.Unit): bilibili.metadata.locale.Locale =
  bilibili.metadata.locale.LocaleKt.Dsl._create(bilibili.metadata.locale.Locale.newBuilder()).apply { block() }._build()
/**
 * ```
 * 区域标识
 * gRPC头部:x-bili-locale-bin
 * ```
 *
 * Protobuf type `bilibili.metadata.locale.Locale`
 */
public object LocaleKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.metadata.locale.Locale.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.metadata.locale.Locale.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.metadata.locale.Locale = _builder.build()

    /**
     * ```
     * App设置的locale
     * ```
     *
     * `.bilibili.metadata.locale.LocaleIds c_locale = 1;`
     */
    public var cLocale: bilibili.metadata.locale.LocaleIds
      @JvmName("getCLocale")
      get() = _builder.getCLocale()
      @JvmName("setCLocale")
      set(value) {
        _builder.setCLocale(value)
      }
    /**
     * ```
     * App设置的locale
     * ```
     *
     * `.bilibili.metadata.locale.LocaleIds c_locale = 1;`
     */
    public fun clearCLocale() {
      _builder.clearCLocale()
    }
    /**
     * ```
     * App设置的locale
     * ```
     *
     * `.bilibili.metadata.locale.LocaleIds c_locale = 1;`
     * @return Whether the cLocale field is set.
     */
    public fun hasCLocale(): kotlin.Boolean {
      return _builder.hasCLocale()
    }
    public val LocaleKt.Dsl.cLocaleOrNull: bilibili.metadata.locale.LocaleIds?
      get() = _builder.cLocaleOrNull

    /**
     * ```
     * 系统默认的locale
     * ```
     *
     * `.bilibili.metadata.locale.LocaleIds s_locale = 2;`
     */
    public var sLocale: bilibili.metadata.locale.LocaleIds
      @JvmName("getSLocale")
      get() = _builder.getSLocale()
      @JvmName("setSLocale")
      set(value) {
        _builder.setSLocale(value)
      }
    /**
     * ```
     * 系统默认的locale
     * ```
     *
     * `.bilibili.metadata.locale.LocaleIds s_locale = 2;`
     */
    public fun clearSLocale() {
      _builder.clearSLocale()
    }
    /**
     * ```
     * 系统默认的locale
     * ```
     *
     * `.bilibili.metadata.locale.LocaleIds s_locale = 2;`
     * @return Whether the sLocale field is set.
     */
    public fun hasSLocale(): kotlin.Boolean {
      return _builder.hasSLocale()
    }
    public val LocaleKt.Dsl.sLocaleOrNull: bilibili.metadata.locale.LocaleIds?
      get() = _builder.sLocaleOrNull

    /**
     * ```
     * sim卡的国家码+运营商码
     * ```
     *
     * `string sim_code = 3;`
     */
    public var simCode: kotlin.String
      @JvmName("getSimCode")
      get() = _builder.getSimCode()
      @JvmName("setSimCode")
      set(value) {
        _builder.setSimCode(value)
      }
    /**
     * ```
     * sim卡的国家码+运营商码
     * ```
     *
     * `string sim_code = 3;`
     */
    public fun clearSimCode() {
      _builder.clearSimCode()
    }

    /**
     * ```
     * 时区
     * ```
     *
     * `string timezone = 4;`
     */
    public var timezone: kotlin.String
      @JvmName("getTimezone")
      get() = _builder.getTimezone()
      @JvmName("setTimezone")
      set(value) {
        _builder.setTimezone(value)
      }
    /**
     * ```
     * 时区
     * ```
     *
     * `string timezone = 4;`
     */
    public fun clearTimezone() {
      _builder.clearTimezone()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.metadata.locale.Locale.copy(block: `bilibili.metadata.locale`.LocaleKt.Dsl.() -> kotlin.Unit): bilibili.metadata.locale.Locale =
  `bilibili.metadata.locale`.LocaleKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.metadata.locale.LocaleOrBuilder.cLocaleOrNull: bilibili.metadata.locale.LocaleIds?
  get() = if (hasCLocale()) getCLocale() else null

public val bilibili.metadata.locale.LocaleOrBuilder.sLocaleOrNull: bilibili.metadata.locale.LocaleIds?
  get() = if (hasSLocale()) getSLocale() else null

