// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/metadata/locale/locale.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.metadata.locale;

@kotlin.jvm.JvmName("-initializelocaleIds")
public inline fun localeIds(block: bilibili.metadata.locale.LocaleIdsKt.Dsl.() -> kotlin.Unit): bilibili.metadata.locale.LocaleIds =
  bilibili.metadata.locale.LocaleIdsKt.Dsl._create(bilibili.metadata.locale.LocaleIds.newBuilder()).apply { block() }._build()
/**
 * ```
 * Defined by https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPInternational/LanguageandLocaleIDs/LanguageandLocaleIDs.html
 * ```
 *
 * Protobuf type `bilibili.metadata.locale.LocaleIds`
 */
public object LocaleIdsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.metadata.locale.LocaleIds.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.metadata.locale.LocaleIds.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.metadata.locale.LocaleIds = _builder.build()

    /**
     * ```
     * A language designator is a code that represents a language.
     * ```
     *
     * `string language = 1;`
     */
    public var language: kotlin.String
      @JvmName("getLanguage")
      get() = _builder.getLanguage()
      @JvmName("setLanguage")
      set(value) {
        _builder.setLanguage(value)
      }
    /**
     * ```
     * A language designator is a code that represents a language.
     * ```
     *
     * `string language = 1;`
     */
    public fun clearLanguage() {
      _builder.clearLanguage()
    }

    /**
     * ```
     * Writing systems.
     * ```
     *
     * `string script = 2;`
     */
    public var script: kotlin.String
      @JvmName("getScript")
      get() = _builder.getScript()
      @JvmName("setScript")
      set(value) {
        _builder.setScript(value)
      }
    /**
     * ```
     * Writing systems.
     * ```
     *
     * `string script = 2;`
     */
    public fun clearScript() {
      _builder.clearScript()
    }

    /**
     * ```
     * A region designator is a code that represents a country or an area.
     * ```
     *
     * `string region = 3;`
     */
    public var region: kotlin.String
      @JvmName("getRegion")
      get() = _builder.getRegion()
      @JvmName("setRegion")
      set(value) {
        _builder.setRegion(value)
      }
    /**
     * ```
     * A region designator is a code that represents a country or an area.
     * ```
     *
     * `string region = 3;`
     */
    public fun clearRegion() {
      _builder.clearRegion()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.metadata.locale.LocaleIds.copy(block: `bilibili.metadata.locale`.LocaleIdsKt.Dsl.() -> kotlin.Unit): bilibili.metadata.locale.LocaleIds =
  `bilibili.metadata.locale`.LocaleIdsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

