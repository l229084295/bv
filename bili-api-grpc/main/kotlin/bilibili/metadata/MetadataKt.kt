// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/metadata/metadata.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.metadata;

@kotlin.jvm.JvmName("-initializemetadata")
public inline fun metadata(block: bilibili.metadata.MetadataKt.Dsl.() -> kotlin.Unit): bilibili.metadata.Metadata =
  bilibili.metadata.MetadataKt.Dsl._create(bilibili.metadata.Metadata.newBuilder()).apply { block() }._build()
/**
 * ```
 * 请求元数据
 * gRPC头部:x-bili-metadata-bin
 * ```
 *
 * Protobuf type `bilibili.metadata.Metadata`
 */
public object MetadataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.metadata.Metadata.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.metadata.Metadata.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.metadata.Metadata = _builder.build()

    /**
     * ```
     * 登录 access_key
     * ```
     *
     * `string access_key = 1;`
     */
    public var accessKey: kotlin.String
      @JvmName("getAccessKey")
      get() = _builder.getAccessKey()
      @JvmName("setAccessKey")
      set(value) {
        _builder.setAccessKey(value)
      }
    /**
     * ```
     * 登录 access_key
     * ```
     *
     * `string access_key = 1;`
     */
    public fun clearAccessKey() {
      _builder.clearAccessKey()
    }

    /**
     * ```
     * 包类型, 如 `android`
     * ```
     *
     * `string mobi_app = 2;`
     */
    public var mobiApp: kotlin.String
      @JvmName("getMobiApp")
      get() = _builder.getMobiApp()
      @JvmName("setMobiApp")
      set(value) {
        _builder.setMobiApp(value)
      }
    /**
     * ```
     * 包类型, 如 `android`
     * ```
     *
     * `string mobi_app = 2;`
     */
    public fun clearMobiApp() {
      _builder.clearMobiApp()
    }

    /**
     * ```
     * 运行设备, 留空即可
     * ```
     *
     * `string device = 3;`
     */
    public var device: kotlin.String
      @JvmName("getDevice")
      get() = _builder.getDevice()
      @JvmName("setDevice")
      set(value) {
        _builder.setDevice(value)
      }
    /**
     * ```
     * 运行设备, 留空即可
     * ```
     *
     * `string device = 3;`
     */
    public fun clearDevice() {
      _builder.clearDevice()
    }

    /**
     * ```
     * 构建id, 如 `7380300`
     * ```
     *
     * `int32 build = 4;`
     */
    public var build: kotlin.Int
      @JvmName("getBuild")
      get() = _builder.getBuild()
      @JvmName("setBuild")
      set(value) {
        _builder.setBuild(value)
      }
    /**
     * ```
     * 构建id, 如 `7380300`
     * ```
     *
     * `int32 build = 4;`
     */
    public fun clearBuild() {
      _builder.clearBuild()
    }

    /**
     * ```
     * APP分发渠道, 如 `master`
     * ```
     *
     * `string channel = 5;`
     */
    public var channel: kotlin.String
      @JvmName("getChannel")
      get() = _builder.getChannel()
      @JvmName("setChannel")
      set(value) {
        _builder.setChannel(value)
      }
    /**
     * ```
     * APP分发渠道, 如 `master`
     * ```
     *
     * `string channel = 5;`
     */
    public fun clearChannel() {
      _builder.clearChannel()
    }

    /**
     * ```
     * 设备唯一标识
     * ```
     *
     * `string buvid = 6;`
     */
    public var buvid: kotlin.String
      @JvmName("getBuvid")
      get() = _builder.getBuvid()
      @JvmName("setBuvid")
      set(value) {
        _builder.setBuvid(value)
      }
    /**
     * ```
     * 设备唯一标识
     * ```
     *
     * `string buvid = 6;`
     */
    public fun clearBuvid() {
      _builder.clearBuvid()
    }

    /**
     * ```
     * 平台类型, 如 `android`
     * ```
     *
     * `string platform = 7;`
     */
    public var platform: kotlin.String
      @JvmName("getPlatform")
      get() = _builder.getPlatform()
      @JvmName("setPlatform")
      set(value) {
        _builder.setPlatform(value)
      }
    /**
     * ```
     * 平台类型, 如 `android`
     * ```
     *
     * `string platform = 7;`
     */
    public fun clearPlatform() {
      _builder.clearPlatform()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.metadata.Metadata.copy(block: `bilibili.metadata`.MetadataKt.Dsl.() -> kotlin.Unit): bilibili.metadata.Metadata =
  `bilibili.metadata`.MetadataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

