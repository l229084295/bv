// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/metadata/fawkes/fawkes.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.metadata.fawkes;

@kotlin.jvm.JvmName("-initializefawkesReq")
public inline fun fawkesReq(block: bilibili.metadata.fawkes.FawkesReqKt.Dsl.() -> kotlin.Unit): bilibili.metadata.fawkes.FawkesReq =
  bilibili.metadata.fawkes.FawkesReqKt.Dsl._create(bilibili.metadata.fawkes.FawkesReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.metadata.fawkes.FawkesReq`
 */
public object FawkesReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.metadata.fawkes.FawkesReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.metadata.fawkes.FawkesReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.metadata.fawkes.FawkesReq = _builder.build()

    /**
     * ```
     * 客户端在fawkes系统的唯一名, 如 `android64`
     * ```
     *
     * `string appkey = 1;`
     */
    public var appkey: kotlin.String
      @JvmName("getAppkey")
      get() = _builder.getAppkey()
      @JvmName("setAppkey")
      set(value) {
        _builder.setAppkey(value)
      }
    /**
     * ```
     * 客户端在fawkes系统的唯一名, 如 `android64`
     * ```
     *
     * `string appkey = 1;`
     */
    public fun clearAppkey() {
      _builder.clearAppkey()
    }

    /**
     * ```
     * 客户端在fawkes系统中的环境参数, 如 `prod`
     * ```
     *
     * `string env = 2;`
     */
    public var env: kotlin.String
      @JvmName("getEnv")
      get() = _builder.getEnv()
      @JvmName("setEnv")
      set(value) {
        _builder.setEnv(value)
      }
    /**
     * ```
     * 客户端在fawkes系统中的环境参数, 如 `prod`
     * ```
     *
     * `string env = 2;`
     */
    public fun clearEnv() {
      _builder.clearEnv()
    }

    /**
     * ```
     * 启动id, 8 位 0~9, a~z 组成的字符串
     * ```
     *
     * `string session_id = 3;`
     */
    public var sessionId: kotlin.String
      @JvmName("getSessionId")
      get() = _builder.getSessionId()
      @JvmName("setSessionId")
      set(value) {
        _builder.setSessionId(value)
      }
    /**
     * ```
     * 启动id, 8 位 0~9, a~z 组成的字符串
     * ```
     *
     * `string session_id = 3;`
     */
    public fun clearSessionId() {
      _builder.clearSessionId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.metadata.fawkes.FawkesReq.copy(block: `bilibili.metadata.fawkes`.FawkesReqKt.Dsl.() -> kotlin.Unit): bilibili.metadata.fawkes.FawkesReq =
  `bilibili.metadata.fawkes`.FawkesReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

