// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/pagination/pagination.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.pagination;

@kotlin.jvm.JvmName("-initializepaginationReply")
public inline fun paginationReply(block: bilibili.pagination.PaginationReplyKt.Dsl.() -> kotlin.Unit): bilibili.pagination.PaginationReply =
  bilibili.pagination.PaginationReplyKt.Dsl._create(bilibili.pagination.PaginationReply.newBuilder()).apply { block() }._build()
/**
 * ```
 * 分页信息
 * ```
 *
 * Protobuf type `bilibili.pagination.PaginationReply`
 */
public object PaginationReplyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.pagination.PaginationReply.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.pagination.PaginationReply.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.pagination.PaginationReply = _builder.build()

    /**
     * ```
     * ```
     *
     * `string next = 1;`
     */
    public var next: kotlin.String
      @JvmName("getNext")
      get() = _builder.getNext()
      @JvmName("setNext")
      set(value) {
        _builder.setNext(value)
      }
    /**
     * ```
     * ```
     *
     * `string next = 1;`
     */
    public fun clearNext() {
      _builder.clearNext()
    }

    /**
     * ```
     * ```
     *
     * `string prev = 2;`
     */
    public var prev: kotlin.String
      @JvmName("getPrev")
      get() = _builder.getPrev()
      @JvmName("setPrev")
      set(value) {
        _builder.setPrev(value)
      }
    /**
     * ```
     * ```
     *
     * `string prev = 2;`
     */
    public fun clearPrev() {
      _builder.clearPrev()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.pagination.PaginationReply.copy(block: `bilibili.pagination`.PaginationReplyKt.Dsl.() -> kotlin.Unit): bilibili.pagination.PaginationReply =
  `bilibili.pagination`.PaginationReplyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

