// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/interfaces/feed/v1/api.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.main.dynamic.feed.v1;

@kotlin.jvm.JvmName("-initializecreateDynReq")
public inline fun createDynReq(block: bilibili.main.dynamic.feed.v1.CreateDynReqKt.Dsl.() -> kotlin.Unit): bilibili.main.dynamic.feed.v1.CreateDynReq =
  bilibili.main.dynamic.feed.v1.CreateDynReqKt.Dsl._create(bilibili.main.dynamic.feed.v1.CreateDynReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * 创建动态-请求
 * ```
 *
 * Protobuf type `bilibili.main.dynamic.feed.v1.CreateDynReq`
 */
public object CreateDynReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.main.dynamic.feed.v1.CreateDynReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.main.dynamic.feed.v1.CreateDynReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.main.dynamic.feed.v1.CreateDynReq = _builder.build()

    /**
     * ```
     * 用户创建接口meta信息
     * ```
     *
     * `.bilibili.dynamic.UserCreateMeta meta = 1;`
     */
    public var meta: bilibili.dynamic.UserCreateMeta
      @JvmName("getMeta")
      get() = _builder.getMeta()
      @JvmName("setMeta")
      set(value) {
        _builder.setMeta(value)
      }
    /**
     * ```
     * 用户创建接口meta信息
     * ```
     *
     * `.bilibili.dynamic.UserCreateMeta meta = 1;`
     */
    public fun clearMeta() {
      _builder.clearMeta()
    }
    /**
     * ```
     * 用户创建接口meta信息
     * ```
     *
     * `.bilibili.dynamic.UserCreateMeta meta = 1;`
     * @return Whether the meta field is set.
     */
    public fun hasMeta(): kotlin.Boolean {
      return _builder.hasMeta()
    }
    public val CreateDynReqKt.Dsl.metaOrNull: bilibili.dynamic.UserCreateMeta?
      get() = _builder.metaOrNull

    /**
     * ```
     * 发布的内容
     * ```
     *
     * `.bilibili.dynamic.CreateContent content = 2;`
     */
    public var content: bilibili.dynamic.CreateContent
      @JvmName("getContent")
      get() = _builder.getContent()
      @JvmName("setContent")
      set(value) {
        _builder.setContent(value)
      }
    /**
     * ```
     * 发布的内容
     * ```
     *
     * `.bilibili.dynamic.CreateContent content = 2;`
     */
    public fun clearContent() {
      _builder.clearContent()
    }
    /**
     * ```
     * 发布的内容
     * ```
     *
     * `.bilibili.dynamic.CreateContent content = 2;`
     * @return Whether the content field is set.
     */
    public fun hasContent(): kotlin.Boolean {
      return _builder.hasContent()
    }
    public val CreateDynReqKt.Dsl.contentOrNull: bilibili.dynamic.CreateContent?
      get() = _builder.contentOrNull

    /**
     * ```
     * 发布类型
     * ```
     *
     * `.bilibili.dynamic.CreateScene scene = 3;`
     */
    public var scene: bilibili.dynamic.CreateScene
      @JvmName("getScene")
      get() = _builder.getScene()
      @JvmName("setScene")
      set(value) {
        _builder.setScene(value)
      }
    public var sceneValue: kotlin.Int
      @JvmName("getSceneValue")
      get() = _builder.getSceneValue()
      @JvmName("setSceneValue")
      set(value) {
        _builder.setSceneValue(value)
      }
    /**
     * ```
     * 发布类型
     * ```
     *
     * `.bilibili.dynamic.CreateScene scene = 3;`
     */
    public fun clearScene() {
      _builder.clearScene()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PicsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * 图片内容
     * ```
     *
     * `repeated .bilibili.dynamic.CreatePic pics = 4;`
     */
     public val pics: com.google.protobuf.kotlin.DslList<bilibili.dynamic.CreatePic, PicsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPicsList()
      )
    /**
     * ```
     * 图片内容
     * ```
     *
     * `repeated .bilibili.dynamic.CreatePic pics = 4;`
     * @param value The pics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPics")
    public fun com.google.protobuf.kotlin.DslList<bilibili.dynamic.CreatePic, PicsProxy>.add(value: bilibili.dynamic.CreatePic) {
      _builder.addPics(value)
    }
    /**
     * ```
     * 图片内容
     * ```
     *
     * `repeated .bilibili.dynamic.CreatePic pics = 4;`
     * @param value The pics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPics")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bilibili.dynamic.CreatePic, PicsProxy>.plusAssign(value: bilibili.dynamic.CreatePic) {
      add(value)
    }
    /**
     * ```
     * 图片内容
     * ```
     *
     * `repeated .bilibili.dynamic.CreatePic pics = 4;`
     * @param values The pics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPics")
    public fun com.google.protobuf.kotlin.DslList<bilibili.dynamic.CreatePic, PicsProxy>.addAll(values: kotlin.collections.Iterable<bilibili.dynamic.CreatePic>) {
      _builder.addAllPics(values)
    }
    /**
     * ```
     * 图片内容
     * ```
     *
     * `repeated .bilibili.dynamic.CreatePic pics = 4;`
     * @param values The pics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPics")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bilibili.dynamic.CreatePic, PicsProxy>.plusAssign(values: kotlin.collections.Iterable<bilibili.dynamic.CreatePic>) {
      addAll(values)
    }
    /**
     * ```
     * 图片内容
     * ```
     *
     * `repeated .bilibili.dynamic.CreatePic pics = 4;`
     * @param index The index to set the value at.
     * @param value The pics to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPics")
    public operator fun com.google.protobuf.kotlin.DslList<bilibili.dynamic.CreatePic, PicsProxy>.set(index: kotlin.Int, value: bilibili.dynamic.CreatePic) {
      _builder.setPics(index, value)
    }
    /**
     * ```
     * 图片内容
     * ```
     *
     * `repeated .bilibili.dynamic.CreatePic pics = 4;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPics")
    public fun com.google.protobuf.kotlin.DslList<bilibili.dynamic.CreatePic, PicsProxy>.clear() {
      _builder.clearPics()
    }


    /**
     * ```
     * 转发源
     * ```
     *
     * `.bilibili.dynamic.DynIdentity repost_src = 5;`
     */
    public var repostSrc: bilibili.dynamic.DynIdentity
      @JvmName("getRepostSrc")
      get() = _builder.getRepostSrc()
      @JvmName("setRepostSrc")
      set(value) {
        _builder.setRepostSrc(value)
      }
    /**
     * ```
     * 转发源
     * ```
     *
     * `.bilibili.dynamic.DynIdentity repost_src = 5;`
     */
    public fun clearRepostSrc() {
      _builder.clearRepostSrc()
    }
    /**
     * ```
     * 转发源
     * ```
     *
     * `.bilibili.dynamic.DynIdentity repost_src = 5;`
     * @return Whether the repostSrc field is set.
     */
    public fun hasRepostSrc(): kotlin.Boolean {
      return _builder.hasRepostSrc()
    }
    public val CreateDynReqKt.Dsl.repostSrcOrNull: bilibili.dynamic.DynIdentity?
      get() = _builder.repostSrcOrNull

    /**
     * ```
     * 动态视频
     * ```
     *
     * `.bilibili.dynamic.CreateDynVideo video = 6;`
     */
    public var video: bilibili.dynamic.CreateDynVideo
      @JvmName("getVideo")
      get() = _builder.getVideo()
      @JvmName("setVideo")
      set(value) {
        _builder.setVideo(value)
      }
    /**
     * ```
     * 动态视频
     * ```
     *
     * `.bilibili.dynamic.CreateDynVideo video = 6;`
     */
    public fun clearVideo() {
      _builder.clearVideo()
    }
    /**
     * ```
     * 动态视频
     * ```
     *
     * `.bilibili.dynamic.CreateDynVideo video = 6;`
     * @return Whether the video field is set.
     */
    public fun hasVideo(): kotlin.Boolean {
      return _builder.hasVideo()
    }
    public val CreateDynReqKt.Dsl.videoOrNull: bilibili.dynamic.CreateDynVideo?
      get() = _builder.videoOrNull

    /**
     * ```
     * 通用模板类型：2048方图 2049竖图 其他值无效
     * ```
     *
     * `int64 sketch_type = 7;`
     */
    public var sketchType: kotlin.Long
      @JvmName("getSketchType")
      get() = _builder.getSketchType()
      @JvmName("setSketchType")
      set(value) {
        _builder.setSketchType(value)
      }
    /**
     * ```
     * 通用模板类型：2048方图 2049竖图 其他值无效
     * ```
     *
     * `int64 sketch_type = 7;`
     */
    public fun clearSketchType() {
      _builder.clearSketchType()
    }

    /**
     * ```
     * 通用模板的元内容（网页内容）
     * ```
     *
     * `.bilibili.dynamic.Sketch sketch = 8;`
     */
    public var sketch: bilibili.dynamic.Sketch
      @JvmName("getSketch")
      get() = _builder.getSketch()
      @JvmName("setSketch")
      set(value) {
        _builder.setSketch(value)
      }
    /**
     * ```
     * 通用模板的元内容（网页内容）
     * ```
     *
     * `.bilibili.dynamic.Sketch sketch = 8;`
     */
    public fun clearSketch() {
      _builder.clearSketch()
    }
    /**
     * ```
     * 通用模板的元内容（网页内容）
     * ```
     *
     * `.bilibili.dynamic.Sketch sketch = 8;`
     * @return Whether the sketch field is set.
     */
    public fun hasSketch(): kotlin.Boolean {
      return _builder.hasSketch()
    }
    public val CreateDynReqKt.Dsl.sketchOrNull: bilibili.dynamic.Sketch?
      get() = _builder.sketchOrNull

    /**
     * ```
     * 小程序的内容
     * ```
     *
     * `.bilibili.dynamic.Program program = 9;`
     */
    public var program: bilibili.dynamic.Program
      @JvmName("getProgram")
      get() = _builder.getProgram()
      @JvmName("setProgram")
      set(value) {
        _builder.setProgram(value)
      }
    /**
     * ```
     * 小程序的内容
     * ```
     *
     * `.bilibili.dynamic.Program program = 9;`
     */
    public fun clearProgram() {
      _builder.clearProgram()
    }
    /**
     * ```
     * 小程序的内容
     * ```
     *
     * `.bilibili.dynamic.Program program = 9;`
     * @return Whether the program field is set.
     */
    public fun hasProgram(): kotlin.Boolean {
      return _builder.hasProgram()
    }
    public val CreateDynReqKt.Dsl.programOrNull: bilibili.dynamic.Program?
      get() = _builder.programOrNull

    /**
     * ```
     * 动态附加小卡
     * ```
     *
     * `.bilibili.dynamic.CreateTag dyn_tag = 10;`
     */
    public var dynTag: bilibili.dynamic.CreateTag
      @JvmName("getDynTag")
      get() = _builder.getDynTag()
      @JvmName("setDynTag")
      set(value) {
        _builder.setDynTag(value)
      }
    /**
     * ```
     * 动态附加小卡
     * ```
     *
     * `.bilibili.dynamic.CreateTag dyn_tag = 10;`
     */
    public fun clearDynTag() {
      _builder.clearDynTag()
    }
    /**
     * ```
     * 动态附加小卡
     * ```
     *
     * `.bilibili.dynamic.CreateTag dyn_tag = 10;`
     * @return Whether the dynTag field is set.
     */
    public fun hasDynTag(): kotlin.Boolean {
      return _builder.hasDynTag()
    }
    public val CreateDynReqKt.Dsl.dynTagOrNull: bilibili.dynamic.CreateTag?
      get() = _builder.dynTagOrNull

    /**
     * ```
     * 动态附加大卡
     * ```
     *
     * `.bilibili.dynamic.CreateAttachCard attach_card = 11;`
     */
    public var attachCard: bilibili.dynamic.CreateAttachCard
      @JvmName("getAttachCard")
      get() = _builder.getAttachCard()
      @JvmName("setAttachCard")
      set(value) {
        _builder.setAttachCard(value)
      }
    /**
     * ```
     * 动态附加大卡
     * ```
     *
     * `.bilibili.dynamic.CreateAttachCard attach_card = 11;`
     */
    public fun clearAttachCard() {
      _builder.clearAttachCard()
    }
    /**
     * ```
     * 动态附加大卡
     * ```
     *
     * `.bilibili.dynamic.CreateAttachCard attach_card = 11;`
     * @return Whether the attachCard field is set.
     */
    public fun hasAttachCard(): kotlin.Boolean {
      return _builder.hasAttachCard()
    }
    public val CreateDynReqKt.Dsl.attachCardOrNull: bilibili.dynamic.CreateAttachCard?
      get() = _builder.attachCardOrNull

    /**
     * ```
     * 特殊的创建选项
     * ```
     *
     * `.bilibili.dynamic.CreateOption option = 12;`
     */
    public var option: bilibili.dynamic.CreateOption
      @JvmName("getOption")
      get() = _builder.getOption()
      @JvmName("setOption")
      set(value) {
        _builder.setOption(value)
      }
    /**
     * ```
     * 特殊的创建选项
     * ```
     *
     * `.bilibili.dynamic.CreateOption option = 12;`
     */
    public fun clearOption() {
      _builder.clearOption()
    }
    /**
     * ```
     * 特殊的创建选项
     * ```
     *
     * `.bilibili.dynamic.CreateOption option = 12;`
     * @return Whether the option field is set.
     */
    public fun hasOption(): kotlin.Boolean {
      return _builder.hasOption()
    }
    public val CreateDynReqKt.Dsl.optionOrNull: bilibili.dynamic.CreateOption?
      get() = _builder.optionOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.CreateTopic topic = 13;`
     */
    public var topic: bilibili.dynamic.CreateTopic
      @JvmName("getTopic")
      get() = _builder.getTopic()
      @JvmName("setTopic")
      set(value) {
        _builder.setTopic(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.CreateTopic topic = 13;`
     */
    public fun clearTopic() {
      _builder.clearTopic()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.CreateTopic topic = 13;`
     * @return Whether the topic field is set.
     */
    public fun hasTopic(): kotlin.Boolean {
      return _builder.hasTopic()
    }
    public val CreateDynReqKt.Dsl.topicOrNull: bilibili.dynamic.CreateTopic?
      get() = _builder.topicOrNull

    /**
     * ```
     * ```
     *
     * `string upload_id = 14;`
     */
    public var uploadId: kotlin.String
      @JvmName("getUploadId")
      get() = _builder.getUploadId()
      @JvmName("setUploadId")
      set(value) {
        _builder.setUploadId(value)
      }
    /**
     * ```
     * ```
     *
     * `string upload_id = 14;`
     */
    public fun clearUploadId() {
      _builder.clearUploadId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.dynamic.feed.v1.CreateDynReq.copy(block: `bilibili.main.dynamic.feed.v1`.CreateDynReqKt.Dsl.() -> kotlin.Unit): bilibili.main.dynamic.feed.v1.CreateDynReq =
  `bilibili.main.dynamic.feed.v1`.CreateDynReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.main.dynamic.feed.v1.CreateDynReqOrBuilder.metaOrNull: bilibili.dynamic.UserCreateMeta?
  get() = if (hasMeta()) getMeta() else null

public val bilibili.main.dynamic.feed.v1.CreateDynReqOrBuilder.contentOrNull: bilibili.dynamic.CreateContent?
  get() = if (hasContent()) getContent() else null

public val bilibili.main.dynamic.feed.v1.CreateDynReqOrBuilder.repostSrcOrNull: bilibili.dynamic.DynIdentity?
  get() = if (hasRepostSrc()) getRepostSrc() else null

public val bilibili.main.dynamic.feed.v1.CreateDynReqOrBuilder.videoOrNull: bilibili.dynamic.CreateDynVideo?
  get() = if (hasVideo()) getVideo() else null

public val bilibili.main.dynamic.feed.v1.CreateDynReqOrBuilder.sketchOrNull: bilibili.dynamic.Sketch?
  get() = if (hasSketch()) getSketch() else null

public val bilibili.main.dynamic.feed.v1.CreateDynReqOrBuilder.programOrNull: bilibili.dynamic.Program?
  get() = if (hasProgram()) getProgram() else null

public val bilibili.main.dynamic.feed.v1.CreateDynReqOrBuilder.dynTagOrNull: bilibili.dynamic.CreateTag?
  get() = if (hasDynTag()) getDynTag() else null

public val bilibili.main.dynamic.feed.v1.CreateDynReqOrBuilder.attachCardOrNull: bilibili.dynamic.CreateAttachCard?
  get() = if (hasAttachCard()) getAttachCard() else null

public val bilibili.main.dynamic.feed.v1.CreateDynReqOrBuilder.optionOrNull: bilibili.dynamic.CreateOption?
  get() = if (hasOption()) getOption() else null

public val bilibili.main.dynamic.feed.v1.CreateDynReqOrBuilder.topicOrNull: bilibili.dynamic.CreateTopic?
  get() = if (hasTopic()) getTopic() else null

