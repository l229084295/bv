// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/interfaces/feed/v1/api.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.main.dynamic.feed.v1;

@kotlin.jvm.JvmName("-initializecreatePageInfosRsp")
public inline fun createPageInfosRsp(block: bilibili.main.dynamic.feed.v1.CreatePageInfosRspKt.Dsl.() -> kotlin.Unit): bilibili.main.dynamic.feed.v1.CreatePageInfosRsp =
  bilibili.main.dynamic.feed.v1.CreatePageInfosRspKt.Dsl._create(bilibili.main.dynamic.feed.v1.CreatePageInfosRsp.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.main.dynamic.feed.v1.CreatePageInfosRsp`
 */
public object CreatePageInfosRspKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.main.dynamic.feed.v1.CreatePageInfosRsp.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.main.dynamic.feed.v1.CreatePageInfosRsp.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.main.dynamic.feed.v1.CreatePageInfosRsp = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.main.dynamic.feed.v1.CreatePageTopicInfo topic = 1;`
     */
    public var topic: bilibili.main.dynamic.feed.v1.CreatePageTopicInfo
      @JvmName("getTopic")
      get() = _builder.getTopic()
      @JvmName("setTopic")
      set(value) {
        _builder.setTopic(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.main.dynamic.feed.v1.CreatePageTopicInfo topic = 1;`
     */
    public fun clearTopic() {
      _builder.clearTopic()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.main.dynamic.feed.v1.CreatePageTopicInfo topic = 1;`
     * @return Whether the topic field is set.
     */
    public fun hasTopic(): kotlin.Boolean {
      return _builder.hasTopic()
    }
    public val CreatePageInfosRspKt.Dsl.topicOrNull: bilibili.main.dynamic.feed.v1.CreatePageTopicInfo?
      get() = _builder.topicOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.dynamic.feed.v1.CreatePageInfosRsp.copy(block: `bilibili.main.dynamic.feed.v1`.CreatePageInfosRspKt.Dsl.() -> kotlin.Unit): bilibili.main.dynamic.feed.v1.CreatePageInfosRsp =
  `bilibili.main.dynamic.feed.v1`.CreatePageInfosRspKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.main.dynamic.feed.v1.CreatePageInfosRspOrBuilder.topicOrNull: bilibili.main.dynamic.feed.v1.CreatePageTopicInfo?
  get() = if (hasTopic()) getTopic() else null

