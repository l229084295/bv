// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/main/community/reply/v1/reply.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.main.community.reply.v1;

@kotlin.jvm.JvmName("-initializeactivity")
public inline fun activity(block: bilibili.main.community.reply.v1.ActivityKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.Activity =
  bilibili.main.community.reply.v1.ActivityKt.Dsl._create(bilibili.main.community.reply.v1.Activity.newBuilder()).apply { block() }._build()
/**
 * ```
 * 活动
 * ```
 *
 * Protobuf type `bilibili.main.community.reply.v1.Activity`
 */
public object ActivityKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.main.community.reply.v1.Activity.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.main.community.reply.v1.Activity.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.main.community.reply.v1.Activity = _builder.build()

    /**
     * ```
     * 活动id
     * ```
     *
     * `int64 activity_id = 1;`
     */
    public var activityId: kotlin.Long
      @JvmName("getActivityId")
      get() = _builder.getActivityId()
      @JvmName("setActivityId")
      set(value) {
        _builder.setActivityId(value)
      }
    /**
     * ```
     * 活动id
     * ```
     *
     * `int64 activity_id = 1;`
     */
    public fun clearActivityId() {
      _builder.clearActivityId()
    }

    /**
     * ```
     * 活动状态
     * -1:待审 1:上线
     * ```
     *
     * `int64 activity_state = 2;`
     */
    public var activityState: kotlin.Long
      @JvmName("getActivityState")
      get() = _builder.getActivityState()
      @JvmName("setActivityState")
      set(value) {
        _builder.setActivityState(value)
      }
    /**
     * ```
     * 活动状态
     * -1:待审 1:上线
     * ```
     *
     * `int64 activity_state = 2;`
     */
    public fun clearActivityState() {
      _builder.clearActivityState()
    }

    /**
     * ```
     * 参与活动的输入框文案
     * ```
     *
     * `string activity_placeholder = 3;`
     */
    public var activityPlaceholder: kotlin.String
      @JvmName("getActivityPlaceholder")
      get() = _builder.getActivityPlaceholder()
      @JvmName("setActivityPlaceholder")
      set(value) {
        _builder.setActivityPlaceholder(value)
      }
    /**
     * ```
     * 参与活动的输入框文案
     * ```
     *
     * `string activity_placeholder = 3;`
     */
    public fun clearActivityPlaceholder() {
      _builder.clearActivityPlaceholder()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.Activity.copy(block: `bilibili.main.community.reply.v1`.ActivityKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.Activity =
  `bilibili.main.community.reply.v1`.ActivityKt.Dsl._create(this.toBuilder()).apply { block() }._build()

