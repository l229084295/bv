// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/main/community/reply/v1/reply.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.main.community.reply.v1;

@kotlin.jvm.JvmName("-initializeshareReplyTopic")
public inline fun shareReplyTopic(block: bilibili.main.community.reply.v1.ShareReplyTopicKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.ShareReplyTopic =
  bilibili.main.community.reply.v1.ShareReplyTopicKt.Dsl._create(bilibili.main.community.reply.v1.ShareReplyTopic.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.main.community.reply.v1.ShareReplyTopic`
 */
public object ShareReplyTopicKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.main.community.reply.v1.ShareReplyTopic.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.main.community.reply.v1.ShareReplyTopic.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.main.community.reply.v1.ShareReplyTopic = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.main.community.reply.v1.Topic topic = 1;`
     */
    public var topic: bilibili.main.community.reply.v1.Topic
      @JvmName("getTopic")
      get() = _builder.getTopic()
      @JvmName("setTopic")
      set(value) {
        _builder.setTopic(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.main.community.reply.v1.Topic topic = 1;`
     */
    public fun clearTopic() {
      _builder.clearTopic()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.main.community.reply.v1.Topic topic = 1;`
     * @return Whether the topic field is set.
     */
    public fun hasTopic(): kotlin.Boolean {
      return _builder.hasTopic()
    }
    public val ShareReplyTopicKt.Dsl.topicOrNull: bilibili.main.community.reply.v1.Topic?
      get() = _builder.topicOrNull

    /**
     * ```
     * ```
     *
     * `string origin_text = 2;`
     */
    public var originText: kotlin.String
      @JvmName("getOriginText")
      get() = _builder.getOriginText()
      @JvmName("setOriginText")
      set(value) {
        _builder.setOriginText(value)
      }
    /**
     * ```
     * ```
     *
     * `string origin_text = 2;`
     */
    public fun clearOriginText() {
      _builder.clearOriginText()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.ShareReplyTopic.copy(block: `bilibili.main.community.reply.v1`.ShareReplyTopicKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.ShareReplyTopic =
  `bilibili.main.community.reply.v1`.ShareReplyTopicKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.main.community.reply.v1.ShareReplyTopicOrBuilder.topicOrNull: bilibili.main.community.reply.v1.Topic?
  get() = if (hasTopic()) getTopic() else null

