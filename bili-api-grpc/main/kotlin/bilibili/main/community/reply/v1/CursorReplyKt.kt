// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/main/community/reply/v1/reply.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.main.community.reply.v1;

@kotlin.jvm.JvmName("-initializecursorReply")
public inline fun cursorReply(block: bilibili.main.community.reply.v1.CursorReplyKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.CursorReply =
  bilibili.main.community.reply.v1.CursorReplyKt.Dsl._create(bilibili.main.community.reply.v1.CursorReply.newBuilder()).apply { block() }._build()
/**
 * ```
 * 页面游标回复
 * ```
 *
 * Protobuf type `bilibili.main.community.reply.v1.CursorReply`
 */
public object CursorReplyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.main.community.reply.v1.CursorReply.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.main.community.reply.v1.CursorReply.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.main.community.reply.v1.CursorReply = _builder.build()

    /**
     * ```
     * 下页数据
     * ```
     *
     * `int64 next = 1;`
     */
    public var next: kotlin.Long
      @JvmName("getNext")
      get() = _builder.getNext()
      @JvmName("setNext")
      set(value) {
        _builder.setNext(value)
      }
    /**
     * ```
     * 下页数据
     * ```
     *
     * `int64 next = 1;`
     */
    public fun clearNext() {
      _builder.clearNext()
    }

    /**
     * ```
     * 上页数据
     * ```
     *
     * `int64 prev = 2;`
     */
    public var prev: kotlin.Long
      @JvmName("getPrev")
      get() = _builder.getPrev()
      @JvmName("setPrev")
      set(value) {
        _builder.setPrev(value)
      }
    /**
     * ```
     * 上页数据
     * ```
     *
     * `int64 prev = 2;`
     */
    public fun clearPrev() {
      _builder.clearPrev()
    }

    /**
     * ```
     * 是否到顶
     * ```
     *
     * `bool isBegin = 3;`
     */
    public var isBegin: kotlin.Boolean
      @JvmName("getIsBegin")
      get() = _builder.getIsBegin()
      @JvmName("setIsBegin")
      set(value) {
        _builder.setIsBegin(value)
      }
    /**
     * ```
     * 是否到顶
     * ```
     *
     * `bool isBegin = 3;`
     */
    public fun clearIsBegin() {
      _builder.clearIsBegin()
    }

    /**
     * ```
     * 是否到底
     * ```
     *
     * `bool isEnd = 4;`
     */
    public var isEnd: kotlin.Boolean
      @JvmName("getIsEnd")
      get() = _builder.getIsEnd()
      @JvmName("setIsEnd")
      set(value) {
        _builder.setIsEnd(value)
      }
    /**
     * ```
     * 是否到底
     * ```
     *
     * `bool isEnd = 4;`
     */
    public fun clearIsEnd() {
      _builder.clearIsEnd()
    }

    /**
     * ```
     * 排序方式
     * 2:时间 3:热度
     * ```
     *
     * `.bilibili.main.community.reply.v1.Mode mode = 5;`
     */
    public var mode: bilibili.main.community.reply.v1.Mode
      @JvmName("getMode")
      get() = _builder.getMode()
      @JvmName("setMode")
      set(value) {
        _builder.setMode(value)
      }
    public var modeValue: kotlin.Int
      @JvmName("getModeValue")
      get() = _builder.getModeValue()
      @JvmName("setModeValue")
      set(value) {
        _builder.setModeValue(value)
      }
    /**
     * ```
     * 排序方式
     * 2:时间 3:热度
     * ```
     *
     * `.bilibili.main.community.reply.v1.Mode mode = 5;`
     */
    public fun clearMode() {
      _builder.clearMode()
    }

    /**
     * ```
     * 当前排序mode在切换按钮上的展示文案 
     * ```
     *
     * `string mode_text = 6;`
     */
    public var modeText: kotlin.String
      @JvmName("getModeText")
      get() = _builder.getModeText()
      @JvmName("setModeText")
      set(value) {
        _builder.setModeText(value)
      }
    /**
     * ```
     * 当前排序mode在切换按钮上的展示文案 
     * ```
     *
     * `string mode_text = 6;`
     */
    public fun clearModeText() {
      _builder.clearModeText()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.CursorReply.copy(block: `bilibili.main.community.reply.v1`.CursorReplyKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.CursorReply =
  `bilibili.main.community.reply.v1`.CursorReplyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

