// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/main/community/reply/v1/reply.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.main.community.reply.v1;

@kotlin.jvm.JvmName("-initializerichTextNote")
public inline fun richTextNote(block: bilibili.main.community.reply.v1.RichTextNoteKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.RichTextNote =
  bilibili.main.community.reply.v1.RichTextNoteKt.Dsl._create(bilibili.main.community.reply.v1.RichTextNote.newBuilder()).apply { block() }._build()
/**
 * ```
 * 笔记
 * ```
 *
 * Protobuf type `bilibili.main.community.reply.v1.RichTextNote`
 */
public object RichTextNoteKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.main.community.reply.v1.RichTextNote.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.main.community.reply.v1.RichTextNote.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.main.community.reply.v1.RichTextNote = _builder.build()

    /**
     * ```
     * 预览文本
     * ```
     *
     * `string summary = 1;`
     */
    public var summary: kotlin.String
      @JvmName("getSummary")
      get() = _builder.getSummary()
      @JvmName("setSummary")
      set(value) {
        _builder.setSummary(value)
      }
    /**
     * ```
     * 预览文本
     * ```
     *
     * `string summary = 1;`
     */
    public fun clearSummary() {
      _builder.clearSummary()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ImagesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * 笔记预览图片url列表
     * ```
     *
     * `repeated string images = 2;`
     * @return A list containing the images.
     */
    public val images: com.google.protobuf.kotlin.DslList<kotlin.String, ImagesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getImagesList()
      )
    /**
     * ```
     * 笔记预览图片url列表
     * ```
     *
     * `repeated string images = 2;`
     * @param value The images to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addImages")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ImagesProxy>.add(value: kotlin.String) {
      _builder.addImages(value)
    }
    /**
     * ```
     * 笔记预览图片url列表
     * ```
     *
     * `repeated string images = 2;`
     * @param value The images to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignImages")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ImagesProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * ```
     * 笔记预览图片url列表
     * ```
     *
     * `repeated string images = 2;`
     * @param values The images to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllImages")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ImagesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllImages(values)
    }
    /**
     * ```
     * 笔记预览图片url列表
     * ```
     *
     * `repeated string images = 2;`
     * @param values The images to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllImages")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ImagesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * ```
     * 笔记预览图片url列表
     * ```
     *
     * `repeated string images = 2;`
     * @param index The index to set the value at.
     * @param value The images to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setImages")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ImagesProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setImages(index, value)
    }/**
     * ```
     * 笔记预览图片url列表
     * ```
     *
     * `repeated string images = 2;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearImages")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ImagesProxy>.clear() {
      _builder.clearImages()
    }
    /**
     * ```
     * 笔记页面url
     * ```
     *
     * `string click_url = 3;`
     */
    public var clickUrl: kotlin.String
      @JvmName("getClickUrl")
      get() = _builder.getClickUrl()
      @JvmName("setClickUrl")
      set(value) {
        _builder.setClickUrl(value)
      }
    /**
     * ```
     * 笔记页面url
     * ```
     *
     * `string click_url = 3;`
     */
    public fun clearClickUrl() {
      _builder.clearClickUrl()
    }

    /**
     * ```
     * 发布日期 YYYY-mm-dd
     * ```
     *
     * `string last_mtime_text = 4;`
     */
    public var lastMtimeText: kotlin.String
      @JvmName("getLastMtimeText")
      get() = _builder.getLastMtimeText()
      @JvmName("setLastMtimeText")
      set(value) {
        _builder.setLastMtimeText(value)
      }
    /**
     * ```
     * 发布日期 YYYY-mm-dd
     * ```
     *
     * `string last_mtime_text = 4;`
     */
    public fun clearLastMtimeText() {
      _builder.clearLastMtimeText()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.RichTextNote.copy(block: `bilibili.main.community.reply.v1`.RichTextNoteKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.RichTextNote =
  `bilibili.main.community.reply.v1`.RichTextNoteKt.Dsl._create(this.toBuilder()).apply { block() }._build()

