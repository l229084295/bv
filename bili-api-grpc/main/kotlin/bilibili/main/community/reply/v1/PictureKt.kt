// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/main/community/reply/v1/reply.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.main.community.reply.v1;

@kotlin.jvm.JvmName("-initializepicture")
public inline fun picture(block: bilibili.main.community.reply.v1.PictureKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.Picture =
  bilibili.main.community.reply.v1.PictureKt.Dsl._create(bilibili.main.community.reply.v1.Picture.newBuilder()).apply { block() }._build()
/**
 * ```
 * 图片信息
 * ```
 *
 * Protobuf type `bilibili.main.community.reply.v1.Picture`
 */
public object PictureKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.main.community.reply.v1.Picture.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.main.community.reply.v1.Picture.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.main.community.reply.v1.Picture = _builder.build()

    /**
     * ```
     * 图片URL
     * ```
     *
     * `string img_src = 1;`
     */
    public var imgSrc: kotlin.String
      @JvmName("getImgSrc")
      get() = _builder.getImgSrc()
      @JvmName("setImgSrc")
      set(value) {
        _builder.setImgSrc(value)
      }
    /**
     * ```
     * 图片URL
     * ```
     *
     * `string img_src = 1;`
     */
    public fun clearImgSrc() {
      _builder.clearImgSrc()
    }

    /**
     * ```
     * 图片宽度
     * ```
     *
     * `double img_width = 2;`
     */
    public var imgWidth: kotlin.Double
      @JvmName("getImgWidth")
      get() = _builder.getImgWidth()
      @JvmName("setImgWidth")
      set(value) {
        _builder.setImgWidth(value)
      }
    /**
     * ```
     * 图片宽度
     * ```
     *
     * `double img_width = 2;`
     */
    public fun clearImgWidth() {
      _builder.clearImgWidth()
    }

    /**
     * ```
     * 图片高度
     * ```
     *
     * `double img_height = 3;`
     */
    public var imgHeight: kotlin.Double
      @JvmName("getImgHeight")
      get() = _builder.getImgHeight()
      @JvmName("setImgHeight")
      set(value) {
        _builder.setImgHeight(value)
      }
    /**
     * ```
     * 图片高度
     * ```
     *
     * `double img_height = 3;`
     */
    public fun clearImgHeight() {
      _builder.clearImgHeight()
    }

    /**
     * ```
     * 图片大小，单位KB
     * ```
     *
     * `double img_size = 4;`
     */
    public var imgSize: kotlin.Double
      @JvmName("getImgSize")
      get() = _builder.getImgSize()
      @JvmName("setImgSize")
      set(value) {
        _builder.setImgSize(value)
      }
    /**
     * ```
     * 图片大小，单位KB
     * ```
     *
     * `double img_size = 4;`
     */
    public fun clearImgSize() {
      _builder.clearImgSize()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.Picture.copy(block: `bilibili.main.community.reply.v1`.PictureKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.Picture =
  `bilibili.main.community.reply.v1`.PictureKt.Dsl._create(this.toBuilder()).apply { block() }._build()

