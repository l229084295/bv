// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/main/community/reply/v1/reply.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.main.community.reply.v1;

@kotlin.jvm.JvmName("-initializereplyCardLabel")
public inline fun replyCardLabel(block: bilibili.main.community.reply.v1.ReplyCardLabelKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.ReplyCardLabel =
  bilibili.main.community.reply.v1.ReplyCardLabelKt.Dsl._create(bilibili.main.community.reply.v1.ReplyCardLabel.newBuilder()).apply { block() }._build()
/**
 * ```
 * 评论条目标签信息
 * ```
 *
 * Protobuf type `bilibili.main.community.reply.v1.ReplyCardLabel`
 */
public object ReplyCardLabelKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.main.community.reply.v1.ReplyCardLabel.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.main.community.reply.v1.ReplyCardLabel.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.main.community.reply.v1.ReplyCardLabel = _builder.build()

    /**
     * ```
     * 标签文本
     * ```
     *
     * `string text_content = 1;`
     */
    public var textContent: kotlin.String
      @JvmName("getTextContent")
      get() = _builder.getTextContent()
      @JvmName("setTextContent")
      set(value) {
        _builder.setTextContent(value)
      }
    /**
     * ```
     * 标签文本
     * ```
     *
     * `string text_content = 1;`
     */
    public fun clearTextContent() {
      _builder.clearTextContent()
    }

    /**
     * ```
     * 文本颜色
     * ```
     *
     * `string text_color_day = 2;`
     */
    public var textColorDay: kotlin.String
      @JvmName("getTextColorDay")
      get() = _builder.getTextColorDay()
      @JvmName("setTextColorDay")
      set(value) {
        _builder.setTextColorDay(value)
      }
    /**
     * ```
     * 文本颜色
     * ```
     *
     * `string text_color_day = 2;`
     */
    public fun clearTextColorDay() {
      _builder.clearTextColorDay()
    }

    /**
     * ```
     * 文本颜色夜间
     * ```
     *
     * `string text_color_night = 3;`
     */
    public var textColorNight: kotlin.String
      @JvmName("getTextColorNight")
      get() = _builder.getTextColorNight()
      @JvmName("setTextColorNight")
      set(value) {
        _builder.setTextColorNight(value)
      }
    /**
     * ```
     * 文本颜色夜间
     * ```
     *
     * `string text_color_night = 3;`
     */
    public fun clearTextColorNight() {
      _builder.clearTextColorNight()
    }

    /**
     * ```
     * 标签颜色
     * ```
     *
     * `string label_color_day = 4;`
     */
    public var labelColorDay: kotlin.String
      @JvmName("getLabelColorDay")
      get() = _builder.getLabelColorDay()
      @JvmName("setLabelColorDay")
      set(value) {
        _builder.setLabelColorDay(value)
      }
    /**
     * ```
     * 标签颜色
     * ```
     *
     * `string label_color_day = 4;`
     */
    public fun clearLabelColorDay() {
      _builder.clearLabelColorDay()
    }

    /**
     * ```
     * 标签颜色夜间
     * ```
     *
     * `string label_color_night = 5;`
     */
    public var labelColorNight: kotlin.String
      @JvmName("getLabelColorNight")
      get() = _builder.getLabelColorNight()
      @JvmName("setLabelColorNight")
      set(value) {
        _builder.setLabelColorNight(value)
      }
    /**
     * ```
     * 标签颜色夜间
     * ```
     *
     * `string label_color_night = 5;`
     */
    public fun clearLabelColorNight() {
      _builder.clearLabelColorNight()
    }

    /**
     * ```
     * ```
     *
     * `string image = 6;`
     */
    public var image: kotlin.String
      @JvmName("getImage")
      get() = _builder.getImage()
      @JvmName("setImage")
      set(value) {
        _builder.setImage(value)
      }
    /**
     * ```
     * ```
     *
     * `string image = 6;`
     */
    public fun clearImage() {
      _builder.clearImage()
    }

    /**
     * ```
     * 标签类型 0:UP主觉得很赞 1:妙评
     * ```
     *
     * `int32 type = 7;`
     */
    public var type: kotlin.Int
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * ```
     * 标签类型 0:UP主觉得很赞 1:妙评
     * ```
     *
     * `int32 type = 7;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * ```
     * 背景url
     * ```
     *
     * `string background = 8;`
     */
    public var background: kotlin.String
      @JvmName("getBackground")
      get() = _builder.getBackground()
      @JvmName("setBackground")
      set(value) {
        _builder.setBackground(value)
      }
    /**
     * ```
     * 背景url
     * ```
     *
     * `string background = 8;`
     */
    public fun clearBackground() {
      _builder.clearBackground()
    }

    /**
     * ```
     * 背景宽
     * ```
     *
     * `double background_width = 9;`
     */
    public var backgroundWidth: kotlin.Double
      @JvmName("getBackgroundWidth")
      get() = _builder.getBackgroundWidth()
      @JvmName("setBackgroundWidth")
      set(value) {
        _builder.setBackgroundWidth(value)
      }
    /**
     * ```
     * 背景宽
     * ```
     *
     * `double background_width = 9;`
     */
    public fun clearBackgroundWidth() {
      _builder.clearBackgroundWidth()
    }

    /**
     * ```
     * 背景高
     * ```
     *
     * `double background_height = 10;`
     */
    public var backgroundHeight: kotlin.Double
      @JvmName("getBackgroundHeight")
      get() = _builder.getBackgroundHeight()
      @JvmName("setBackgroundHeight")
      set(value) {
        _builder.setBackgroundHeight(value)
      }
    /**
     * ```
     * 背景高
     * ```
     *
     * `double background_height = 10;`
     */
    public fun clearBackgroundHeight() {
      _builder.clearBackgroundHeight()
    }

    /**
     * ```
     * 点击跳转url
     * ```
     *
     * `string jump_url = 11;`
     */
    public var jumpUrl: kotlin.String
      @JvmName("getJumpUrl")
      get() = _builder.getJumpUrl()
      @JvmName("setJumpUrl")
      set(value) {
        _builder.setJumpUrl(value)
      }
    /**
     * ```
     * 点击跳转url
     * ```
     *
     * `string jump_url = 11;`
     */
    public fun clearJumpUrl() {
      _builder.clearJumpUrl()
    }

    /**
     * ```
     * ```
     *
     * `int64 effect = 12;`
     */
    public var effect: kotlin.Long
      @JvmName("getEffect")
      get() = _builder.getEffect()
      @JvmName("setEffect")
      set(value) {
        _builder.setEffect(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 effect = 12;`
     */
    public fun clearEffect() {
      _builder.clearEffect()
    }

    /**
     * ```
     * ```
     *
     * `int64 effect_start_time = 13;`
     */
    public var effectStartTime: kotlin.Long
      @JvmName("getEffectStartTime")
      get() = _builder.getEffectStartTime()
      @JvmName("setEffectStartTime")
      set(value) {
        _builder.setEffectStartTime(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 effect_start_time = 13;`
     */
    public fun clearEffectStartTime() {
      _builder.clearEffectStartTime()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.ReplyCardLabel.copy(block: `bilibili.main.community.reply.v1`.ReplyCardLabelKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.ReplyCardLabel =
  `bilibili.main.community.reply.v1`.ReplyCardLabelKt.Dsl._create(this.toBuilder()).apply { block() }._build()

