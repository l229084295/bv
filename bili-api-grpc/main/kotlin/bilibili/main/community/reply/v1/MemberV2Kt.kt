// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/main/community/reply/v1/reply.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.main.community.reply.v1;

@kotlin.jvm.JvmName("-initializememberV2")
public inline fun memberV2(block: bilibili.main.community.reply.v1.MemberV2Kt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2 =
  bilibili.main.community.reply.v1.MemberV2Kt.Dsl._create(bilibili.main.community.reply.v1.MemberV2.newBuilder()).apply { block() }._build()
/**
 * ```
 * 用户信息V2
 * ```
 *
 * Protobuf type `bilibili.main.community.reply.v1.MemberV2`
 */
public object MemberV2Kt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.main.community.reply.v1.MemberV2.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.main.community.reply.v1.MemberV2.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.main.community.reply.v1.MemberV2 = _builder.build()

    /**
     * ```
     * 基本信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Basic basic = 1;`
     */
    public var basic: bilibili.main.community.reply.v1.MemberV2.Basic
      @JvmName("getBasic")
      get() = _builder.getBasic()
      @JvmName("setBasic")
      set(value) {
        _builder.setBasic(value)
      }
    /**
     * ```
     * 基本信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Basic basic = 1;`
     */
    public fun clearBasic() {
      _builder.clearBasic()
    }
    /**
     * ```
     * 基本信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Basic basic = 1;`
     * @return Whether the basic field is set.
     */
    public fun hasBasic(): kotlin.Boolean {
      return _builder.hasBasic()
    }
    public val MemberV2Kt.Dsl.basicOrNull: bilibili.main.community.reply.v1.MemberV2.Basic?
      get() = _builder.basicOrNull

    /**
     * ```
     * 认证信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Official official = 2;`
     */
    public var official: bilibili.main.community.reply.v1.MemberV2.Official
      @JvmName("getOfficial")
      get() = _builder.getOfficial()
      @JvmName("setOfficial")
      set(value) {
        _builder.setOfficial(value)
      }
    /**
     * ```
     * 认证信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Official official = 2;`
     */
    public fun clearOfficial() {
      _builder.clearOfficial()
    }
    /**
     * ```
     * 认证信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Official official = 2;`
     * @return Whether the official field is set.
     */
    public fun hasOfficial(): kotlin.Boolean {
      return _builder.hasOfficial()
    }
    public val MemberV2Kt.Dsl.officialOrNull: bilibili.main.community.reply.v1.MemberV2.Official?
      get() = _builder.officialOrNull

    /**
     * ```
     * 大会员信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Vip vip = 3;`
     */
    public var vip: bilibili.main.community.reply.v1.MemberV2.Vip
      @JvmName("getVip")
      get() = _builder.getVip()
      @JvmName("setVip")
      set(value) {
        _builder.setVip(value)
      }
    /**
     * ```
     * 大会员信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Vip vip = 3;`
     */
    public fun clearVip() {
      _builder.clearVip()
    }
    /**
     * ```
     * 大会员信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Vip vip = 3;`
     * @return Whether the vip field is set.
     */
    public fun hasVip(): kotlin.Boolean {
      return _builder.hasVip()
    }
    public val MemberV2Kt.Dsl.vipOrNull: bilibili.main.community.reply.v1.MemberV2.Vip?
      get() = _builder.vipOrNull

    /**
     * ```
     * 装扮信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Garb garb = 4;`
     */
    public var garb: bilibili.main.community.reply.v1.MemberV2.Garb
      @JvmName("getGarb")
      get() = _builder.getGarb()
      @JvmName("setGarb")
      set(value) {
        _builder.setGarb(value)
      }
    /**
     * ```
     * 装扮信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Garb garb = 4;`
     */
    public fun clearGarb() {
      _builder.clearGarb()
    }
    /**
     * ```
     * 装扮信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Garb garb = 4;`
     * @return Whether the garb field is set.
     */
    public fun hasGarb(): kotlin.Boolean {
      return _builder.hasGarb()
    }
    public val MemberV2Kt.Dsl.garbOrNull: bilibili.main.community.reply.v1.MemberV2.Garb?
      get() = _builder.garbOrNull

    /**
     * ```
     * 粉丝勋章信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Medal medal = 5;`
     */
    public var medal: bilibili.main.community.reply.v1.MemberV2.Medal
      @JvmName("getMedal")
      get() = _builder.getMedal()
      @JvmName("setMedal")
      set(value) {
        _builder.setMedal(value)
      }
    /**
     * ```
     * 粉丝勋章信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Medal medal = 5;`
     */
    public fun clearMedal() {
      _builder.clearMedal()
    }
    /**
     * ```
     * 粉丝勋章信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Medal medal = 5;`
     * @return Whether the medal field is set.
     */
    public fun hasMedal(): kotlin.Boolean {
      return _builder.hasMedal()
    }
    public val MemberV2Kt.Dsl.medalOrNull: bilibili.main.community.reply.v1.MemberV2.Medal?
      get() = _builder.medalOrNull

    /**
     * ```
     * NFT信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Nft nft = 6;`
     */
    public var nft: bilibili.main.community.reply.v1.MemberV2.Nft
      @JvmName("getNft")
      get() = _builder.getNft()
      @JvmName("setNft")
      set(value) {
        _builder.setNft(value)
      }
    /**
     * ```
     * NFT信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Nft nft = 6;`
     */
    public fun clearNft() {
      _builder.clearNft()
    }
    /**
     * ```
     * NFT信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Nft nft = 6;`
     * @return Whether the nft field is set.
     */
    public fun hasNft(): kotlin.Boolean {
      return _builder.hasNft()
    }
    public val MemberV2Kt.Dsl.nftOrNull: bilibili.main.community.reply.v1.MemberV2.Nft?
      get() = _builder.nftOrNull

    /**
     * ```
     * 硬核会员信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Senior senior = 7;`
     */
    public var senior: bilibili.main.community.reply.v1.MemberV2.Senior
      @JvmName("getSenior")
      get() = _builder.getSenior()
      @JvmName("setSenior")
      set(value) {
        _builder.setSenior(value)
      }
    /**
     * ```
     * 硬核会员信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Senior senior = 7;`
     */
    public fun clearSenior() {
      _builder.clearSenior()
    }
    /**
     * ```
     * 硬核会员信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Senior senior = 7;`
     * @return Whether the senior field is set.
     */
    public fun hasSenior(): kotlin.Boolean {
      return _builder.hasSenior()
    }
    public val MemberV2Kt.Dsl.seniorOrNull: bilibili.main.community.reply.v1.MemberV2.Senior?
      get() = _builder.seniorOrNull

    /**
     * ```
     * 契约信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Contractor contractor = 8;`
     */
    public var contractor: bilibili.main.community.reply.v1.MemberV2.Contractor
      @JvmName("getContractor")
      get() = _builder.getContractor()
      @JvmName("setContractor")
      set(value) {
        _builder.setContractor(value)
      }
    /**
     * ```
     * 契约信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Contractor contractor = 8;`
     */
    public fun clearContractor() {
      _builder.clearContractor()
    }
    /**
     * ```
     * 契约信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.MemberV2.Contractor contractor = 8;`
     * @return Whether the contractor field is set.
     */
    public fun hasContractor(): kotlin.Boolean {
      return _builder.hasContractor()
    }
    public val MemberV2Kt.Dsl.contractorOrNull: bilibili.main.community.reply.v1.MemberV2.Contractor?
      get() = _builder.contractorOrNull
  }
  @kotlin.jvm.JvmName("-initializebasic")
  public inline fun basic(block: bilibili.main.community.reply.v1.MemberV2Kt.BasicKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Basic =
    bilibili.main.community.reply.v1.MemberV2Kt.BasicKt.Dsl._create(bilibili.main.community.reply.v1.MemberV2.Basic.newBuilder()).apply { block() }._build()
  /**
   * ```
   * 基本信息
   * ```
   *
   * Protobuf type `bilibili.main.community.reply.v1.MemberV2.Basic`
   */
  public object BasicKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: bilibili.main.community.reply.v1.MemberV2.Basic.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: bilibili.main.community.reply.v1.MemberV2.Basic.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): bilibili.main.community.reply.v1.MemberV2.Basic = _builder.build()

      /**
       * ```
       * 用户mid
       * ```
       *
       * `int64 mid = 1;`
       */
      public var mid: kotlin.Long
        @JvmName("getMid")
        get() = _builder.getMid()
        @JvmName("setMid")
        set(value) {
          _builder.setMid(value)
        }
      /**
       * ```
       * 用户mid
       * ```
       *
       * `int64 mid = 1;`
       */
      public fun clearMid() {
        _builder.clearMid()
      }

      /**
       * ```
       * 昵称
       * ```
       *
       * `string name = 2;`
       */
      public var name: kotlin.String
        @JvmName("getName")
        get() = _builder.getName()
        @JvmName("setName")
        set(value) {
          _builder.setName(value)
        }
      /**
       * ```
       * 昵称
       * ```
       *
       * `string name = 2;`
       */
      public fun clearName() {
        _builder.clearName()
      }

      /**
       * ```
       * 性别
       * ```
       *
       * `string sex = 3;`
       */
      public var sex: kotlin.String
        @JvmName("getSex")
        get() = _builder.getSex()
        @JvmName("setSex")
        set(value) {
          _builder.setSex(value)
        }
      /**
       * ```
       * 性别
       * ```
       *
       * `string sex = 3;`
       */
      public fun clearSex() {
        _builder.clearSex()
      }

      /**
       * ```
       * 头像url
       * ```
       *
       * `string face = 4;`
       */
      public var face: kotlin.String
        @JvmName("getFace")
        get() = _builder.getFace()
        @JvmName("setFace")
        set(value) {
          _builder.setFace(value)
        }
      /**
       * ```
       * 头像url
       * ```
       *
       * `string face = 4;`
       */
      public fun clearFace() {
        _builder.clearFace()
      }

      /**
       * ```
       * 等级
       * ```
       *
       * `int64 level = 5;`
       */
      public var level: kotlin.Long
        @JvmName("getLevel")
        get() = _builder.getLevel()
        @JvmName("setLevel")
        set(value) {
          _builder.setLevel(value)
        }
      /**
       * ```
       * 等级
       * ```
       *
       * `int64 level = 5;`
       */
      public fun clearLevel() {
        _builder.clearLevel()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializeofficial")
  public inline fun official(block: bilibili.main.community.reply.v1.MemberV2Kt.OfficialKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Official =
    bilibili.main.community.reply.v1.MemberV2Kt.OfficialKt.Dsl._create(bilibili.main.community.reply.v1.MemberV2.Official.newBuilder()).apply { block() }._build()
  /**
   * ```
   * 认证
   * ```
   *
   * Protobuf type `bilibili.main.community.reply.v1.MemberV2.Official`
   */
  public object OfficialKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: bilibili.main.community.reply.v1.MemberV2.Official.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: bilibili.main.community.reply.v1.MemberV2.Official.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): bilibili.main.community.reply.v1.MemberV2.Official = _builder.build()

      /**
       * ```
       * 认证类型
       * ```
       *
       * `int64 verify_type = 1;`
       */
      public var verifyType: kotlin.Long
        @JvmName("getVerifyType")
        get() = _builder.getVerifyType()
        @JvmName("setVerifyType")
        set(value) {
          _builder.setVerifyType(value)
        }
      /**
       * ```
       * 认证类型
       * ```
       *
       * `int64 verify_type = 1;`
       */
      public fun clearVerifyType() {
        _builder.clearVerifyType()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializevip")
  public inline fun vip(block: bilibili.main.community.reply.v1.MemberV2Kt.VipKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Vip =
    bilibili.main.community.reply.v1.MemberV2Kt.VipKt.Dsl._create(bilibili.main.community.reply.v1.MemberV2.Vip.newBuilder()).apply { block() }._build()
  /**
   * ```
   * 大会员
   * ```
   *
   * Protobuf type `bilibili.main.community.reply.v1.MemberV2.Vip`
   */
  public object VipKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: bilibili.main.community.reply.v1.MemberV2.Vip.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: bilibili.main.community.reply.v1.MemberV2.Vip.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): bilibili.main.community.reply.v1.MemberV2.Vip = _builder.build()

      /**
       * ```
       * 会员类型
       * 0:不是大会员 1:月度会员 2:年度大会员
       * ```
       *
       * `int64 type = 1;`
       */
      public var type: kotlin.Long
        @JvmName("getType")
        get() = _builder.getType()
        @JvmName("setType")
        set(value) {
          _builder.setType(value)
        }
      /**
       * ```
       * 会员类型
       * 0:不是大会员 1:月度会员 2:年度大会员
       * ```
       *
       * `int64 type = 1;`
       */
      public fun clearType() {
        _builder.clearType()
      }

      /**
       * ```
       * 会员状态
       * ```
       *
       * `int64 status = 2;`
       */
      public var status: kotlin.Long
        @JvmName("getStatus")
        get() = _builder.getStatus()
        @JvmName("setStatus")
        set(value) {
          _builder.setStatus(value)
        }
      /**
       * ```
       * 会员状态
       * ```
       *
       * `int64 status = 2;`
       */
      public fun clearStatus() {
        _builder.clearStatus()
      }

      /**
       * ```
       * 会员样式
       * ```
       *
       * `int64 theme_type = 3;`
       */
      public var themeType: kotlin.Long
        @JvmName("getThemeType")
        get() = _builder.getThemeType()
        @JvmName("setThemeType")
        set(value) {
          _builder.setThemeType(value)
        }
      /**
       * ```
       * 会员样式
       * ```
       *
       * `int64 theme_type = 3;`
       */
      public fun clearThemeType() {
        _builder.clearThemeType()
      }

      /**
       * ```
       * 会员铭牌样式url
       * ```
       *
       * `string label_path = 4;`
       */
      public var labelPath: kotlin.String
        @JvmName("getLabelPath")
        get() = _builder.getLabelPath()
        @JvmName("setLabelPath")
        set(value) {
          _builder.setLabelPath(value)
        }
      /**
       * ```
       * 会员铭牌样式url
       * ```
       *
       * `string label_path = 4;`
       */
      public fun clearLabelPath() {
        _builder.clearLabelPath()
      }

      /**
       * ```
       * ```
       *
       * `string nickname_color = 5;`
       */
      public var nicknameColor: kotlin.String
        @JvmName("getNicknameColor")
        get() = _builder.getNicknameColor()
        @JvmName("setNicknameColor")
        set(value) {
          _builder.setNicknameColor(value)
        }
      /**
       * ```
       * ```
       *
       * `string nickname_color = 5;`
       */
      public fun clearNicknameColor() {
        _builder.clearNicknameColor()
      }

      /**
       * ```
       * ```
       *
       * `int32 avatar_subscript = 6;`
       */
      public var avatarSubscript: kotlin.Int
        @JvmName("getAvatarSubscript")
        get() = _builder.getAvatarSubscript()
        @JvmName("setAvatarSubscript")
        set(value) {
          _builder.setAvatarSubscript(value)
        }
      /**
       * ```
       * ```
       *
       * `int32 avatar_subscript = 6;`
       */
      public fun clearAvatarSubscript() {
        _builder.clearAvatarSubscript()
      }

      /**
       * ```
       * ```
       *
       * `string label_text = 7;`
       */
      public var labelText: kotlin.String
        @JvmName("getLabelText")
        get() = _builder.getLabelText()
        @JvmName("setLabelText")
        set(value) {
          _builder.setLabelText(value)
        }
      /**
       * ```
       * ```
       *
       * `string label_text = 7;`
       */
      public fun clearLabelText() {
        _builder.clearLabelText()
      }

      /**
       * ```
       * ```
       *
       * `string vip_label_theme = 8;`
       */
      public var vipLabelTheme: kotlin.String
        @JvmName("getVipLabelTheme")
        get() = _builder.getVipLabelTheme()
        @JvmName("setVipLabelTheme")
        set(value) {
          _builder.setVipLabelTheme(value)
        }
      /**
       * ```
       * ```
       *
       * `string vip_label_theme = 8;`
       */
      public fun clearVipLabelTheme() {
        _builder.clearVipLabelTheme()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializegarb")
  public inline fun garb(block: bilibili.main.community.reply.v1.MemberV2Kt.GarbKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Garb =
    bilibili.main.community.reply.v1.MemberV2Kt.GarbKt.Dsl._create(bilibili.main.community.reply.v1.MemberV2.Garb.newBuilder()).apply { block() }._build()
  /**
   * ```
   * 装扮
   * ```
   *
   * Protobuf type `bilibili.main.community.reply.v1.MemberV2.Garb`
   */
  public object GarbKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: bilibili.main.community.reply.v1.MemberV2.Garb.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: bilibili.main.community.reply.v1.MemberV2.Garb.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): bilibili.main.community.reply.v1.MemberV2.Garb = _builder.build()

      /**
       * ```
       * 头像框url
       * ```
       *
       * `string pendant_image = 1;`
       */
      public var pendantImage: kotlin.String
        @JvmName("getPendantImage")
        get() = _builder.getPendantImage()
        @JvmName("setPendantImage")
        set(value) {
          _builder.setPendantImage(value)
        }
      /**
       * ```
       * 头像框url
       * ```
       *
       * `string pendant_image = 1;`
       */
      public fun clearPendantImage() {
        _builder.clearPendantImage()
      }

      /**
       * ```
       * 装扮卡url
       * ```
       *
       * `string card_image = 2;`
       */
      public var cardImage: kotlin.String
        @JvmName("getCardImage")
        get() = _builder.getCardImage()
        @JvmName("setCardImage")
        set(value) {
          _builder.setCardImage(value)
        }
      /**
       * ```
       * 装扮卡url
       * ```
       *
       * `string card_image = 2;`
       */
      public fun clearCardImage() {
        _builder.clearCardImage()
      }

      /**
       * ```
       * 有关注按钮时的装扮卡url
       * ```
       *
       * `string card_image_with_focus = 3;`
       */
      public var cardImageWithFocus: kotlin.String
        @JvmName("getCardImageWithFocus")
        get() = _builder.getCardImageWithFocus()
        @JvmName("setCardImageWithFocus")
        set(value) {
          _builder.setCardImageWithFocus(value)
        }
      /**
       * ```
       * 有关注按钮时的装扮卡url
       * ```
       *
       * `string card_image_with_focus = 3;`
       */
      public fun clearCardImageWithFocus() {
        _builder.clearCardImageWithFocus()
      }

      /**
       * ```
       * 专属装扮页面url
       * ```
       *
       * `string card_jump_url = 4;`
       */
      public var cardJumpUrl: kotlin.String
        @JvmName("getCardJumpUrl")
        get() = _builder.getCardJumpUrl()
        @JvmName("setCardJumpUrl")
        set(value) {
          _builder.setCardJumpUrl(value)
        }
      /**
       * ```
       * 专属装扮页面url
       * ```
       *
       * `string card_jump_url = 4;`
       */
      public fun clearCardJumpUrl() {
        _builder.clearCardJumpUrl()
      }

      /**
       * ```
       * 专属装扮id
       * ```
       *
       * `string card_number = 5;`
       */
      public var cardNumber: kotlin.String
        @JvmName("getCardNumber")
        get() = _builder.getCardNumber()
        @JvmName("setCardNumber")
        set(value) {
          _builder.setCardNumber(value)
        }
      /**
       * ```
       * 专属装扮id
       * ```
       *
       * `string card_number = 5;`
       */
      public fun clearCardNumber() {
        _builder.clearCardNumber()
      }

      /**
       * ```
       * 专属装扮id显示颜色
       * ```
       *
       * `string card_fan_color = 6;`
       */
      public var cardFanColor: kotlin.String
        @JvmName("getCardFanColor")
        get() = _builder.getCardFanColor()
        @JvmName("setCardFanColor")
        set(value) {
          _builder.setCardFanColor(value)
        }
      /**
       * ```
       * 专属装扮id显示颜色
       * ```
       *
       * `string card_fan_color = 6;`
       */
      public fun clearCardFanColor() {
        _builder.clearCardFanColor()
      }

      /**
       * ```
       * 是否为专属装扮卡
       * ```
       *
       * `bool card_is_fan = 7;`
       */
      public var cardIsFan: kotlin.Boolean
        @JvmName("getCardIsFan")
        get() = _builder.getCardIsFan()
        @JvmName("setCardIsFan")
        set(value) {
          _builder.setCardIsFan(value)
        }
      /**
       * ```
       * 是否为专属装扮卡
       * ```
       *
       * `bool card_is_fan = 7;`
       */
      public fun clearCardIsFan() {
        _builder.clearCardIsFan()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializemedal")
  public inline fun medal(block: bilibili.main.community.reply.v1.MemberV2Kt.MedalKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Medal =
    bilibili.main.community.reply.v1.MemberV2Kt.MedalKt.Dsl._create(bilibili.main.community.reply.v1.MemberV2.Medal.newBuilder()).apply { block() }._build()
  /**
   * ```
   * 粉丝勋章
   * ```
   *
   * Protobuf type `bilibili.main.community.reply.v1.MemberV2.Medal`
   */
  public object MedalKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: bilibili.main.community.reply.v1.MemberV2.Medal.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: bilibili.main.community.reply.v1.MemberV2.Medal.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): bilibili.main.community.reply.v1.MemberV2.Medal = _builder.build()

      /**
       * ```
       * 粉丝勋章名
       * ```
       *
       * `string name = 1;`
       */
      public var name: kotlin.String
        @JvmName("getName")
        get() = _builder.getName()
        @JvmName("setName")
        set(value) {
          _builder.setName(value)
        }
      /**
       * ```
       * 粉丝勋章名
       * ```
       *
       * `string name = 1;`
       */
      public fun clearName() {
        _builder.clearName()
      }

      /**
       * ```
       * 粉丝勋章等级
       * ```
       *
       * `int64 level = 2;`
       */
      public var level: kotlin.Long
        @JvmName("getLevel")
        get() = _builder.getLevel()
        @JvmName("setLevel")
        set(value) {
          _builder.setLevel(value)
        }
      /**
       * ```
       * 粉丝勋章等级
       * ```
       *
       * `int64 level = 2;`
       */
      public fun clearLevel() {
        _builder.clearLevel()
      }

      /**
       * ```
       * 粉丝勋章显示颜色
       * ```
       *
       * `int64 color_start = 3;`
       */
      public var colorStart: kotlin.Long
        @JvmName("getColorStart")
        get() = _builder.getColorStart()
        @JvmName("setColorStart")
        set(value) {
          _builder.setColorStart(value)
        }
      /**
       * ```
       * 粉丝勋章显示颜色
       * ```
       *
       * `int64 color_start = 3;`
       */
      public fun clearColorStart() {
        _builder.clearColorStart()
      }

      /**
       * ```
       * 粉丝勋章底色
       * ```
       *
       * `int64 color_end = 4;`
       */
      public var colorEnd: kotlin.Long
        @JvmName("getColorEnd")
        get() = _builder.getColorEnd()
        @JvmName("setColorEnd")
        set(value) {
          _builder.setColorEnd(value)
        }
      /**
       * ```
       * 粉丝勋章底色
       * ```
       *
       * `int64 color_end = 4;`
       */
      public fun clearColorEnd() {
        _builder.clearColorEnd()
      }

      /**
       * ```
       * 粉丝勋章边框颜色
       * ```
       *
       * `int64 color_border = 5;`
       */
      public var colorBorder: kotlin.Long
        @JvmName("getColorBorder")
        get() = _builder.getColorBorder()
        @JvmName("setColorBorder")
        set(value) {
          _builder.setColorBorder(value)
        }
      /**
       * ```
       * 粉丝勋章边框颜色
       * ```
       *
       * `int64 color_border = 5;`
       */
      public fun clearColorBorder() {
        _builder.clearColorBorder()
      }

      /**
       * ```
       * 粉丝勋章名颜色
       * ```
       *
       * `int64 color_name = 6;`
       */
      public var colorName: kotlin.Long
        @JvmName("getColorName")
        get() = _builder.getColorName()
        @JvmName("setColorName")
        set(value) {
          _builder.setColorName(value)
        }
      /**
       * ```
       * 粉丝勋章名颜色
       * ```
       *
       * `int64 color_name = 6;`
       */
      public fun clearColorName() {
        _builder.clearColorName()
      }

      /**
       * ```
       * 粉丝勋章等级颜色
       * ```
       *
       * `int64 color_level = 7;`
       */
      public var colorLevel: kotlin.Long
        @JvmName("getColorLevel")
        get() = _builder.getColorLevel()
        @JvmName("setColorLevel")
        set(value) {
          _builder.setColorLevel(value)
        }
      /**
       * ```
       * 粉丝勋章等级颜色
       * ```
       *
       * `int64 color_level = 7;`
       */
      public fun clearColorLevel() {
        _builder.clearColorLevel()
      }

      /**
       * ```
       * ```
       *
       * `int64 guard_level = 8;`
       */
      public var guardLevel: kotlin.Long
        @JvmName("getGuardLevel")
        get() = _builder.getGuardLevel()
        @JvmName("setGuardLevel")
        set(value) {
          _builder.setGuardLevel(value)
        }
      /**
       * ```
       * ```
       *
       * `int64 guard_level = 8;`
       */
      public fun clearGuardLevel() {
        _builder.clearGuardLevel()
      }

      /**
       * ```
       * ```
       *
       * `string first_icon = 9;`
       */
      public var firstIcon: kotlin.String
        @JvmName("getFirstIcon")
        get() = _builder.getFirstIcon()
        @JvmName("setFirstIcon")
        set(value) {
          _builder.setFirstIcon(value)
        }
      /**
       * ```
       * ```
       *
       * `string first_icon = 9;`
       */
      public fun clearFirstIcon() {
        _builder.clearFirstIcon()
      }

      /**
       * ```
       * ```
       *
       * `int64 level_bg_color = 11;`
       */
      public var levelBgColor: kotlin.Long
        @JvmName("getLevelBgColor")
        get() = _builder.getLevelBgColor()
        @JvmName("setLevelBgColor")
        set(value) {
          _builder.setLevelBgColor(value)
        }
      /**
       * ```
       * ```
       *
       * `int64 level_bg_color = 11;`
       */
      public fun clearLevelBgColor() {
        _builder.clearLevelBgColor()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializeregion")
  public inline fun region(block: bilibili.main.community.reply.v1.MemberV2Kt.RegionKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Region =
    bilibili.main.community.reply.v1.MemberV2Kt.RegionKt.Dsl._create(bilibili.main.community.reply.v1.MemberV2.Region.newBuilder()).apply { block() }._build()
  /**
   * ```
   * NFT地区
   * ```
   *
   * Protobuf type `bilibili.main.community.reply.v1.MemberV2.Region`
   */
  public object RegionKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: bilibili.main.community.reply.v1.MemberV2.Region.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: bilibili.main.community.reply.v1.MemberV2.Region.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): bilibili.main.community.reply.v1.MemberV2.Region = _builder.build()

      /**
       * ```
       * 地区类型
       * ```
       *
       * `.bilibili.main.community.reply.v1.MemberV2.RegionType type = 1;`
       */
      public var type: bilibili.main.community.reply.v1.MemberV2.RegionType
        @JvmName("getType")
        get() = _builder.getType()
        @JvmName("setType")
        set(value) {
          _builder.setType(value)
        }
      public var typeValue: kotlin.Int
        @JvmName("getTypeValue")
        get() = _builder.getTypeValue()
        @JvmName("setTypeValue")
        set(value) {
          _builder.setTypeValue(value)
        }
      /**
       * ```
       * 地区类型
       * ```
       *
       * `.bilibili.main.community.reply.v1.MemberV2.RegionType type = 1;`
       */
      public fun clearType() {
        _builder.clearType()
      }

      /**
       * ```
       * 角标url
       * ```
       *
       * `string icon = 2;`
       */
      public var icon: kotlin.String
        @JvmName("getIcon")
        get() = _builder.getIcon()
        @JvmName("setIcon")
        set(value) {
          _builder.setIcon(value)
        }
      /**
       * ```
       * 角标url
       * ```
       *
       * `string icon = 2;`
       */
      public fun clearIcon() {
        _builder.clearIcon()
      }

      /**
       * ```
       * ```
       *
       * `.bilibili.main.community.reply.v1.MemberV2.ShowStatus show_status = 3;`
       */
      public var showStatus: bilibili.main.community.reply.v1.MemberV2.ShowStatus
        @JvmName("getShowStatus")
        get() = _builder.getShowStatus()
        @JvmName("setShowStatus")
        set(value) {
          _builder.setShowStatus(value)
        }
      public var showStatusValue: kotlin.Int
        @JvmName("getShowStatusValue")
        get() = _builder.getShowStatusValue()
        @JvmName("setShowStatusValue")
        set(value) {
          _builder.setShowStatusValue(value)
        }
      /**
       * ```
       * ```
       *
       * `.bilibili.main.community.reply.v1.MemberV2.ShowStatus show_status = 3;`
       */
      public fun clearShowStatus() {
        _builder.clearShowStatus()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializeinteraction")
  public inline fun interaction(block: bilibili.main.community.reply.v1.MemberV2Kt.InteractionKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Interaction =
    bilibili.main.community.reply.v1.MemberV2Kt.InteractionKt.Dsl._create(bilibili.main.community.reply.v1.MemberV2.Interaction.newBuilder()).apply { block() }._build()
  /**
   * ```
   * NFT信息
   * ```
   *
   * Protobuf type `bilibili.main.community.reply.v1.MemberV2.Interaction`
   */
  public object InteractionKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: bilibili.main.community.reply.v1.MemberV2.Interaction.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: bilibili.main.community.reply.v1.MemberV2.Interaction.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): bilibili.main.community.reply.v1.MemberV2.Interaction = _builder.build()

      /**
       * ```
       * ```
       *
       * `string itype = 1;`
       */
      public var itype: kotlin.String
        @JvmName("getItype")
        get() = _builder.getItype()
        @JvmName("setItype")
        set(value) {
          _builder.setItype(value)
        }
      /**
       * ```
       * ```
       *
       * `string itype = 1;`
       */
      public fun clearItype() {
        _builder.clearItype()
      }

      /**
       * ```
       * ```
       *
       * `string metadata_url = 2;`
       */
      public var metadataUrl: kotlin.String
        @JvmName("getMetadataUrl")
        get() = _builder.getMetadataUrl()
        @JvmName("setMetadataUrl")
        set(value) {
          _builder.setMetadataUrl(value)
        }
      /**
       * ```
       * ```
       *
       * `string metadata_url = 2;`
       */
      public fun clearMetadataUrl() {
        _builder.clearMetadataUrl()
      }

      /**
       * ```
       * ```
       *
       * `string nft_id = 3;`
       */
      public var nftId: kotlin.String
        @JvmName("getNftId")
        get() = _builder.getNftId()
        @JvmName("setNftId")
        set(value) {
          _builder.setNftId(value)
        }
      /**
       * ```
       * ```
       *
       * `string nft_id = 3;`
       */
      public fun clearNftId() {
        _builder.clearNftId()
      }

      /**
       * ```
       * NFT地区
       * ```
       *
       * `.bilibili.main.community.reply.v1.MemberV2.Region region = 4;`
       */
      public var region: bilibili.main.community.reply.v1.MemberV2.Region
        @JvmName("getRegion")
        get() = _builder.getRegion()
        @JvmName("setRegion")
        set(value) {
          _builder.setRegion(value)
        }
      /**
       * ```
       * NFT地区
       * ```
       *
       * `.bilibili.main.community.reply.v1.MemberV2.Region region = 4;`
       */
      public fun clearRegion() {
        _builder.clearRegion()
      }
      /**
       * ```
       * NFT地区
       * ```
       *
       * `.bilibili.main.community.reply.v1.MemberV2.Region region = 4;`
       * @return Whether the region field is set.
       */
      public fun hasRegion(): kotlin.Boolean {
        return _builder.hasRegion()
      }
      public val InteractionKt.Dsl.regionOrNull: bilibili.main.community.reply.v1.MemberV2.Region?
        get() = _builder.regionOrNull
    }
  }
  @kotlin.jvm.JvmName("-initializenft")
  public inline fun nft(block: bilibili.main.community.reply.v1.MemberV2Kt.NftKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Nft =
    bilibili.main.community.reply.v1.MemberV2Kt.NftKt.Dsl._create(bilibili.main.community.reply.v1.MemberV2.Nft.newBuilder()).apply { block() }._build()
  /**
   * ```
   * NFT
   * ```
   *
   * Protobuf type `bilibili.main.community.reply.v1.MemberV2.Nft`
   */
  public object NftKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: bilibili.main.community.reply.v1.MemberV2.Nft.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: bilibili.main.community.reply.v1.MemberV2.Nft.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): bilibili.main.community.reply.v1.MemberV2.Nft = _builder.build()

      /**
       * ```
       * ```
       *
       * `int32 face = 1;`
       */
      public var face: kotlin.Int
        @JvmName("getFace")
        get() = _builder.getFace()
        @JvmName("setFace")
        set(value) {
          _builder.setFace(value)
        }
      /**
       * ```
       * ```
       *
       * `int32 face = 1;`
       */
      public fun clearFace() {
        _builder.clearFace()
      }

      /**
       * ```
       * ```
       *
       * `.bilibili.main.community.reply.v1.MemberV2.Interaction interaction = 2;`
       */
      public var interaction: bilibili.main.community.reply.v1.MemberV2.Interaction
        @JvmName("getInteraction")
        get() = _builder.getInteraction()
        @JvmName("setInteraction")
        set(value) {
          _builder.setInteraction(value)
        }
      /**
       * ```
       * ```
       *
       * `.bilibili.main.community.reply.v1.MemberV2.Interaction interaction = 2;`
       */
      public fun clearInteraction() {
        _builder.clearInteraction()
      }
      /**
       * ```
       * ```
       *
       * `.bilibili.main.community.reply.v1.MemberV2.Interaction interaction = 2;`
       * @return Whether the interaction field is set.
       */
      public fun hasInteraction(): kotlin.Boolean {
        return _builder.hasInteraction()
      }
      public val NftKt.Dsl.interactionOrNull: bilibili.main.community.reply.v1.MemberV2.Interaction?
        get() = _builder.interactionOrNull
    }
  }
  @kotlin.jvm.JvmName("-initializesenior")
  public inline fun senior(block: bilibili.main.community.reply.v1.MemberV2Kt.SeniorKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Senior =
    bilibili.main.community.reply.v1.MemberV2Kt.SeniorKt.Dsl._create(bilibili.main.community.reply.v1.MemberV2.Senior.newBuilder()).apply { block() }._build()
  /**
   * ```
   * 硬核会员
   * ```
   *
   * Protobuf type `bilibili.main.community.reply.v1.MemberV2.Senior`
   */
  public object SeniorKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: bilibili.main.community.reply.v1.MemberV2.Senior.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: bilibili.main.community.reply.v1.MemberV2.Senior.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): bilibili.main.community.reply.v1.MemberV2.Senior = _builder.build()

      /**
       * ```
       * 是否为硬核会员
       * ```
       *
       * `int32 is_senior_member = 1;`
       */
      public var isSeniorMember: kotlin.Int
        @JvmName("getIsSeniorMember")
        get() = _builder.getIsSeniorMember()
        @JvmName("setIsSeniorMember")
        set(value) {
          _builder.setIsSeniorMember(value)
        }
      /**
       * ```
       * 是否为硬核会员
       * ```
       *
       * `int32 is_senior_member = 1;`
       */
      public fun clearIsSeniorMember() {
        _builder.clearIsSeniorMember()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializecontractor")
  public inline fun contractor(block: bilibili.main.community.reply.v1.MemberV2Kt.ContractorKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Contractor =
    bilibili.main.community.reply.v1.MemberV2Kt.ContractorKt.Dsl._create(bilibili.main.community.reply.v1.MemberV2.Contractor.newBuilder()).apply { block() }._build()
  /**
   * ```
   * 契约
   * ```
   *
   * Protobuf type `bilibili.main.community.reply.v1.MemberV2.Contractor`
   */
  public object ContractorKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: bilibili.main.community.reply.v1.MemberV2.Contractor.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: bilibili.main.community.reply.v1.MemberV2.Contractor.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): bilibili.main.community.reply.v1.MemberV2.Contractor = _builder.build()

      /**
       * ```
       * 是否和up签订契约
       * ```
       *
       * `bool is_contractor = 1;`
       */
      public var isContractor: kotlin.Boolean
        @JvmName("getIsContractor")
        get() = _builder.getIsContractor()
        @JvmName("setIsContractor")
        set(value) {
          _builder.setIsContractor(value)
        }
      /**
       * ```
       * 是否和up签订契约
       * ```
       *
       * `bool is_contractor = 1;`
       */
      public fun clearIsContractor() {
        _builder.clearIsContractor()
      }

      /**
       * ```
       * 契约显示文案
       * ```
       *
       * `string contract_desc = 2;`
       */
      public var contractDesc: kotlin.String
        @JvmName("getContractDesc")
        get() = _builder.getContractDesc()
        @JvmName("setContractDesc")
        set(value) {
          _builder.setContractDesc(value)
        }
      /**
       * ```
       * 契约显示文案
       * ```
       *
       * `string contract_desc = 2;`
       */
      public fun clearContractDesc() {
        _builder.clearContractDesc()
      }
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.MemberV2.copy(block: `bilibili.main.community.reply.v1`.MemberV2Kt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2 =
  `bilibili.main.community.reply.v1`.MemberV2Kt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.MemberV2.Basic.copy(block: `bilibili.main.community.reply.v1`.MemberV2Kt.BasicKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Basic =
  `bilibili.main.community.reply.v1`.MemberV2Kt.BasicKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.MemberV2.Official.copy(block: `bilibili.main.community.reply.v1`.MemberV2Kt.OfficialKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Official =
  `bilibili.main.community.reply.v1`.MemberV2Kt.OfficialKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.MemberV2.Vip.copy(block: `bilibili.main.community.reply.v1`.MemberV2Kt.VipKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Vip =
  `bilibili.main.community.reply.v1`.MemberV2Kt.VipKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.MemberV2.Garb.copy(block: `bilibili.main.community.reply.v1`.MemberV2Kt.GarbKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Garb =
  `bilibili.main.community.reply.v1`.MemberV2Kt.GarbKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.MemberV2.Medal.copy(block: `bilibili.main.community.reply.v1`.MemberV2Kt.MedalKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Medal =
  `bilibili.main.community.reply.v1`.MemberV2Kt.MedalKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.MemberV2.Region.copy(block: `bilibili.main.community.reply.v1`.MemberV2Kt.RegionKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Region =
  `bilibili.main.community.reply.v1`.MemberV2Kt.RegionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.MemberV2.Interaction.copy(block: `bilibili.main.community.reply.v1`.MemberV2Kt.InteractionKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Interaction =
  `bilibili.main.community.reply.v1`.MemberV2Kt.InteractionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.main.community.reply.v1.MemberV2.InteractionOrBuilder.regionOrNull: bilibili.main.community.reply.v1.MemberV2.Region?
  get() = if (hasRegion()) getRegion() else null

@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.MemberV2.Nft.copy(block: `bilibili.main.community.reply.v1`.MemberV2Kt.NftKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Nft =
  `bilibili.main.community.reply.v1`.MemberV2Kt.NftKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.main.community.reply.v1.MemberV2.NftOrBuilder.interactionOrNull: bilibili.main.community.reply.v1.MemberV2.Interaction?
  get() = if (hasInteraction()) getInteraction() else null

@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.MemberV2.Senior.copy(block: `bilibili.main.community.reply.v1`.MemberV2Kt.SeniorKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Senior =
  `bilibili.main.community.reply.v1`.MemberV2Kt.SeniorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.MemberV2.Contractor.copy(block: `bilibili.main.community.reply.v1`.MemberV2Kt.ContractorKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.MemberV2.Contractor =
  `bilibili.main.community.reply.v1`.MemberV2Kt.ContractorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.main.community.reply.v1.MemberV2OrBuilder.basicOrNull: bilibili.main.community.reply.v1.MemberV2.Basic?
  get() = if (hasBasic()) getBasic() else null

public val bilibili.main.community.reply.v1.MemberV2OrBuilder.officialOrNull: bilibili.main.community.reply.v1.MemberV2.Official?
  get() = if (hasOfficial()) getOfficial() else null

public val bilibili.main.community.reply.v1.MemberV2OrBuilder.vipOrNull: bilibili.main.community.reply.v1.MemberV2.Vip?
  get() = if (hasVip()) getVip() else null

public val bilibili.main.community.reply.v1.MemberV2OrBuilder.garbOrNull: bilibili.main.community.reply.v1.MemberV2.Garb?
  get() = if (hasGarb()) getGarb() else null

public val bilibili.main.community.reply.v1.MemberV2OrBuilder.medalOrNull: bilibili.main.community.reply.v1.MemberV2.Medal?
  get() = if (hasMedal()) getMedal() else null

public val bilibili.main.community.reply.v1.MemberV2OrBuilder.nftOrNull: bilibili.main.community.reply.v1.MemberV2.Nft?
  get() = if (hasNft()) getNft() else null

public val bilibili.main.community.reply.v1.MemberV2OrBuilder.seniorOrNull: bilibili.main.community.reply.v1.MemberV2.Senior?
  get() = if (hasSenior()) getSenior() else null

public val bilibili.main.community.reply.v1.MemberV2OrBuilder.contractorOrNull: bilibili.main.community.reply.v1.MemberV2.Contractor?
  get() = if (hasContractor()) getContractor() else null

