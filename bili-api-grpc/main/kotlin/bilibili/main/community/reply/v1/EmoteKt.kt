// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/main/community/reply/v1/reply.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.main.community.reply.v1;

@kotlin.jvm.JvmName("-initializeemote")
public inline fun emote(block: bilibili.main.community.reply.v1.EmoteKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.Emote =
  bilibili.main.community.reply.v1.EmoteKt.Dsl._create(bilibili.main.community.reply.v1.Emote.newBuilder()).apply { block() }._build()
/**
 * ```
 * 表情项
 * ```
 *
 * Protobuf type `bilibili.main.community.reply.v1.Emote`
 */
public object EmoteKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.main.community.reply.v1.Emote.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.main.community.reply.v1.Emote.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.main.community.reply.v1.Emote = _builder.build()

    /**
     * ```
     * 表情大小
     * 1:小 2:大
     * ```
     *
     * `int64 size = 1;`
     */
    public var size: kotlin.Long
      @JvmName("getSize")
      get() = _builder.getSize()
      @JvmName("setSize")
      set(value) {
        _builder.setSize(value)
      }
    /**
     * ```
     * 表情大小
     * 1:小 2:大
     * ```
     *
     * `int64 size = 1;`
     */
    public fun clearSize() {
      _builder.clearSize()
    }

    /**
     * ```
     * 表情url
     * ```
     *
     * `string url = 2;`
     */
    public var url: kotlin.String
      @JvmName("getUrl")
      get() = _builder.getUrl()
      @JvmName("setUrl")
      set(value) {
        _builder.setUrl(value)
      }
    /**
     * ```
     * 表情url
     * ```
     *
     * `string url = 2;`
     */
    public fun clearUrl() {
      _builder.clearUrl()
    }

    /**
     * ```
     * ```
     *
     * `string jump_url = 3;`
     */
    public var jumpUrl: kotlin.String
      @JvmName("getJumpUrl")
      get() = _builder.getJumpUrl()
      @JvmName("setJumpUrl")
      set(value) {
        _builder.setJumpUrl(value)
      }
    /**
     * ```
     * ```
     *
     * `string jump_url = 3;`
     */
    public fun clearJumpUrl() {
      _builder.clearJumpUrl()
    }

    /**
     * ```
     * ```
     *
     * `string jump_title = 4;`
     */
    public var jumpTitle: kotlin.String
      @JvmName("getJumpTitle")
      get() = _builder.getJumpTitle()
      @JvmName("setJumpTitle")
      set(value) {
        _builder.setJumpTitle(value)
      }
    /**
     * ```
     * ```
     *
     * `string jump_title = 4;`
     */
    public fun clearJumpTitle() {
      _builder.clearJumpTitle()
    }

    /**
     * ```
     * ```
     *
     * `int64 id = 5;`
     */
    public var id: kotlin.Long
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 id = 5;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * ```
     * ```
     *
     * `int64 package_id = 6;`
     */
    public var packageId: kotlin.Long
      @JvmName("getPackageId")
      get() = _builder.getPackageId()
      @JvmName("setPackageId")
      set(value) {
        _builder.setPackageId(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 package_id = 6;`
     */
    public fun clearPackageId() {
      _builder.clearPackageId()
    }

    /**
     * ```
     * ```
     *
     * `string gif_url = 7;`
     */
    public var gifUrl: kotlin.String
      @JvmName("getGifUrl")
      get() = _builder.getGifUrl()
      @JvmName("setGifUrl")
      set(value) {
        _builder.setGifUrl(value)
      }
    /**
     * ```
     * ```
     *
     * `string gif_url = 7;`
     */
    public fun clearGifUrl() {
      _builder.clearGifUrl()
    }

    /**
     * ```
     * ```
     *
     * `string text = 8;`
     */
    public var text: kotlin.String
      @JvmName("getText")
      get() = _builder.getText()
      @JvmName("setText")
      set(value) {
        _builder.setText(value)
      }
    /**
     * ```
     * ```
     *
     * `string text = 8;`
     */
    public fun clearText() {
      _builder.clearText()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.Emote.copy(block: `bilibili.main.community.reply.v1`.EmoteKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.Emote =
  `bilibili.main.community.reply.v1`.EmoteKt.Dsl._create(this.toBuilder()).apply { block() }._build()

