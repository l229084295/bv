// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/main/community/reply/v1/reply.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.main.community.reply.v1;

@kotlin.jvm.JvmName("-initializeupSelection")
public inline fun upSelection(block: bilibili.main.community.reply.v1.UpSelectionKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.UpSelection =
  bilibili.main.community.reply.v1.UpSelectionKt.Dsl._create(bilibili.main.community.reply.v1.UpSelection.newBuilder()).apply { block() }._build()
/**
 * ```
 * 精选评论
 * ```
 *
 * Protobuf type `bilibili.main.community.reply.v1.UpSelection`
 */
public object UpSelectionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.main.community.reply.v1.UpSelection.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.main.community.reply.v1.UpSelection.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.main.community.reply.v1.UpSelection = _builder.build()

    /**
     * ```
     * 待审评论数
     * ```
     *
     * `int64 pending_count = 1;`
     */
    public var pendingCount: kotlin.Long
      @JvmName("getPendingCount")
      get() = _builder.getPendingCount()
      @JvmName("setPendingCount")
      set(value) {
        _builder.setPendingCount(value)
      }
    /**
     * ```
     * 待审评论数
     * ```
     *
     * `int64 pending_count = 1;`
     */
    public fun clearPendingCount() {
      _builder.clearPendingCount()
    }

    /**
     * ```
     * 忽略评论数
     * ```
     *
     * `int64 ignore_count = 2;`
     */
    public var ignoreCount: kotlin.Long
      @JvmName("getIgnoreCount")
      get() = _builder.getIgnoreCount()
      @JvmName("setIgnoreCount")
      set(value) {
        _builder.setIgnoreCount(value)
      }
    /**
     * ```
     * 忽略评论数
     * ```
     *
     * `int64 ignore_count = 2;`
     */
    public fun clearIgnoreCount() {
      _builder.clearIgnoreCount()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.UpSelection.copy(block: `bilibili.main.community.reply.v1`.UpSelectionKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.UpSelection =
  `bilibili.main.community.reply.v1`.UpSelectionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

