// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/main/community/reply/v1/reply.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.main.community.reply.v1;

@kotlin.jvm.JvmName("-initializemember")
public inline fun member(block: bilibili.main.community.reply.v1.MemberKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.Member =
  bilibili.main.community.reply.v1.MemberKt.Dsl._create(bilibili.main.community.reply.v1.Member.newBuilder()).apply { block() }._build()
/**
 * ```
 * 用户信息
 * ```
 *
 * Protobuf type `bilibili.main.community.reply.v1.Member`
 */
public object MemberKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.main.community.reply.v1.Member.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.main.community.reply.v1.Member.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.main.community.reply.v1.Member = _builder.build()

    /**
     * ```
     * 用户mid
     * ```
     *
     * `int64 mid = 1;`
     */
    public var mid: kotlin.Long
      @JvmName("getMid")
      get() = _builder.getMid()
      @JvmName("setMid")
      set(value) {
        _builder.setMid(value)
      }
    /**
     * ```
     * 用户mid
     * ```
     *
     * `int64 mid = 1;`
     */
    public fun clearMid() {
      _builder.clearMid()
    }

    /**
     * ```
     * 昵称
     * ```
     *
     * `string name = 2;`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * ```
     * 昵称
     * ```
     *
     * `string name = 2;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * ```
     * 性别
     * ```
     *
     * `string sex = 3;`
     */
    public var sex: kotlin.String
      @JvmName("getSex")
      get() = _builder.getSex()
      @JvmName("setSex")
      set(value) {
        _builder.setSex(value)
      }
    /**
     * ```
     * 性别
     * ```
     *
     * `string sex = 3;`
     */
    public fun clearSex() {
      _builder.clearSex()
    }

    /**
     * ```
     * 头像url
     * ```
     *
     * `string face = 4;`
     */
    public var face: kotlin.String
      @JvmName("getFace")
      get() = _builder.getFace()
      @JvmName("setFace")
      set(value) {
        _builder.setFace(value)
      }
    /**
     * ```
     * 头像url
     * ```
     *
     * `string face = 4;`
     */
    public fun clearFace() {
      _builder.clearFace()
    }

    /**
     * ```
     * 等级
     * ```
     *
     * `int64 level = 5;`
     */
    public var level: kotlin.Long
      @JvmName("getLevel")
      get() = _builder.getLevel()
      @JvmName("setLevel")
      set(value) {
        _builder.setLevel(value)
      }
    /**
     * ```
     * 等级
     * ```
     *
     * `int64 level = 5;`
     */
    public fun clearLevel() {
      _builder.clearLevel()
    }

    /**
     * ```
     * 认证类型
     * ```
     *
     * `int64 official_verify_type = 6;`
     */
    public var officialVerifyType: kotlin.Long
      @JvmName("getOfficialVerifyType")
      get() = _builder.getOfficialVerifyType()
      @JvmName("setOfficialVerifyType")
      set(value) {
        _builder.setOfficialVerifyType(value)
      }
    /**
     * ```
     * 认证类型
     * ```
     *
     * `int64 official_verify_type = 6;`
     */
    public fun clearOfficialVerifyType() {
      _builder.clearOfficialVerifyType()
    }

    /**
     * ```
     * 会员类型
     * 0:不是大会员 1:月度会员 2:年度大会员
     * ```
     *
     * `int64 vip_type = 7;`
     */
    public var vipType: kotlin.Long
      @JvmName("getVipType")
      get() = _builder.getVipType()
      @JvmName("setVipType")
      set(value) {
        _builder.setVipType(value)
      }
    /**
     * ```
     * 会员类型
     * 0:不是大会员 1:月度会员 2:年度大会员
     * ```
     *
     * `int64 vip_type = 7;`
     */
    public fun clearVipType() {
      _builder.clearVipType()
    }

    /**
     * ```
     * 会员状态
     * ```
     *
     * `int64 vip_status = 8;`
     */
    public var vipStatus: kotlin.Long
      @JvmName("getVipStatus")
      get() = _builder.getVipStatus()
      @JvmName("setVipStatus")
      set(value) {
        _builder.setVipStatus(value)
      }
    /**
     * ```
     * 会员状态
     * ```
     *
     * `int64 vip_status = 8;`
     */
    public fun clearVipStatus() {
      _builder.clearVipStatus()
    }

    /**
     * ```
     * 会员样式
     * ```
     *
     * `int64 vip_theme_type = 9;`
     */
    public var vipThemeType: kotlin.Long
      @JvmName("getVipThemeType")
      get() = _builder.getVipThemeType()
      @JvmName("setVipThemeType")
      set(value) {
        _builder.setVipThemeType(value)
      }
    /**
     * ```
     * 会员样式
     * ```
     *
     * `int64 vip_theme_type = 9;`
     */
    public fun clearVipThemeType() {
      _builder.clearVipThemeType()
    }

    /**
     * ```
     * 会员铭牌样式url
     * ```
     *
     * `string vip_label_path = 10;`
     */
    public var vipLabelPath: kotlin.String
      @JvmName("getVipLabelPath")
      get() = _builder.getVipLabelPath()
      @JvmName("setVipLabelPath")
      set(value) {
        _builder.setVipLabelPath(value)
      }
    /**
     * ```
     * 会员铭牌样式url
     * ```
     *
     * `string vip_label_path = 10;`
     */
    public fun clearVipLabelPath() {
      _builder.clearVipLabelPath()
    }

    /**
     * ```
     * 头像框url
     * ```
     *
     * `string garb_pendant_image = 11;`
     */
    public var garbPendantImage: kotlin.String
      @JvmName("getGarbPendantImage")
      get() = _builder.getGarbPendantImage()
      @JvmName("setGarbPendantImage")
      set(value) {
        _builder.setGarbPendantImage(value)
      }
    /**
     * ```
     * 头像框url
     * ```
     *
     * `string garb_pendant_image = 11;`
     */
    public fun clearGarbPendantImage() {
      _builder.clearGarbPendantImage()
    }

    /**
     * ```
     * 装扮卡url
     * ```
     *
     * `string garb_card_image = 12;`
     */
    public var garbCardImage: kotlin.String
      @JvmName("getGarbCardImage")
      get() = _builder.getGarbCardImage()
      @JvmName("setGarbCardImage")
      set(value) {
        _builder.setGarbCardImage(value)
      }
    /**
     * ```
     * 装扮卡url
     * ```
     *
     * `string garb_card_image = 12;`
     */
    public fun clearGarbCardImage() {
      _builder.clearGarbCardImage()
    }

    /**
     * ```
     * 有关注按钮时的装扮卡url
     * ```
     *
     * `string garb_card_image_with_focus = 13;`
     */
    public var garbCardImageWithFocus: kotlin.String
      @JvmName("getGarbCardImageWithFocus")
      get() = _builder.getGarbCardImageWithFocus()
      @JvmName("setGarbCardImageWithFocus")
      set(value) {
        _builder.setGarbCardImageWithFocus(value)
      }
    /**
     * ```
     * 有关注按钮时的装扮卡url
     * ```
     *
     * `string garb_card_image_with_focus = 13;`
     */
    public fun clearGarbCardImageWithFocus() {
      _builder.clearGarbCardImageWithFocus()
    }

    /**
     * ```
     * 专属装扮页面url
     * ```
     *
     * `string garb_card_jump_url = 14;`
     */
    public var garbCardJumpUrl: kotlin.String
      @JvmName("getGarbCardJumpUrl")
      get() = _builder.getGarbCardJumpUrl()
      @JvmName("setGarbCardJumpUrl")
      set(value) {
        _builder.setGarbCardJumpUrl(value)
      }
    /**
     * ```
     * 专属装扮页面url
     * ```
     *
     * `string garb_card_jump_url = 14;`
     */
    public fun clearGarbCardJumpUrl() {
      _builder.clearGarbCardJumpUrl()
    }

    /**
     * ```
     * 专属装扮id
     * ```
     *
     * `string garb_card_number = 15;`
     */
    public var garbCardNumber: kotlin.String
      @JvmName("getGarbCardNumber")
      get() = _builder.getGarbCardNumber()
      @JvmName("setGarbCardNumber")
      set(value) {
        _builder.setGarbCardNumber(value)
      }
    /**
     * ```
     * 专属装扮id
     * ```
     *
     * `string garb_card_number = 15;`
     */
    public fun clearGarbCardNumber() {
      _builder.clearGarbCardNumber()
    }

    /**
     * ```
     * 专属装扮id显示颜色
     * ```
     *
     * `string garb_card_fan_color = 16;`
     */
    public var garbCardFanColor: kotlin.String
      @JvmName("getGarbCardFanColor")
      get() = _builder.getGarbCardFanColor()
      @JvmName("setGarbCardFanColor")
      set(value) {
        _builder.setGarbCardFanColor(value)
      }
    /**
     * ```
     * 专属装扮id显示颜色
     * ```
     *
     * `string garb_card_fan_color = 16;`
     */
    public fun clearGarbCardFanColor() {
      _builder.clearGarbCardFanColor()
    }

    /**
     * ```
     * 是否为专属装扮卡
     * ```
     *
     * `bool garb_card_is_fan = 17;`
     */
    public var garbCardIsFan: kotlin.Boolean
      @JvmName("getGarbCardIsFan")
      get() = _builder.getGarbCardIsFan()
      @JvmName("setGarbCardIsFan")
      set(value) {
        _builder.setGarbCardIsFan(value)
      }
    /**
     * ```
     * 是否为专属装扮卡
     * ```
     *
     * `bool garb_card_is_fan = 17;`
     */
    public fun clearGarbCardIsFan() {
      _builder.clearGarbCardIsFan()
    }

    /**
     * ```
     * 粉丝勋章名
     * ```
     *
     * `string fans_medal_name = 18;`
     */
    public var fansMedalName: kotlin.String
      @JvmName("getFansMedalName")
      get() = _builder.getFansMedalName()
      @JvmName("setFansMedalName")
      set(value) {
        _builder.setFansMedalName(value)
      }
    /**
     * ```
     * 粉丝勋章名
     * ```
     *
     * `string fans_medal_name = 18;`
     */
    public fun clearFansMedalName() {
      _builder.clearFansMedalName()
    }

    /**
     * ```
     * 粉丝勋章等级
     * ```
     *
     * `int64 fans_medal_level = 19;`
     */
    public var fansMedalLevel: kotlin.Long
      @JvmName("getFansMedalLevel")
      get() = _builder.getFansMedalLevel()
      @JvmName("setFansMedalLevel")
      set(value) {
        _builder.setFansMedalLevel(value)
      }
    /**
     * ```
     * 粉丝勋章等级
     * ```
     *
     * `int64 fans_medal_level = 19;`
     */
    public fun clearFansMedalLevel() {
      _builder.clearFansMedalLevel()
    }

    /**
     * ```
     * 粉丝勋章显示颜色
     * ```
     *
     * `int64 fans_medal_color = 20;`
     */
    public var fansMedalColor: kotlin.Long
      @JvmName("getFansMedalColor")
      get() = _builder.getFansMedalColor()
      @JvmName("setFansMedalColor")
      set(value) {
        _builder.setFansMedalColor(value)
      }
    /**
     * ```
     * 粉丝勋章显示颜色
     * ```
     *
     * `int64 fans_medal_color = 20;`
     */
    public fun clearFansMedalColor() {
      _builder.clearFansMedalColor()
    }

    /**
     * ```
     * 会员昵称颜色
     * ```
     *
     * `string vip_nickname_color = 21;`
     */
    public var vipNicknameColor: kotlin.String
      @JvmName("getVipNicknameColor")
      get() = _builder.getVipNicknameColor()
      @JvmName("setVipNicknameColor")
      set(value) {
        _builder.setVipNicknameColor(value)
      }
    /**
     * ```
     * 会员昵称颜色
     * ```
     *
     * `string vip_nickname_color = 21;`
     */
    public fun clearVipNicknameColor() {
      _builder.clearVipNicknameColor()
    }

    /**
     * ```
     * 会员角标
     * 0:无角标 1:粉色大会员角标 2:绿色小会员角标
     * ```
     *
     * `int32 vip_avatar_subscript = 22;`
     */
    public var vipAvatarSubscript: kotlin.Int
      @JvmName("getVipAvatarSubscript")
      get() = _builder.getVipAvatarSubscript()
      @JvmName("setVipAvatarSubscript")
      set(value) {
        _builder.setVipAvatarSubscript(value)
      }
    /**
     * ```
     * 会员角标
     * 0:无角标 1:粉色大会员角标 2:绿色小会员角标
     * ```
     *
     * `int32 vip_avatar_subscript = 22;`
     */
    public fun clearVipAvatarSubscript() {
      _builder.clearVipAvatarSubscript()
    }

    /**
     * ```
     * 会员标签文
     * ```
     *
     * `string vip_label_text = 23;`
     */
    public var vipLabelText: kotlin.String
      @JvmName("getVipLabelText")
      get() = _builder.getVipLabelText()
      @JvmName("setVipLabelText")
      set(value) {
        _builder.setVipLabelText(value)
      }
    /**
     * ```
     * 会员标签文
     * ```
     *
     * `string vip_label_text = 23;`
     */
    public fun clearVipLabelText() {
      _builder.clearVipLabelText()
    }

    /**
     * ```
     * 会员标颜色
     * ```
     *
     * `string vip_label_theme = 24;`
     */
    public var vipLabelTheme: kotlin.String
      @JvmName("getVipLabelTheme")
      get() = _builder.getVipLabelTheme()
      @JvmName("setVipLabelTheme")
      set(value) {
        _builder.setVipLabelTheme(value)
      }
    /**
     * ```
     * 会员标颜色
     * ```
     *
     * `string vip_label_theme = 24;`
     */
    public fun clearVipLabelTheme() {
      _builder.clearVipLabelTheme()
    }

    /**
     * ```
     * 粉丝勋章底色
     * ```
     *
     * `int64 fans_medal_color_end = 25;`
     */
    public var fansMedalColorEnd: kotlin.Long
      @JvmName("getFansMedalColorEnd")
      get() = _builder.getFansMedalColorEnd()
      @JvmName("setFansMedalColorEnd")
      set(value) {
        _builder.setFansMedalColorEnd(value)
      }
    /**
     * ```
     * 粉丝勋章底色
     * ```
     *
     * `int64 fans_medal_color_end = 25;`
     */
    public fun clearFansMedalColorEnd() {
      _builder.clearFansMedalColorEnd()
    }

    /**
     * ```
     * 粉丝勋章边框颜色
     * ```
     *
     * `int64 fans_medal_color_border = 26;`
     */
    public var fansMedalColorBorder: kotlin.Long
      @JvmName("getFansMedalColorBorder")
      get() = _builder.getFansMedalColorBorder()
      @JvmName("setFansMedalColorBorder")
      set(value) {
        _builder.setFansMedalColorBorder(value)
      }
    /**
     * ```
     * 粉丝勋章边框颜色
     * ```
     *
     * `int64 fans_medal_color_border = 26;`
     */
    public fun clearFansMedalColorBorder() {
      _builder.clearFansMedalColorBorder()
    }

    /**
     * ```
     * 粉丝勋章名颜色
     * ```
     *
     * `int64 fans_medal_color_name = 27;`
     */
    public var fansMedalColorName: kotlin.Long
      @JvmName("getFansMedalColorName")
      get() = _builder.getFansMedalColorName()
      @JvmName("setFansMedalColorName")
      set(value) {
        _builder.setFansMedalColorName(value)
      }
    /**
     * ```
     * 粉丝勋章名颜色
     * ```
     *
     * `int64 fans_medal_color_name = 27;`
     */
    public fun clearFansMedalColorName() {
      _builder.clearFansMedalColorName()
    }

    /**
     * ```
     * 粉丝勋章等级颜色
     * ```
     *
     * `int64 fans_medal_color_level = 28;`
     */
    public var fansMedalColorLevel: kotlin.Long
      @JvmName("getFansMedalColorLevel")
      get() = _builder.getFansMedalColorLevel()
      @JvmName("setFansMedalColorLevel")
      set(value) {
        _builder.setFansMedalColorLevel(value)
      }
    /**
     * ```
     * 粉丝勋章等级颜色
     * ```
     *
     * `int64 fans_medal_color_level = 28;`
     */
    public fun clearFansMedalColorLevel() {
      _builder.clearFansMedalColorLevel()
    }

    /**
     * ```
     * ```
     *
     * `int64 fans_guard_level = 29;`
     */
    public var fansGuardLevel: kotlin.Long
      @JvmName("getFansGuardLevel")
      get() = _builder.getFansGuardLevel()
      @JvmName("setFansGuardLevel")
      set(value) {
        _builder.setFansGuardLevel(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 fans_guard_level = 29;`
     */
    public fun clearFansGuardLevel() {
      _builder.clearFansGuardLevel()
    }

    /**
     * ```
     * ```
     *
     * `int32 face_nft = 30;`
     */
    public var faceNft: kotlin.Int
      @JvmName("getFaceNft")
      get() = _builder.getFaceNft()
      @JvmName("setFaceNft")
      set(value) {
        _builder.setFaceNft(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 face_nft = 30;`
     */
    public fun clearFaceNft() {
      _builder.clearFaceNft()
    }

    /**
     * ```
     * 是否NFT头像
     * ```
     *
     * `int32 face_nft_new = 31;`
     */
    public var faceNftNew: kotlin.Int
      @JvmName("getFaceNftNew")
      get() = _builder.getFaceNftNew()
      @JvmName("setFaceNftNew")
      set(value) {
        _builder.setFaceNftNew(value)
      }
    /**
     * ```
     * 是否NFT头像
     * ```
     *
     * `int32 face_nft_new = 31;`
     */
    public fun clearFaceNftNew() {
      _builder.clearFaceNftNew()
    }

    /**
     * ```
     * 是否为硬核会员
     * ```
     *
     * `int32 is_senior_member = 32;`
     */
    public var isSeniorMember: kotlin.Int
      @JvmName("getIsSeniorMember")
      get() = _builder.getIsSeniorMember()
      @JvmName("setIsSeniorMember")
      set(value) {
        _builder.setIsSeniorMember(value)
      }
    /**
     * ```
     * 是否为硬核会员
     * ```
     *
     * `int32 is_senior_member = 32;`
     */
    public fun clearIsSeniorMember() {
      _builder.clearIsSeniorMember()
    }

    /**
     * ```
     * NFT信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.Member.NftInteraction nft_interaction = 33;`
     */
    public var nftInteraction: bilibili.main.community.reply.v1.Member.NftInteraction
      @JvmName("getNftInteraction")
      get() = _builder.getNftInteraction()
      @JvmName("setNftInteraction")
      set(value) {
        _builder.setNftInteraction(value)
      }
    /**
     * ```
     * NFT信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.Member.NftInteraction nft_interaction = 33;`
     */
    public fun clearNftInteraction() {
      _builder.clearNftInteraction()
    }
    /**
     * ```
     * NFT信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.Member.NftInteraction nft_interaction = 33;`
     * @return Whether the nftInteraction field is set.
     */
    public fun hasNftInteraction(): kotlin.Boolean {
      return _builder.hasNftInteraction()
    }
    public val MemberKt.Dsl.nftInteractionOrNull: bilibili.main.community.reply.v1.Member.NftInteraction?
      get() = _builder.nftInteractionOrNull

    /**
     * ```
     * ```
     *
     * `string fans_guard_icon = 34;`
     */
    public var fansGuardIcon: kotlin.String
      @JvmName("getFansGuardIcon")
      get() = _builder.getFansGuardIcon()
      @JvmName("setFansGuardIcon")
      set(value) {
        _builder.setFansGuardIcon(value)
      }
    /**
     * ```
     * ```
     *
     * `string fans_guard_icon = 34;`
     */
    public fun clearFansGuardIcon() {
      _builder.clearFansGuardIcon()
    }

    /**
     * ```
     * ```
     *
     * `string fans_honor_icon = 35;`
     */
    public var fansHonorIcon: kotlin.String
      @JvmName("getFansHonorIcon")
      get() = _builder.getFansHonorIcon()
      @JvmName("setFansHonorIcon")
      set(value) {
        _builder.setFansHonorIcon(value)
      }
    /**
     * ```
     * ```
     *
     * `string fans_honor_icon = 35;`
     */
    public fun clearFansHonorIcon() {
      _builder.clearFansHonorIcon()
    }
  }
  @kotlin.jvm.JvmName("-initializeregion")
  public inline fun region(block: bilibili.main.community.reply.v1.MemberKt.RegionKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.Member.Region =
    bilibili.main.community.reply.v1.MemberKt.RegionKt.Dsl._create(bilibili.main.community.reply.v1.Member.Region.newBuilder()).apply { block() }._build()
  /**
   * ```
   * NFT地区
   * ```
   *
   * Protobuf type `bilibili.main.community.reply.v1.Member.Region`
   */
  public object RegionKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: bilibili.main.community.reply.v1.Member.Region.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: bilibili.main.community.reply.v1.Member.Region.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): bilibili.main.community.reply.v1.Member.Region = _builder.build()

      /**
       * ```
       * 地区类型
       * ```
       *
       * `.bilibili.main.community.reply.v1.Member.RegionType type = 1;`
       */
      public var type: bilibili.main.community.reply.v1.Member.RegionType
        @JvmName("getType")
        get() = _builder.getType()
        @JvmName("setType")
        set(value) {
          _builder.setType(value)
        }
      public var typeValue: kotlin.Int
        @JvmName("getTypeValue")
        get() = _builder.getTypeValue()
        @JvmName("setTypeValue")
        set(value) {
          _builder.setTypeValue(value)
        }
      /**
       * ```
       * 地区类型
       * ```
       *
       * `.bilibili.main.community.reply.v1.Member.RegionType type = 1;`
       */
      public fun clearType() {
        _builder.clearType()
      }

      /**
       * ```
       * 角标url
       * ```
       *
       * `string icon = 2;`
       */
      public var icon: kotlin.String
        @JvmName("getIcon")
        get() = _builder.getIcon()
        @JvmName("setIcon")
        set(value) {
          _builder.setIcon(value)
        }
      /**
       * ```
       * 角标url
       * ```
       *
       * `string icon = 2;`
       */
      public fun clearIcon() {
        _builder.clearIcon()
      }

      /**
       * ```
       * ```
       *
       * `.bilibili.main.community.reply.v1.Member.ShowStatus show_status = 3;`
       */
      public var showStatus: bilibili.main.community.reply.v1.Member.ShowStatus
        @JvmName("getShowStatus")
        get() = _builder.getShowStatus()
        @JvmName("setShowStatus")
        set(value) {
          _builder.setShowStatus(value)
        }
      public var showStatusValue: kotlin.Int
        @JvmName("getShowStatusValue")
        get() = _builder.getShowStatusValue()
        @JvmName("setShowStatusValue")
        set(value) {
          _builder.setShowStatusValue(value)
        }
      /**
       * ```
       * ```
       *
       * `.bilibili.main.community.reply.v1.Member.ShowStatus show_status = 3;`
       */
      public fun clearShowStatus() {
        _builder.clearShowStatus()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializenftInteraction")
  public inline fun nftInteraction(block: bilibili.main.community.reply.v1.MemberKt.NftInteractionKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.Member.NftInteraction =
    bilibili.main.community.reply.v1.MemberKt.NftInteractionKt.Dsl._create(bilibili.main.community.reply.v1.Member.NftInteraction.newBuilder()).apply { block() }._build()
  /**
   * ```
   * NFT信息
   * ```
   *
   * Protobuf type `bilibili.main.community.reply.v1.Member.NftInteraction`
   */
  public object NftInteractionKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: bilibili.main.community.reply.v1.Member.NftInteraction.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: bilibili.main.community.reply.v1.Member.NftInteraction.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): bilibili.main.community.reply.v1.Member.NftInteraction = _builder.build()

      /**
       * ```
       * ```
       *
       * `string itype = 1;`
       */
      public var itype: kotlin.String
        @JvmName("getItype")
        get() = _builder.getItype()
        @JvmName("setItype")
        set(value) {
          _builder.setItype(value)
        }
      /**
       * ```
       * ```
       *
       * `string itype = 1;`
       */
      public fun clearItype() {
        _builder.clearItype()
      }

      /**
       * ```
       * ```
       *
       * `string metadata_url = 2;`
       */
      public var metadataUrl: kotlin.String
        @JvmName("getMetadataUrl")
        get() = _builder.getMetadataUrl()
        @JvmName("setMetadataUrl")
        set(value) {
          _builder.setMetadataUrl(value)
        }
      /**
       * ```
       * ```
       *
       * `string metadata_url = 2;`
       */
      public fun clearMetadataUrl() {
        _builder.clearMetadataUrl()
      }

      /**
       * ```
       * ```
       *
       * `string nft_id = 3;`
       */
      public var nftId: kotlin.String
        @JvmName("getNftId")
        get() = _builder.getNftId()
        @JvmName("setNftId")
        set(value) {
          _builder.setNftId(value)
        }
      /**
       * ```
       * ```
       *
       * `string nft_id = 3;`
       */
      public fun clearNftId() {
        _builder.clearNftId()
      }

      /**
       * ```
       * NFT地区
       * ```
       *
       * `.bilibili.main.community.reply.v1.Member.Region region = 4;`
       */
      public var region: bilibili.main.community.reply.v1.Member.Region
        @JvmName("getRegion")
        get() = _builder.getRegion()
        @JvmName("setRegion")
        set(value) {
          _builder.setRegion(value)
        }
      /**
       * ```
       * NFT地区
       * ```
       *
       * `.bilibili.main.community.reply.v1.Member.Region region = 4;`
       */
      public fun clearRegion() {
        _builder.clearRegion()
      }
      /**
       * ```
       * NFT地区
       * ```
       *
       * `.bilibili.main.community.reply.v1.Member.Region region = 4;`
       * @return Whether the region field is set.
       */
      public fun hasRegion(): kotlin.Boolean {
        return _builder.hasRegion()
      }
      public val NftInteractionKt.Dsl.regionOrNull: bilibili.main.community.reply.v1.Member.Region?
        get() = _builder.regionOrNull
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.Member.copy(block: `bilibili.main.community.reply.v1`.MemberKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.Member =
  `bilibili.main.community.reply.v1`.MemberKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.Member.Region.copy(block: `bilibili.main.community.reply.v1`.MemberKt.RegionKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.Member.Region =
  `bilibili.main.community.reply.v1`.MemberKt.RegionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.Member.NftInteraction.copy(block: `bilibili.main.community.reply.v1`.MemberKt.NftInteractionKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.Member.NftInteraction =
  `bilibili.main.community.reply.v1`.MemberKt.NftInteractionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.main.community.reply.v1.Member.NftInteractionOrBuilder.regionOrNull: bilibili.main.community.reply.v1.Member.Region?
  get() = if (hasRegion()) getRegion() else null

public val bilibili.main.community.reply.v1.MemberOrBuilder.nftInteractionOrNull: bilibili.main.community.reply.v1.Member.NftInteraction?
  get() = if (hasNftInteraction()) getNftInteraction() else null

