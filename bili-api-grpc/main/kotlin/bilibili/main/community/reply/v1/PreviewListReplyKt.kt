// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/main/community/reply/v1/reply.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.main.community.reply.v1;

@kotlin.jvm.JvmName("-initializepreviewListReply")
public inline fun previewListReply(block: bilibili.main.community.reply.v1.PreviewListReplyKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.PreviewListReply =
  bilibili.main.community.reply.v1.PreviewListReplyKt.Dsl._create(bilibili.main.community.reply.v1.PreviewListReply.newBuilder()).apply { block() }._build()
/**
 * ```
 * 评论区预览-回复
 * ```
 *
 * Protobuf type `bilibili.main.community.reply.v1.PreviewListReply`
 */
public object PreviewListReplyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.main.community.reply.v1.PreviewListReply.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.main.community.reply.v1.PreviewListReply.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.main.community.reply.v1.PreviewListReply = _builder.build()

    /**
     * ```
     * 页面游标
     * ```
     *
     * `.bilibili.main.community.reply.v1.CursorReply cursor = 1;`
     */
    public var cursor: bilibili.main.community.reply.v1.CursorReply
      @JvmName("getCursor")
      get() = _builder.getCursor()
      @JvmName("setCursor")
      set(value) {
        _builder.setCursor(value)
      }
    /**
     * ```
     * 页面游标
     * ```
     *
     * `.bilibili.main.community.reply.v1.CursorReply cursor = 1;`
     */
    public fun clearCursor() {
      _builder.clearCursor()
    }
    /**
     * ```
     * 页面游标
     * ```
     *
     * `.bilibili.main.community.reply.v1.CursorReply cursor = 1;`
     * @return Whether the cursor field is set.
     */
    public fun hasCursor(): kotlin.Boolean {
      return _builder.hasCursor()
    }
    public val PreviewListReplyKt.Dsl.cursorOrNull: bilibili.main.community.reply.v1.CursorReply?
      get() = _builder.cursorOrNull

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RepliesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * 评论列表
     * ```
     *
     * `repeated .bilibili.main.community.reply.v1.ReplyInfo replies = 2;`
     */
     public val replies: com.google.protobuf.kotlin.DslList<bilibili.main.community.reply.v1.ReplyInfo, RepliesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRepliesList()
      )
    /**
     * ```
     * 评论列表
     * ```
     *
     * `repeated .bilibili.main.community.reply.v1.ReplyInfo replies = 2;`
     * @param value The replies to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addReplies")
    public fun com.google.protobuf.kotlin.DslList<bilibili.main.community.reply.v1.ReplyInfo, RepliesProxy>.add(value: bilibili.main.community.reply.v1.ReplyInfo) {
      _builder.addReplies(value)
    }
    /**
     * ```
     * 评论列表
     * ```
     *
     * `repeated .bilibili.main.community.reply.v1.ReplyInfo replies = 2;`
     * @param value The replies to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignReplies")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bilibili.main.community.reply.v1.ReplyInfo, RepliesProxy>.plusAssign(value: bilibili.main.community.reply.v1.ReplyInfo) {
      add(value)
    }
    /**
     * ```
     * 评论列表
     * ```
     *
     * `repeated .bilibili.main.community.reply.v1.ReplyInfo replies = 2;`
     * @param values The replies to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllReplies")
    public fun com.google.protobuf.kotlin.DslList<bilibili.main.community.reply.v1.ReplyInfo, RepliesProxy>.addAll(values: kotlin.collections.Iterable<bilibili.main.community.reply.v1.ReplyInfo>) {
      _builder.addAllReplies(values)
    }
    /**
     * ```
     * 评论列表
     * ```
     *
     * `repeated .bilibili.main.community.reply.v1.ReplyInfo replies = 2;`
     * @param values The replies to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllReplies")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bilibili.main.community.reply.v1.ReplyInfo, RepliesProxy>.plusAssign(values: kotlin.collections.Iterable<bilibili.main.community.reply.v1.ReplyInfo>) {
      addAll(values)
    }
    /**
     * ```
     * 评论列表
     * ```
     *
     * `repeated .bilibili.main.community.reply.v1.ReplyInfo replies = 2;`
     * @param index The index to set the value at.
     * @param value The replies to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setReplies")
    public operator fun com.google.protobuf.kotlin.DslList<bilibili.main.community.reply.v1.ReplyInfo, RepliesProxy>.set(index: kotlin.Int, value: bilibili.main.community.reply.v1.ReplyInfo) {
      _builder.setReplies(index, value)
    }
    /**
     * ```
     * 评论列表
     * ```
     *
     * `repeated .bilibili.main.community.reply.v1.ReplyInfo replies = 2;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearReplies")
    public fun com.google.protobuf.kotlin.DslList<bilibili.main.community.reply.v1.ReplyInfo, RepliesProxy>.clear() {
      _builder.clearReplies()
    }


    /**
     * ```
     * 评论区显示控制字段
     * ```
     *
     * `.bilibili.main.community.reply.v1.SubjectControl subject_control = 3;`
     */
    public var subjectControl: bilibili.main.community.reply.v1.SubjectControl
      @JvmName("getSubjectControl")
      get() = _builder.getSubjectControl()
      @JvmName("setSubjectControl")
      set(value) {
        _builder.setSubjectControl(value)
      }
    /**
     * ```
     * 评论区显示控制字段
     * ```
     *
     * `.bilibili.main.community.reply.v1.SubjectControl subject_control = 3;`
     */
    public fun clearSubjectControl() {
      _builder.clearSubjectControl()
    }
    /**
     * ```
     * 评论区显示控制字段
     * ```
     *
     * `.bilibili.main.community.reply.v1.SubjectControl subject_control = 3;`
     * @return Whether the subjectControl field is set.
     */
    public fun hasSubjectControl(): kotlin.Boolean {
      return _builder.hasSubjectControl()
    }
    public val PreviewListReplyKt.Dsl.subjectControlOrNull: bilibili.main.community.reply.v1.SubjectControl?
      get() = _builder.subjectControlOrNull

    /**
     * ```
     * UP置顶评论
     * ```
     *
     * `.bilibili.main.community.reply.v1.ReplyInfo upTop = 4;`
     */
    public var upTop: bilibili.main.community.reply.v1.ReplyInfo
      @JvmName("getUpTop")
      get() = _builder.getUpTop()
      @JvmName("setUpTop")
      set(value) {
        _builder.setUpTop(value)
      }
    /**
     * ```
     * UP置顶评论
     * ```
     *
     * `.bilibili.main.community.reply.v1.ReplyInfo upTop = 4;`
     */
    public fun clearUpTop() {
      _builder.clearUpTop()
    }
    /**
     * ```
     * UP置顶评论
     * ```
     *
     * `.bilibili.main.community.reply.v1.ReplyInfo upTop = 4;`
     * @return Whether the upTop field is set.
     */
    public fun hasUpTop(): kotlin.Boolean {
      return _builder.hasUpTop()
    }
    public val PreviewListReplyKt.Dsl.upTopOrNull: bilibili.main.community.reply.v1.ReplyInfo?
      get() = _builder.upTopOrNull

    /**
     * ```
     * 管理员置顶评论
     * ```
     *
     * `.bilibili.main.community.reply.v1.ReplyInfo admin_top = 5;`
     */
    public var adminTop: bilibili.main.community.reply.v1.ReplyInfo
      @JvmName("getAdminTop")
      get() = _builder.getAdminTop()
      @JvmName("setAdminTop")
      set(value) {
        _builder.setAdminTop(value)
      }
    /**
     * ```
     * 管理员置顶评论
     * ```
     *
     * `.bilibili.main.community.reply.v1.ReplyInfo admin_top = 5;`
     */
    public fun clearAdminTop() {
      _builder.clearAdminTop()
    }
    /**
     * ```
     * 管理员置顶评论
     * ```
     *
     * `.bilibili.main.community.reply.v1.ReplyInfo admin_top = 5;`
     * @return Whether the adminTop field is set.
     */
    public fun hasAdminTop(): kotlin.Boolean {
      return _builder.hasAdminTop()
    }
    public val PreviewListReplyKt.Dsl.adminTopOrNull: bilibili.main.community.reply.v1.ReplyInfo?
      get() = _builder.adminTopOrNull

    /**
     * ```
     * 投票置顶评论
     * ```
     *
     * `.bilibili.main.community.reply.v1.ReplyInfo vote_top = 6;`
     */
    public var voteTop: bilibili.main.community.reply.v1.ReplyInfo
      @JvmName("getVoteTop")
      get() = _builder.getVoteTop()
      @JvmName("setVoteTop")
      set(value) {
        _builder.setVoteTop(value)
      }
    /**
     * ```
     * 投票置顶评论
     * ```
     *
     * `.bilibili.main.community.reply.v1.ReplyInfo vote_top = 6;`
     */
    public fun clearVoteTop() {
      _builder.clearVoteTop()
    }
    /**
     * ```
     * 投票置顶评论
     * ```
     *
     * `.bilibili.main.community.reply.v1.ReplyInfo vote_top = 6;`
     * @return Whether the voteTop field is set.
     */
    public fun hasVoteTop(): kotlin.Boolean {
      return _builder.hasVoteTop()
    }
    public val PreviewListReplyKt.Dsl.voteTopOrNull: bilibili.main.community.reply.v1.ReplyInfo?
      get() = _builder.voteTopOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.PreviewListReply.copy(block: `bilibili.main.community.reply.v1`.PreviewListReplyKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.PreviewListReply =
  `bilibili.main.community.reply.v1`.PreviewListReplyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.main.community.reply.v1.PreviewListReplyOrBuilder.cursorOrNull: bilibili.main.community.reply.v1.CursorReply?
  get() = if (hasCursor()) getCursor() else null

public val bilibili.main.community.reply.v1.PreviewListReplyOrBuilder.subjectControlOrNull: bilibili.main.community.reply.v1.SubjectControl?
  get() = if (hasSubjectControl()) getSubjectControl() else null

public val bilibili.main.community.reply.v1.PreviewListReplyOrBuilder.upTopOrNull: bilibili.main.community.reply.v1.ReplyInfo?
  get() = if (hasUpTop()) getUpTop() else null

public val bilibili.main.community.reply.v1.PreviewListReplyOrBuilder.adminTopOrNull: bilibili.main.community.reply.v1.ReplyInfo?
  get() = if (hasAdminTop()) getAdminTop() else null

public val bilibili.main.community.reply.v1.PreviewListReplyOrBuilder.voteTopOrNull: bilibili.main.community.reply.v1.ReplyInfo?
  get() = if (hasVoteTop()) getVoteTop() else null

