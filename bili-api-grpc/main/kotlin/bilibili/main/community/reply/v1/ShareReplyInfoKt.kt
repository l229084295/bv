// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/main/community/reply/v1/reply.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.main.community.reply.v1;

@kotlin.jvm.JvmName("-initializeshareReplyInfo")
public inline fun shareReplyInfo(block: bilibili.main.community.reply.v1.ShareReplyInfoKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.ShareReplyInfo =
  bilibili.main.community.reply.v1.ShareReplyInfoKt.Dsl._create(bilibili.main.community.reply.v1.ShareReplyInfo.newBuilder()).apply { block() }._build()
/**
 * ```
 * 评论分享条目信息
 * ```
 *
 * Protobuf type `bilibili.main.community.reply.v1.ShareReplyInfo`
 */
public object ShareReplyInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.main.community.reply.v1.ShareReplyInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.main.community.reply.v1.ShareReplyInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.main.community.reply.v1.ShareReplyInfo = _builder.build()

    /**
     * ```
     * 用户信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.Member member = 1;`
     */
    public var member: bilibili.main.community.reply.v1.Member
      @JvmName("getMember")
      get() = _builder.getMember()
      @JvmName("setMember")
      set(value) {
        _builder.setMember(value)
      }
    /**
     * ```
     * 用户信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.Member member = 1;`
     */
    public fun clearMember() {
      _builder.clearMember()
    }
    /**
     * ```
     * 用户信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.Member member = 1;`
     * @return Whether the member field is set.
     */
    public fun hasMember(): kotlin.Boolean {
      return _builder.hasMember()
    }
    public val ShareReplyInfoKt.Dsl.memberOrNull: bilibili.main.community.reply.v1.Member?
      get() = _builder.memberOrNull

    /**
     * ```
     * 评论主体信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.Content content = 2;`
     */
    public var content: bilibili.main.community.reply.v1.Content
      @JvmName("getContent")
      get() = _builder.getContent()
      @JvmName("setContent")
      set(value) {
        _builder.setContent(value)
      }
    /**
     * ```
     * 评论主体信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.Content content = 2;`
     */
    public fun clearContent() {
      _builder.clearContent()
    }
    /**
     * ```
     * 评论主体信息
     * ```
     *
     * `.bilibili.main.community.reply.v1.Content content = 2;`
     * @return Whether the content field is set.
     */
    public fun hasContent(): kotlin.Boolean {
      return _builder.hasContent()
    }
    public val ShareReplyInfoKt.Dsl.contentOrNull: bilibili.main.community.reply.v1.Content?
      get() = _builder.contentOrNull

    /**
     * ```
     * 分享标题(评论发布者昵称)
     * ```
     *
     * `string title = 3;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * 分享标题(评论发布者昵称)
     * ```
     *
     * `string title = 3;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * 分享副标题 "发表了评论"
     * ```
     *
     * `string sub_title = 4;`
     */
    public var subTitle: kotlin.String
      @JvmName("getSubTitle")
      get() = _builder.getSubTitle()
      @JvmName("setSubTitle")
      set(value) {
        _builder.setSubTitle(value)
      }
    /**
     * ```
     * 分享副标题 "发表了评论"
     * ```
     *
     * `string sub_title = 4;`
     */
    public fun clearSubTitle() {
      _builder.clearSubTitle()
    }

    /**
     * ```
     * 荣誉信息文案 "获得了up主点赞"
     * ```
     *
     * `string achievement_text = 5;`
     */
    public var achievementText: kotlin.String
      @JvmName("getAchievementText")
      get() = _builder.getAchievementText()
      @JvmName("setAchievementText")
      set(value) {
        _builder.setAchievementText(value)
      }
    /**
     * ```
     * 荣誉信息文案 "获得了up主点赞"
     * ```
     *
     * `string achievement_text = 5;`
     */
    public fun clearAchievementText() {
      _builder.clearAchievementText()
    }

    /**
     * ```
     * ```
     *
     * `string label_url = 6;`
     */
    public var labelUrl: kotlin.String
      @JvmName("getLabelUrl")
      get() = _builder.getLabelUrl()
      @JvmName("setLabelUrl")
      set(value) {
        _builder.setLabelUrl(value)
      }
    /**
     * ```
     * ```
     *
     * `string label_url = 6;`
     */
    public fun clearLabelUrl() {
      _builder.clearLabelUrl()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.ShareReplyInfo.copy(block: `bilibili.main.community.reply.v1`.ShareReplyInfoKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.ShareReplyInfo =
  `bilibili.main.community.reply.v1`.ShareReplyInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.main.community.reply.v1.ShareReplyInfoOrBuilder.memberOrNull: bilibili.main.community.reply.v1.Member?
  get() = if (hasMember()) getMember() else null

public val bilibili.main.community.reply.v1.ShareReplyInfoOrBuilder.contentOrNull: bilibili.main.community.reply.v1.Content?
  get() = if (hasContent()) getContent() else null

