// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/main/community/reply/v1/reply.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.main.community.reply.v1;

@kotlin.jvm.JvmName("-initializesubjectControl")
public inline fun subjectControl(block: bilibili.main.community.reply.v1.SubjectControlKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.SubjectControl =
  bilibili.main.community.reply.v1.SubjectControlKt.Dsl._create(bilibili.main.community.reply.v1.SubjectControl.newBuilder()).apply { block() }._build()
/**
 * ```
 * 评论区控制字段
 * ```
 *
 * Protobuf type `bilibili.main.community.reply.v1.SubjectControl`
 */
public object SubjectControlKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.main.community.reply.v1.SubjectControl.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.main.community.reply.v1.SubjectControl.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.main.community.reply.v1.SubjectControl = _builder.build()

    /**
     * ```
     * UP主mid
     * ```
     *
     * `int64 up_mid = 1;`
     */
    public var upMid: kotlin.Long
      @JvmName("getUpMid")
      get() = _builder.getUpMid()
      @JvmName("setUpMid")
      set(value) {
        _builder.setUpMid(value)
      }
    /**
     * ```
     * UP主mid
     * ```
     *
     * `int64 up_mid = 1;`
     */
    public fun clearUpMid() {
      _builder.clearUpMid()
    }

    /**
     * ```
     * 自己是否为协管
     * ```
     *
     * `bool is_assist = 2;`
     */
    public var isAssist: kotlin.Boolean
      @JvmName("getIsAssist")
      get() = _builder.getIsAssist()
      @JvmName("setIsAssist")
      set(value) {
        _builder.setIsAssist(value)
      }
    /**
     * ```
     * 自己是否为协管
     * ```
     *
     * `bool is_assist = 2;`
     */
    public fun clearIsAssist() {
      _builder.clearIsAssist()
    }

    /**
     * ```
     * 是否只读
     * ```
     *
     * `bool read_only = 3;`
     */
    public var readOnly: kotlin.Boolean
      @JvmName("getReadOnly")
      get() = _builder.getReadOnly()
      @JvmName("setReadOnly")
      set(value) {
        _builder.setReadOnly(value)
      }
    /**
     * ```
     * 是否只读
     * ```
     *
     * `bool read_only = 3;`
     */
    public fun clearReadOnly() {
      _builder.clearReadOnly()
    }

    /**
     * ```
     * 是否有发起投票权限
     * ```
     *
     * `bool has_vote_access = 4;`
     */
    public var hasVoteAccess: kotlin.Boolean
      @JvmName("getHasVoteAccess")
      get() = _builder.getHasVoteAccess()
      @JvmName("setHasVoteAccess")
      set(value) {
        _builder.setHasVoteAccess(value)
      }
    /**
     * ```
     * 是否有发起投票权限
     * ```
     *
     * `bool has_vote_access = 4;`
     */
    public fun clearHasVoteAccess() {
      _builder.clearHasVoteAccess()
    }

    /**
     * ```
     * 是否有发起抽奖权限
     * ```
     *
     * `bool has_lottery_access = 5;`
     */
    public var hasLotteryAccess: kotlin.Boolean
      @JvmName("getHasLotteryAccess")
      get() = _builder.getHasLotteryAccess()
      @JvmName("setHasLotteryAccess")
      set(value) {
        _builder.setHasLotteryAccess(value)
      }
    /**
     * ```
     * 是否有发起抽奖权限
     * ```
     *
     * `bool has_lottery_access = 5;`
     */
    public fun clearHasLotteryAccess() {
      _builder.clearHasLotteryAccess()
    }

    /**
     * ```
     * 是否有被折叠评论
     * ```
     *
     * `bool has_folded_reply = 6;`
     */
    public var hasFoldedReply: kotlin.Boolean
      @JvmName("getHasFoldedReply")
      get() = _builder.getHasFoldedReply()
      @JvmName("setHasFoldedReply")
      set(value) {
        _builder.setHasFoldedReply(value)
      }
    /**
     * ```
     * 是否有被折叠评论
     * ```
     *
     * `bool has_folded_reply = 6;`
     */
    public fun clearHasFoldedReply() {
      _builder.clearHasFoldedReply()
    }

    /**
     * ```
     * 空评论区背景文案
     * ```
     *
     * `string bg_text = 7;`
     */
    public var bgText: kotlin.String
      @JvmName("getBgText")
      get() = _builder.getBgText()
      @JvmName("setBgText")
      set(value) {
        _builder.setBgText(value)
      }
    /**
     * ```
     * 空评论区背景文案
     * ```
     *
     * `string bg_text = 7;`
     */
    public fun clearBgText() {
      _builder.clearBgText()
    }

    /**
     * ```
     * 是否被UP拉黑
     * ```
     *
     * `bool up_blocked = 8;`
     */
    public var upBlocked: kotlin.Boolean
      @JvmName("getUpBlocked")
      get() = _builder.getUpBlocked()
      @JvmName("setUpBlocked")
      set(value) {
        _builder.setUpBlocked(value)
      }
    /**
     * ```
     * 是否被UP拉黑
     * ```
     *
     * `bool up_blocked = 8;`
     */
    public fun clearUpBlocked() {
      _builder.clearUpBlocked()
    }

    /**
     * ```
     * 是否有发起活动权限
     * ```
     *
     * `bool has_activity_access = 9;`
     */
    public var hasActivityAccess: kotlin.Boolean
      @JvmName("getHasActivityAccess")
      get() = _builder.getHasActivityAccess()
      @JvmName("setHasActivityAccess")
      set(value) {
        _builder.setHasActivityAccess(value)
      }
    /**
     * ```
     * 是否有发起活动权限
     * ```
     *
     * `bool has_activity_access = 9;`
     */
    public fun clearHasActivityAccess() {
      _builder.clearHasActivityAccess()
    }

    /**
     * ```
     * 标题展示控制
     * ```
     *
     * `bool show_title = 10;`
     */
    public var showTitle: kotlin.Boolean
      @JvmName("getShowTitle")
      get() = _builder.getShowTitle()
      @JvmName("setShowTitle")
      set(value) {
        _builder.setShowTitle(value)
      }
    /**
     * ```
     * 标题展示控制
     * ```
     *
     * `bool show_title = 10;`
     */
    public fun clearShowTitle() {
      _builder.clearShowTitle()
    }

    /**
     * ```
     * 是否显示UP主操作标志
     * ```
     *
     * `bool show_up_action = 11;`
     */
    public var showUpAction: kotlin.Boolean
      @JvmName("getShowUpAction")
      get() = _builder.getShowUpAction()
      @JvmName("setShowUpAction")
      set(value) {
        _builder.setShowUpAction(value)
      }
    /**
     * ```
     * 是否显示UP主操作标志
     * ```
     *
     * `bool show_up_action = 11;`
     */
    public fun clearShowUpAction() {
      _builder.clearShowUpAction()
    }

    /**
     * ```
     * 是否显示评论区排序切换按钮
     * ```
     *
     * `int64 switcher_type = 12;`
     */
    public var switcherType: kotlin.Long
      @JvmName("getSwitcherType")
      get() = _builder.getSwitcherType()
      @JvmName("setSwitcherType")
      set(value) {
        _builder.setSwitcherType(value)
      }
    /**
     * ```
     * 是否显示评论区排序切换按钮
     * ```
     *
     * `int64 switcher_type = 12;`
     */
    public fun clearSwitcherType() {
      _builder.clearSwitcherType()
    }

    /**
     * ```
     * 是否禁止输入框
     * ```
     *
     * `bool input_disable = 13;`
     */
    public var inputDisable: kotlin.Boolean
      @JvmName("getInputDisable")
      get() = _builder.getInputDisable()
      @JvmName("setInputDisable")
      set(value) {
        _builder.setInputDisable(value)
      }
    /**
     * ```
     * 是否禁止输入框
     * ```
     *
     * `bool input_disable = 13;`
     */
    public fun clearInputDisable() {
      _builder.clearInputDisable()
    }

    /**
     * ```
     * 根评论输入框背景文案
     * ```
     *
     * `string root_text = 14;`
     */
    public var rootText: kotlin.String
      @JvmName("getRootText")
      get() = _builder.getRootText()
      @JvmName("setRootText")
      set(value) {
        _builder.setRootText(value)
      }
    /**
     * ```
     * 根评论输入框背景文案
     * ```
     *
     * `string root_text = 14;`
     */
    public fun clearRootText() {
      _builder.clearRootText()
    }

    /**
     * ```
     * 子评论输入框背景文案
     * ```
     *
     * `string child_text = 15;`
     */
    public var childText: kotlin.String
      @JvmName("getChildText")
      get() = _builder.getChildText()
      @JvmName("setChildText")
      set(value) {
        _builder.setChildText(value)
      }
    /**
     * ```
     * 子评论输入框背景文案
     * ```
     *
     * `string child_text = 15;`
     */
    public fun clearChildText() {
      _builder.clearChildText()
    }

    /**
     * ```
     * 评论总数
     * ```
     *
     * `int64 count = 16;`
     */
    public var count: kotlin.Long
      @JvmName("getCount")
      get() = _builder.getCount()
      @JvmName("setCount")
      set(value) {
        _builder.setCount(value)
      }
    /**
     * ```
     * 评论总数
     * ```
     *
     * `int64 count = 16;`
     */
    public fun clearCount() {
      _builder.clearCount()
    }

    /**
     * ```
     * 评论区标题
     * ```
     *
     * `string title = 17;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * 评论区标题
     * ```
     *
     * `string title = 17;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * 离开态输入框的文案
     * ```
     *
     * `string giveup_text = 18;`
     */
    public var giveupText: kotlin.String
      @JvmName("getGiveupText")
      get() = _builder.getGiveupText()
      @JvmName("setGiveupText")
      set(value) {
        _builder.setGiveupText(value)
      }
    /**
     * ```
     * 离开态输入框的文案
     * ```
     *
     * `string giveup_text = 18;`
     */
    public fun clearGiveupText() {
      _builder.clearGiveupText()
    }

    /**
     * ```
     * 是否允许笔记
     * ```
     *
     * `bool has_note_access = 19;`
     */
    public var hasNoteAccess: kotlin.Boolean
      @JvmName("getHasNoteAccess")
      get() = _builder.getHasNoteAccess()
      @JvmName("setHasNoteAccess")
      set(value) {
        _builder.setHasNoteAccess(value)
      }
    /**
     * ```
     * 是否允许笔记
     * ```
     *
     * `bool has_note_access = 19;`
     */
    public fun clearHasNoteAccess() {
      _builder.clearHasNoteAccess()
    }

    /**
     * ```
     * ```
     *
     * `bool disable_jump_emote = 20;`
     */
    public var disableJumpEmote: kotlin.Boolean
      @JvmName("getDisableJumpEmote")
      get() = _builder.getDisableJumpEmote()
      @JvmName("setDisableJumpEmote")
      set(value) {
        _builder.setDisableJumpEmote(value)
      }
    /**
     * ```
     * ```
     *
     * `bool disable_jump_emote = 20;`
     */
    public fun clearDisableJumpEmote() {
      _builder.clearDisableJumpEmote()
    }

    /**
     * ```
     * ```
     *
     * `string empty_background_text_plain = 21;`
     */
    public var emptyBackgroundTextPlain: kotlin.String
      @JvmName("getEmptyBackgroundTextPlain")
      get() = _builder.getEmptyBackgroundTextPlain()
      @JvmName("setEmptyBackgroundTextPlain")
      set(value) {
        _builder.setEmptyBackgroundTextPlain(value)
      }
    /**
     * ```
     * ```
     *
     * `string empty_background_text_plain = 21;`
     */
    public fun clearEmptyBackgroundTextPlain() {
      _builder.clearEmptyBackgroundTextPlain()
    }

    /**
     * ```
     * ```
     *
     * `string empty_background_text_highlight = 22;`
     */
    public var emptyBackgroundTextHighlight: kotlin.String
      @JvmName("getEmptyBackgroundTextHighlight")
      get() = _builder.getEmptyBackgroundTextHighlight()
      @JvmName("setEmptyBackgroundTextHighlight")
      set(value) {
        _builder.setEmptyBackgroundTextHighlight(value)
      }
    /**
     * ```
     * ```
     *
     * `string empty_background_text_highlight = 22;`
     */
    public fun clearEmptyBackgroundTextHighlight() {
      _builder.clearEmptyBackgroundTextHighlight()
    }

    /**
     * ```
     * ```
     *
     * `string empty_background_uri = 23;`
     */
    public var emptyBackgroundUri: kotlin.String
      @JvmName("getEmptyBackgroundUri")
      get() = _builder.getEmptyBackgroundUri()
      @JvmName("setEmptyBackgroundUri")
      set(value) {
        _builder.setEmptyBackgroundUri(value)
      }
    /**
     * ```
     * ```
     *
     * `string empty_background_uri = 23;`
     */
    public fun clearEmptyBackgroundUri() {
      _builder.clearEmptyBackgroundUri()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class SupportFilterTagsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * 评论区筛选类型列表
     * ```
     *
     * `repeated .bilibili.main.community.reply.v1.SubjectControl.FilterTag support_filter_tags = 24;`
     */
     public val supportFilterTags: com.google.protobuf.kotlin.DslList<bilibili.main.community.reply.v1.SubjectControl.FilterTag, SupportFilterTagsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getSupportFilterTagsList()
      )
    /**
     * ```
     * 评论区筛选类型列表
     * ```
     *
     * `repeated .bilibili.main.community.reply.v1.SubjectControl.FilterTag support_filter_tags = 24;`
     * @param value The supportFilterTags to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSupportFilterTags")
    public fun com.google.protobuf.kotlin.DslList<bilibili.main.community.reply.v1.SubjectControl.FilterTag, SupportFilterTagsProxy>.add(value: bilibili.main.community.reply.v1.SubjectControl.FilterTag) {
      _builder.addSupportFilterTags(value)
    }
    /**
     * ```
     * 评论区筛选类型列表
     * ```
     *
     * `repeated .bilibili.main.community.reply.v1.SubjectControl.FilterTag support_filter_tags = 24;`
     * @param value The supportFilterTags to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSupportFilterTags")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bilibili.main.community.reply.v1.SubjectControl.FilterTag, SupportFilterTagsProxy>.plusAssign(value: bilibili.main.community.reply.v1.SubjectControl.FilterTag) {
      add(value)
    }
    /**
     * ```
     * 评论区筛选类型列表
     * ```
     *
     * `repeated .bilibili.main.community.reply.v1.SubjectControl.FilterTag support_filter_tags = 24;`
     * @param values The supportFilterTags to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSupportFilterTags")
    public fun com.google.protobuf.kotlin.DslList<bilibili.main.community.reply.v1.SubjectControl.FilterTag, SupportFilterTagsProxy>.addAll(values: kotlin.collections.Iterable<bilibili.main.community.reply.v1.SubjectControl.FilterTag>) {
      _builder.addAllSupportFilterTags(values)
    }
    /**
     * ```
     * 评论区筛选类型列表
     * ```
     *
     * `repeated .bilibili.main.community.reply.v1.SubjectControl.FilterTag support_filter_tags = 24;`
     * @param values The supportFilterTags to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSupportFilterTags")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bilibili.main.community.reply.v1.SubjectControl.FilterTag, SupportFilterTagsProxy>.plusAssign(values: kotlin.collections.Iterable<bilibili.main.community.reply.v1.SubjectControl.FilterTag>) {
      addAll(values)
    }
    /**
     * ```
     * 评论区筛选类型列表
     * ```
     *
     * `repeated .bilibili.main.community.reply.v1.SubjectControl.FilterTag support_filter_tags = 24;`
     * @param index The index to set the value at.
     * @param value The supportFilterTags to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSupportFilterTags")
    public operator fun com.google.protobuf.kotlin.DslList<bilibili.main.community.reply.v1.SubjectControl.FilterTag, SupportFilterTagsProxy>.set(index: kotlin.Int, value: bilibili.main.community.reply.v1.SubjectControl.FilterTag) {
      _builder.setSupportFilterTags(index, value)
    }
    /**
     * ```
     * 评论区筛选类型列表
     * ```
     *
     * `repeated .bilibili.main.community.reply.v1.SubjectControl.FilterTag support_filter_tags = 24;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSupportFilterTags")
    public fun com.google.protobuf.kotlin.DslList<bilibili.main.community.reply.v1.SubjectControl.FilterTag, SupportFilterTagsProxy>.clear() {
      _builder.clearSupportFilterTags()
    }

  }
  @kotlin.jvm.JvmName("-initializefilterTag")
  public inline fun filterTag(block: bilibili.main.community.reply.v1.SubjectControlKt.FilterTagKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.SubjectControl.FilterTag =
    bilibili.main.community.reply.v1.SubjectControlKt.FilterTagKt.Dsl._create(bilibili.main.community.reply.v1.SubjectControl.FilterTag.newBuilder()).apply { block() }._build()
  /**
   * ```
   * 评论区筛选类型
   * ```
   *
   * Protobuf type `bilibili.main.community.reply.v1.SubjectControl.FilterTag`
   */
  public object FilterTagKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: bilibili.main.community.reply.v1.SubjectControl.FilterTag.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: bilibili.main.community.reply.v1.SubjectControl.FilterTag.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): bilibili.main.community.reply.v1.SubjectControl.FilterTag = _builder.build()

      /**
       * ```
       * 类型名
       * ```
       *
       * `string name = 1;`
       */
      public var name: kotlin.String
        @JvmName("getName")
        get() = _builder.getName()
        @JvmName("setName")
        set(value) {
          _builder.setName(value)
        }
      /**
       * ```
       * 类型名
       * ```
       *
       * `string name = 1;`
       */
      public fun clearName() {
        _builder.clearName()
      }

      /**
       * ```
       * ```
       *
       * `string event_id = 2;`
       */
      public var eventId: kotlin.String
        @JvmName("getEventId")
        get() = _builder.getEventId()
        @JvmName("setEventId")
        set(value) {
          _builder.setEventId(value)
        }
      /**
       * ```
       * ```
       *
       * `string event_id = 2;`
       */
      public fun clearEventId() {
        _builder.clearEventId()
      }
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.SubjectControl.copy(block: `bilibili.main.community.reply.v1`.SubjectControlKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.SubjectControl =
  `bilibili.main.community.reply.v1`.SubjectControlKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.SubjectControl.FilterTag.copy(block: `bilibili.main.community.reply.v1`.SubjectControlKt.FilterTagKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.SubjectControl.FilterTag =
  `bilibili.main.community.reply.v1`.SubjectControlKt.FilterTagKt.Dsl._create(this.toBuilder()).apply { block() }._build()

