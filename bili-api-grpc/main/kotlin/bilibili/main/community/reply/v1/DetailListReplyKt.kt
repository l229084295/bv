// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/main/community/reply/v1/reply.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.main.community.reply.v1;

@kotlin.jvm.JvmName("-initializedetailListReply")
public inline fun detailListReply(block: bilibili.main.community.reply.v1.DetailListReplyKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.DetailListReply =
  bilibili.main.community.reply.v1.DetailListReplyKt.Dsl._create(bilibili.main.community.reply.v1.DetailListReply.newBuilder()).apply { block() }._build()
/**
 * ```
 * 二级评论明细-响应
 * ```
 *
 * Protobuf type `bilibili.main.community.reply.v1.DetailListReply`
 */
public object DetailListReplyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.main.community.reply.v1.DetailListReply.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.main.community.reply.v1.DetailListReply.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.main.community.reply.v1.DetailListReply = _builder.build()

    /**
     * ```
     * 页面游标
     * ```
     *
     * `.bilibili.main.community.reply.v1.CursorReply cursor = 1;`
     */
    public var cursor: bilibili.main.community.reply.v1.CursorReply
      @JvmName("getCursor")
      get() = _builder.getCursor()
      @JvmName("setCursor")
      set(value) {
        _builder.setCursor(value)
      }
    /**
     * ```
     * 页面游标
     * ```
     *
     * `.bilibili.main.community.reply.v1.CursorReply cursor = 1;`
     */
    public fun clearCursor() {
      _builder.clearCursor()
    }
    /**
     * ```
     * 页面游标
     * ```
     *
     * `.bilibili.main.community.reply.v1.CursorReply cursor = 1;`
     * @return Whether the cursor field is set.
     */
    public fun hasCursor(): kotlin.Boolean {
      return _builder.hasCursor()
    }
    public val DetailListReplyKt.Dsl.cursorOrNull: bilibili.main.community.reply.v1.CursorReply?
      get() = _builder.cursorOrNull

    /**
     * ```
     * 评论区显示控制字段
     * ```
     *
     * `.bilibili.main.community.reply.v1.SubjectControl subject_control = 2;`
     */
    public var subjectControl: bilibili.main.community.reply.v1.SubjectControl
      @JvmName("getSubjectControl")
      get() = _builder.getSubjectControl()
      @JvmName("setSubjectControl")
      set(value) {
        _builder.setSubjectControl(value)
      }
    /**
     * ```
     * 评论区显示控制字段
     * ```
     *
     * `.bilibili.main.community.reply.v1.SubjectControl subject_control = 2;`
     */
    public fun clearSubjectControl() {
      _builder.clearSubjectControl()
    }
    /**
     * ```
     * 评论区显示控制字段
     * ```
     *
     * `.bilibili.main.community.reply.v1.SubjectControl subject_control = 2;`
     * @return Whether the subjectControl field is set.
     */
    public fun hasSubjectControl(): kotlin.Boolean {
      return _builder.hasSubjectControl()
    }
    public val DetailListReplyKt.Dsl.subjectControlOrNull: bilibili.main.community.reply.v1.SubjectControl?
      get() = _builder.subjectControlOrNull

    /**
     * ```
     * 根评论信息(带二级评论)
     * ```
     *
     * `.bilibili.main.community.reply.v1.ReplyInfo root = 3;`
     */
    public var root: bilibili.main.community.reply.v1.ReplyInfo
      @JvmName("getRoot")
      get() = _builder.getRoot()
      @JvmName("setRoot")
      set(value) {
        _builder.setRoot(value)
      }
    /**
     * ```
     * 根评论信息(带二级评论)
     * ```
     *
     * `.bilibili.main.community.reply.v1.ReplyInfo root = 3;`
     */
    public fun clearRoot() {
      _builder.clearRoot()
    }
    /**
     * ```
     * 根评论信息(带二级评论)
     * ```
     *
     * `.bilibili.main.community.reply.v1.ReplyInfo root = 3;`
     * @return Whether the root field is set.
     */
    public fun hasRoot(): kotlin.Boolean {
      return _builder.hasRoot()
    }
    public val DetailListReplyKt.Dsl.rootOrNull: bilibili.main.community.reply.v1.ReplyInfo?
      get() = _builder.rootOrNull

    /**
     * ```
     * 评论区的活动
     * ```
     *
     * `.bilibili.main.community.reply.v1.Activity activity = 4;`
     */
    public var activity: bilibili.main.community.reply.v1.Activity
      @JvmName("getActivity")
      get() = _builder.getActivity()
      @JvmName("setActivity")
      set(value) {
        _builder.setActivity(value)
      }
    /**
     * ```
     * 评论区的活动
     * ```
     *
     * `.bilibili.main.community.reply.v1.Activity activity = 4;`
     */
    public fun clearActivity() {
      _builder.clearActivity()
    }
    /**
     * ```
     * 评论区的活动
     * ```
     *
     * `.bilibili.main.community.reply.v1.Activity activity = 4;`
     * @return Whether the activity field is set.
     */
    public fun hasActivity(): kotlin.Boolean {
      return _builder.hasActivity()
    }
    public val DetailListReplyKt.Dsl.activityOrNull: bilibili.main.community.reply.v1.Activity?
      get() = _builder.activityOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.main.community.reply.v1.LikeInfo likes = 5;`
     */
    public var likes: bilibili.main.community.reply.v1.LikeInfo
      @JvmName("getLikes")
      get() = _builder.getLikes()
      @JvmName("setLikes")
      set(value) {
        _builder.setLikes(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.main.community.reply.v1.LikeInfo likes = 5;`
     */
    public fun clearLikes() {
      _builder.clearLikes()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.main.community.reply.v1.LikeInfo likes = 5;`
     * @return Whether the likes field is set.
     */
    public fun hasLikes(): kotlin.Boolean {
      return _builder.hasLikes()
    }
    public val DetailListReplyKt.Dsl.likesOrNull: bilibili.main.community.reply.v1.LikeInfo?
      get() = _builder.likesOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.main.community.reply.v1.DetailListReply.copy(block: `bilibili.main.community.reply.v1`.DetailListReplyKt.Dsl.() -> kotlin.Unit): bilibili.main.community.reply.v1.DetailListReply =
  `bilibili.main.community.reply.v1`.DetailListReplyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.main.community.reply.v1.DetailListReplyOrBuilder.cursorOrNull: bilibili.main.community.reply.v1.CursorReply?
  get() = if (hasCursor()) getCursor() else null

public val bilibili.main.community.reply.v1.DetailListReplyOrBuilder.subjectControlOrNull: bilibili.main.community.reply.v1.SubjectControl?
  get() = if (hasSubjectControl()) getSubjectControl() else null

public val bilibili.main.community.reply.v1.DetailListReplyOrBuilder.rootOrNull: bilibili.main.community.reply.v1.ReplyInfo?
  get() = if (hasRoot()) getRoot() else null

public val bilibili.main.community.reply.v1.DetailListReplyOrBuilder.activityOrNull: bilibili.main.community.reply.v1.Activity?
  get() = if (hasActivity()) getActivity() else null

public val bilibili.main.community.reply.v1.DetailListReplyOrBuilder.likesOrNull: bilibili.main.community.reply.v1.LikeInfo?
  get() = if (hasLikes()) getLikes() else null

