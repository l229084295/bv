// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializeadditionalButtonShare")
public inline fun additionalButtonShare(block: bilibili.app.dynamic.v2.AdditionalButtonShareKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.AdditionalButtonShare =
  bilibili.app.dynamic.v2.AdditionalButtonShareKt.Dsl._create(bilibili.app.dynamic.v2.AdditionalButtonShare.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.AdditionalButtonShare`
 */
public object AdditionalButtonShareKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.AdditionalButtonShare.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.AdditionalButtonShare.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.AdditionalButtonShare = _builder.build()

    /**
     * ```
     * ```
     *
     * `int32 show = 1;`
     */
    public var show: kotlin.Int
      @JvmName("getShow")
      get() = _builder.getShow()
      @JvmName("setShow")
      set(value) {
        _builder.setShow(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 show = 1;`
     */
    public fun clearShow() {
      _builder.clearShow()
    }

    /**
     * ```
     * ```
     *
     * `string icon = 2;`
     */
    public var icon: kotlin.String
      @JvmName("getIcon")
      get() = _builder.getIcon()
      @JvmName("setIcon")
      set(value) {
        _builder.setIcon(value)
      }
    /**
     * ```
     * ```
     *
     * `string icon = 2;`
     */
    public fun clearIcon() {
      _builder.clearIcon()
    }

    /**
     * ```
     * ```
     *
     * `string text = 3;`
     */
    public var text: kotlin.String
      @JvmName("getText")
      get() = _builder.getText()
      @JvmName("setText")
      set(value) {
        _builder.setText(value)
      }
    /**
     * ```
     * ```
     *
     * `string text = 3;`
     */
    public fun clearText() {
      _builder.clearText()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.AdditionalButtonShare.copy(block: `bilibili.app.dynamic.v2`.AdditionalButtonShareKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.AdditionalButtonShare =
  `bilibili.app.dynamic.v2`.AdditionalButtonShareKt.Dsl._create(this.toBuilder()).apply { block() }._build()

