// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializereactionListItem")
public inline fun reactionListItem(block: bilibili.app.dynamic.v2.ReactionListItemKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.ReactionListItem =
  bilibili.app.dynamic.v2.ReactionListItemKt.Dsl._create(bilibili.app.dynamic.v2.ReactionListItem.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `bilibili.app.dynamic.v2.ReactionListItem`
 */
public object ReactionListItemKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.ReactionListItem.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.ReactionListItem.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.ReactionListItem = _builder.build()

    /**
     * ```
     * 用户信息
     * ```
     *
     * `.bilibili.app.dynamic.v2.UserInfo user = 1;`
     */
    public var user: bilibili.app.dynamic.v2.UserInfo
      @JvmName("getUser")
      get() = _builder.getUser()
      @JvmName("setUser")
      set(value) {
        _builder.setUser(value)
      }
    /**
     * ```
     * 用户信息
     * ```
     *
     * `.bilibili.app.dynamic.v2.UserInfo user = 1;`
     */
    public fun clearUser() {
      _builder.clearUser()
    }
    /**
     * ```
     * 用户信息
     * ```
     *
     * `.bilibili.app.dynamic.v2.UserInfo user = 1;`
     * @return Whether the user field is set.
     */
    public fun hasUser(): kotlin.Boolean {
      return _builder.hasUser()
    }
    public val ReactionListItemKt.Dsl.userOrNull: bilibili.app.dynamic.v2.UserInfo?
      get() = _builder.userOrNull

    /**
     * ```
     * 关注关系
     * ```
     *
     * `.bilibili.app.dynamic.v2.Relation relation = 2;`
     */
    public var relation: bilibili.app.dynamic.v2.Relation
      @JvmName("getRelation")
      get() = _builder.getRelation()
      @JvmName("setRelation")
      set(value) {
        _builder.setRelation(value)
      }
    /**
     * ```
     * 关注关系
     * ```
     *
     * `.bilibili.app.dynamic.v2.Relation relation = 2;`
     */
    public fun clearRelation() {
      _builder.clearRelation()
    }
    /**
     * ```
     * 关注关系
     * ```
     *
     * `.bilibili.app.dynamic.v2.Relation relation = 2;`
     * @return Whether the relation field is set.
     */
    public fun hasRelation(): kotlin.Boolean {
      return _builder.hasRelation()
    }
    public val ReactionListItemKt.Dsl.relationOrNull: bilibili.app.dynamic.v2.Relation?
      get() = _builder.relationOrNull

    /**
     * ```
     * 显示文字
     * ```
     *
     * `string act_text = 3;`
     */
    public var actText: kotlin.String
      @JvmName("getActText")
      get() = _builder.getActText()
      @JvmName("setActText")
      set(value) {
        _builder.setActText(value)
      }
    /**
     * ```
     * 显示文字
     * ```
     *
     * `string act_text = 3;`
     */
    public fun clearActText() {
      _builder.clearActText()
    }

    /**
     * ```
     * ```
     *
     * `string rcmd_reason = 4;`
     */
    public var rcmdReason: kotlin.String
      @JvmName("getRcmdReason")
      get() = _builder.getRcmdReason()
      @JvmName("setRcmdReason")
      set(value) {
        _builder.setRcmdReason(value)
      }
    /**
     * ```
     * ```
     *
     * `string rcmd_reason = 4;`
     */
    public fun clearRcmdReason() {
      _builder.clearRcmdReason()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.ReactionListItem.copy(block: `bilibili.app.dynamic.v2`.ReactionListItemKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.ReactionListItem =
  `bilibili.app.dynamic.v2`.ReactionListItemKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.ReactionListItemOrBuilder.userOrNull: bilibili.app.dynamic.v2.UserInfo?
  get() = if (hasUser()) getUser() else null

public val bilibili.app.dynamic.v2.ReactionListItemOrBuilder.relationOrNull: bilibili.app.dynamic.v2.Relation?
  get() = if (hasRelation()) getRelation() else null

