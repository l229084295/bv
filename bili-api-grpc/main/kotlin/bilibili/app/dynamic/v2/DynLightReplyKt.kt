// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializedynLightReply")
public inline fun dynLightReply(block: bilibili.app.dynamic.v2.DynLightReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.DynLightReply =
  bilibili.app.dynamic.v2.DynLightReplyKt.Dsl._create(bilibili.app.dynamic.v2.DynLightReply.newBuilder()).apply { block() }._build()
/**
 * ```
 * 轻浏览-响应
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.DynLightReply`
 */
public object DynLightReplyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.DynLightReply.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.DynLightReply.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.DynLightReply = _builder.build()

    /**
     * ```
     * 卡片列表
     * ```
     *
     * `.bilibili.app.dynamic.v2.DynamicList dynamic_list = 1;`
     */
    public var dynamicList: bilibili.app.dynamic.v2.DynamicList
      @JvmName("getDynamicList")
      get() = _builder.getDynamicList()
      @JvmName("setDynamicList")
      set(value) {
        _builder.setDynamicList(value)
      }
    /**
     * ```
     * 卡片列表
     * ```
     *
     * `.bilibili.app.dynamic.v2.DynamicList dynamic_list = 1;`
     */
    public fun clearDynamicList() {
      _builder.clearDynamicList()
    }
    /**
     * ```
     * 卡片列表
     * ```
     *
     * `.bilibili.app.dynamic.v2.DynamicList dynamic_list = 1;`
     * @return Whether the dynamicList field is set.
     */
    public fun hasDynamicList(): kotlin.Boolean {
      return _builder.hasDynamicList()
    }
    public val DynLightReplyKt.Dsl.dynamicListOrNull: bilibili.app.dynamic.v2.DynamicList?
      get() = _builder.dynamicListOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.DynLightReply.copy(block: `bilibili.app.dynamic.v2`.DynLightReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.DynLightReply =
  `bilibili.app.dynamic.v2`.DynLightReplyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.DynLightReplyOrBuilder.dynamicListOrNull: bilibili.app.dynamic.v2.DynamicList?
  get() = if (hasDynamicList()) getDynamicList() else null

