// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializemoduleTextNotice")
public inline fun moduleTextNotice(block: bilibili.app.dynamic.v2.ModuleTextNoticeKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.ModuleTextNotice =
  bilibili.app.dynamic.v2.ModuleTextNoticeKt.Dsl._create(bilibili.app.dynamic.v2.ModuleTextNotice.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.ModuleTextNotice`
 */
public object ModuleTextNoticeKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.ModuleTextNotice.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.ModuleTextNotice.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.ModuleTextNotice = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.OneLineText notice = 1;`
     */
    public var notice: bilibili.app.dynamic.v2.OneLineText
      @JvmName("getNotice")
      get() = _builder.getNotice()
      @JvmName("setNotice")
      set(value) {
        _builder.setNotice(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.OneLineText notice = 1;`
     */
    public fun clearNotice() {
      _builder.clearNotice()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.OneLineText notice = 1;`
     * @return Whether the notice field is set.
     */
    public fun hasNotice(): kotlin.Boolean {
      return _builder.hasNotice()
    }
    public val ModuleTextNoticeKt.Dsl.noticeOrNull: bilibili.app.dynamic.v2.OneLineText?
      get() = _builder.noticeOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.ModuleTextNotice.copy(block: `bilibili.app.dynamic.v2`.ModuleTextNoticeKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.ModuleTextNotice =
  `bilibili.app.dynamic.v2`.ModuleTextNoticeKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.ModuleTextNoticeOrBuilder.noticeOrNull: bilibili.app.dynamic.v2.OneLineText?
  get() = if (hasNotice()) getNotice() else null

