// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializercmdAuthor")
public inline fun rcmdAuthor(block: bilibili.app.dynamic.v2.RcmdAuthorKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.RcmdAuthor =
  bilibili.app.dynamic.v2.RcmdAuthorKt.Dsl._create(bilibili.app.dynamic.v2.RcmdAuthor.newBuilder()).apply { block() }._build()
/**
 * ```
 * 推荐UP主用户模块
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.RcmdAuthor`
 */
public object RcmdAuthorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.RcmdAuthor.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.RcmdAuthor.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.RcmdAuthor = _builder.build()

    /**
     * ```
     * 用户详情
     * ```
     *
     * `.bilibili.app.dynamic.v2.UserInfo author = 1;`
     */
    public var author: bilibili.app.dynamic.v2.UserInfo
      @JvmName("getAuthor")
      get() = _builder.getAuthor()
      @JvmName("setAuthor")
      set(value) {
        _builder.setAuthor(value)
      }
    /**
     * ```
     * 用户详情
     * ```
     *
     * `.bilibili.app.dynamic.v2.UserInfo author = 1;`
     */
    public fun clearAuthor() {
      _builder.clearAuthor()
    }
    /**
     * ```
     * 用户详情
     * ```
     *
     * `.bilibili.app.dynamic.v2.UserInfo author = 1;`
     * @return Whether the author field is set.
     */
    public fun hasAuthor(): kotlin.Boolean {
      return _builder.hasAuthor()
    }
    public val RcmdAuthorKt.Dsl.authorOrNull: bilibili.app.dynamic.v2.UserInfo?
      get() = _builder.authorOrNull

    /**
     * ```
     * 描述：粉丝数、推荐理由
     * ```
     *
     * `string desc = 2;`
     */
    public var desc: kotlin.String
      @JvmName("getDesc")
      get() = _builder.getDesc()
      @JvmName("setDesc")
      set(value) {
        _builder.setDesc(value)
      }
    /**
     * ```
     * 描述：粉丝数、推荐理由
     * ```
     *
     * `string desc = 2;`
     */
    public fun clearDesc() {
      _builder.clearDesc()
    }

    /**
     * ```
     * 关注状态
     * ```
     *
     * `.bilibili.app.dynamic.v2.Relation relation = 3;`
     */
    public var relation: bilibili.app.dynamic.v2.Relation
      @JvmName("getRelation")
      get() = _builder.getRelation()
      @JvmName("setRelation")
      set(value) {
        _builder.setRelation(value)
      }
    /**
     * ```
     * 关注状态
     * ```
     *
     * `.bilibili.app.dynamic.v2.Relation relation = 3;`
     */
    public fun clearRelation() {
      _builder.clearRelation()
    }
    /**
     * ```
     * 关注状态
     * ```
     *
     * `.bilibili.app.dynamic.v2.Relation relation = 3;`
     * @return Whether the relation field is set.
     */
    public fun hasRelation(): kotlin.Boolean {
      return _builder.hasRelation()
    }
    public val RcmdAuthorKt.Dsl.relationOrNull: bilibili.app.dynamic.v2.Relation?
      get() = _builder.relationOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.RcmdAuthor.copy(block: `bilibili.app.dynamic.v2`.RcmdAuthorKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.RcmdAuthor =
  `bilibili.app.dynamic.v2`.RcmdAuthorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.RcmdAuthorOrBuilder.authorOrNull: bilibili.app.dynamic.v2.UserInfo?
  get() = if (hasAuthor()) getAuthor() else null

public val bilibili.app.dynamic.v2.RcmdAuthorOrBuilder.relationOrNull: bilibili.app.dynamic.v2.Relation?
  get() = if (hasRelation()) getRelation() else null

