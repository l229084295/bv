// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializecampusMngBadge")
public inline fun campusMngBadge(block: bilibili.app.dynamic.v2.CampusMngBadgeKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.CampusMngBadge =
  bilibili.app.dynamic.v2.CampusMngBadgeKt.Dsl._create(bilibili.app.dynamic.v2.CampusMngBadge.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.CampusMngBadge`
 */
public object CampusMngBadgeKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.CampusMngBadge.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.CampusMngBadge.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.CampusMngBadge = _builder.build()

    /**
     * ```
     * ```
     *
     * `string title = 1;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * ```
     *
     * `string title = 1;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * ```
     *
     * `string badge_url = 2;`
     */
    public var badgeUrl: kotlin.String
      @JvmName("getBadgeUrl")
      get() = _builder.getBadgeUrl()
      @JvmName("setBadgeUrl")
      set(value) {
        _builder.setBadgeUrl(value)
      }
    /**
     * ```
     * ```
     *
     * `string badge_url = 2;`
     */
    public fun clearBadgeUrl() {
      _builder.clearBadgeUrl()
    }

    /**
     * ```
     * ```
     *
     * `string upload_hint_msg = 3;`
     */
    public var uploadHintMsg: kotlin.String
      @JvmName("getUploadHintMsg")
      get() = _builder.getUploadHintMsg()
      @JvmName("setUploadHintMsg")
      set(value) {
        _builder.setUploadHintMsg(value)
      }
    /**
     * ```
     * ```
     *
     * `string upload_hint_msg = 3;`
     */
    public fun clearUploadHintMsg() {
      _builder.clearUploadHintMsg()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.CampusMngBadge.copy(block: `bilibili.app.dynamic.v2`.CampusMngBadgeKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.CampusMngBadge =
  `bilibili.app.dynamic.v2`.CampusMngBadgeKt.Dsl._create(this.toBuilder()).apply { block() }._build()

