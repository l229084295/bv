// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializemdlDynLiveRcmd")
public inline fun mdlDynLiveRcmd(block: bilibili.app.dynamic.v2.MdlDynLiveRcmdKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.MdlDynLiveRcmd =
  bilibili.app.dynamic.v2.MdlDynLiveRcmdKt.Dsl._create(bilibili.app.dynamic.v2.MdlDynLiveRcmd.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态列表渲染部分-详情模块-直播推荐
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.MdlDynLiveRcmd`
 */
public object MdlDynLiveRcmdKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.MdlDynLiveRcmd.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.MdlDynLiveRcmd.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.MdlDynLiveRcmd = _builder.build()

    /**
     * ```
     * 直播数据
     * ```
     *
     * `string content = 1;`
     */
    public var content: kotlin.String
      @JvmName("getContent")
      get() = _builder.getContent()
      @JvmName("setContent")
      set(value) {
        _builder.setContent(value)
      }
    /**
     * ```
     * 直播数据
     * ```
     *
     * `string content = 1;`
     */
    public fun clearContent() {
      _builder.clearContent()
    }

    /**
     * ```
     * 是否是预约召回
     * ```
     *
     * `.bilibili.app.dynamic.v2.ReserveType reserve_type = 2;`
     */
    public var reserveType: bilibili.app.dynamic.v2.ReserveType
      @JvmName("getReserveType")
      get() = _builder.getReserveType()
      @JvmName("setReserveType")
      set(value) {
        _builder.setReserveType(value)
      }
    public var reserveTypeValue: kotlin.Int
      @JvmName("getReserveTypeValue")
      get() = _builder.getReserveTypeValue()
      @JvmName("setReserveTypeValue")
      set(value) {
        _builder.setReserveTypeValue(value)
      }
    /**
     * ```
     * 是否是预约召回
     * ```
     *
     * `.bilibili.app.dynamic.v2.ReserveType reserve_type = 2;`
     */
    public fun clearReserveType() {
      _builder.clearReserveType()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.LivePendant pendant = 3;`
     */
    public var pendant: bilibili.app.dynamic.v2.LivePendant
      @JvmName("getPendant")
      get() = _builder.getPendant()
      @JvmName("setPendant")
      set(value) {
        _builder.setPendant(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.LivePendant pendant = 3;`
     */
    public fun clearPendant() {
      _builder.clearPendant()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.LivePendant pendant = 3;`
     * @return Whether the pendant field is set.
     */
    public fun hasPendant(): kotlin.Boolean {
      return _builder.hasPendant()
    }
    public val MdlDynLiveRcmdKt.Dsl.pendantOrNull: bilibili.app.dynamic.v2.LivePendant?
      get() = _builder.pendantOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.MdlDynLiveRcmd.copy(block: `bilibili.app.dynamic.v2`.MdlDynLiveRcmdKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.MdlDynLiveRcmd =
  `bilibili.app.dynamic.v2`.MdlDynLiveRcmdKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.MdlDynLiveRcmdOrBuilder.pendantOrNull: bilibili.app.dynamic.v2.LivePendant?
  get() = if (hasPendant()) getPendant() else null

