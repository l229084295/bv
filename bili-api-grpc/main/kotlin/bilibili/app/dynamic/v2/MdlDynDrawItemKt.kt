// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializemdlDynDrawItem")
public inline fun mdlDynDrawItem(block: bilibili.app.dynamic.v2.MdlDynDrawItemKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.MdlDynDrawItem =
  bilibili.app.dynamic.v2.MdlDynDrawItemKt.Dsl._create(bilibili.app.dynamic.v2.MdlDynDrawItem.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态列表渲染部分-详情模块-图文
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.MdlDynDrawItem`
 */
public object MdlDynDrawItemKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.MdlDynDrawItem.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.MdlDynDrawItem.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.MdlDynDrawItem = _builder.build()

    /**
     * ```
     * 图片链接
     * ```
     *
     * `string src = 1;`
     */
    public var src: kotlin.String
      @JvmName("getSrc")
      get() = _builder.getSrc()
      @JvmName("setSrc")
      set(value) {
        _builder.setSrc(value)
      }
    /**
     * ```
     * 图片链接
     * ```
     *
     * `string src = 1;`
     */
    public fun clearSrc() {
      _builder.clearSrc()
    }

    /**
     * ```
     * 图片宽度
     * ```
     *
     * `int64 width = 2;`
     */
    public var width: kotlin.Long
      @JvmName("getWidth")
      get() = _builder.getWidth()
      @JvmName("setWidth")
      set(value) {
        _builder.setWidth(value)
      }
    /**
     * ```
     * 图片宽度
     * ```
     *
     * `int64 width = 2;`
     */
    public fun clearWidth() {
      _builder.clearWidth()
    }

    /**
     * ```
     * 图片高度
     * ```
     *
     * `int64 height = 3;`
     */
    public var height: kotlin.Long
      @JvmName("getHeight")
      get() = _builder.getHeight()
      @JvmName("setHeight")
      set(value) {
        _builder.setHeight(value)
      }
    /**
     * ```
     * 图片高度
     * ```
     *
     * `int64 height = 3;`
     */
    public fun clearHeight() {
      _builder.clearHeight()
    }

    /**
     * ```
     * 图片大小
     * ```
     *
     * `float size = 4;`
     */
    public var size: kotlin.Float
      @JvmName("getSize")
      get() = _builder.getSize()
      @JvmName("setSize")
      set(value) {
        _builder.setSize(value)
      }
    /**
     * ```
     * 图片大小
     * ```
     *
     * `float size = 4;`
     */
    public fun clearSize() {
      _builder.clearSize()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class TagsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * 图片标签
     * ```
     *
     * `repeated .bilibili.app.dynamic.v2.MdlDynDrawTag tags = 5;`
     */
     public val tags: com.google.protobuf.kotlin.DslList<bilibili.app.dynamic.v2.MdlDynDrawTag, TagsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getTagsList()
      )
    /**
     * ```
     * 图片标签
     * ```
     *
     * `repeated .bilibili.app.dynamic.v2.MdlDynDrawTag tags = 5;`
     * @param value The tags to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addTags")
    public fun com.google.protobuf.kotlin.DslList<bilibili.app.dynamic.v2.MdlDynDrawTag, TagsProxy>.add(value: bilibili.app.dynamic.v2.MdlDynDrawTag) {
      _builder.addTags(value)
    }
    /**
     * ```
     * 图片标签
     * ```
     *
     * `repeated .bilibili.app.dynamic.v2.MdlDynDrawTag tags = 5;`
     * @param value The tags to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignTags")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bilibili.app.dynamic.v2.MdlDynDrawTag, TagsProxy>.plusAssign(value: bilibili.app.dynamic.v2.MdlDynDrawTag) {
      add(value)
    }
    /**
     * ```
     * 图片标签
     * ```
     *
     * `repeated .bilibili.app.dynamic.v2.MdlDynDrawTag tags = 5;`
     * @param values The tags to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllTags")
    public fun com.google.protobuf.kotlin.DslList<bilibili.app.dynamic.v2.MdlDynDrawTag, TagsProxy>.addAll(values: kotlin.collections.Iterable<bilibili.app.dynamic.v2.MdlDynDrawTag>) {
      _builder.addAllTags(values)
    }
    /**
     * ```
     * 图片标签
     * ```
     *
     * `repeated .bilibili.app.dynamic.v2.MdlDynDrawTag tags = 5;`
     * @param values The tags to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllTags")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bilibili.app.dynamic.v2.MdlDynDrawTag, TagsProxy>.plusAssign(values: kotlin.collections.Iterable<bilibili.app.dynamic.v2.MdlDynDrawTag>) {
      addAll(values)
    }
    /**
     * ```
     * 图片标签
     * ```
     *
     * `repeated .bilibili.app.dynamic.v2.MdlDynDrawTag tags = 5;`
     * @param index The index to set the value at.
     * @param value The tags to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setTags")
    public operator fun com.google.protobuf.kotlin.DslList<bilibili.app.dynamic.v2.MdlDynDrawTag, TagsProxy>.set(index: kotlin.Int, value: bilibili.app.dynamic.v2.MdlDynDrawTag) {
      _builder.setTags(index, value)
    }
    /**
     * ```
     * 图片标签
     * ```
     *
     * `repeated .bilibili.app.dynamic.v2.MdlDynDrawTag tags = 5;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearTags")
    public fun com.google.protobuf.kotlin.DslList<bilibili.app.dynamic.v2.MdlDynDrawTag, TagsProxy>.clear() {
      _builder.clearTags()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.MdlDynDrawItem.copy(block: `bilibili.app.dynamic.v2`.MdlDynDrawItemKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.MdlDynDrawItem =
  `bilibili.app.dynamic.v2`.MdlDynDrawItemKt.Dsl._create(this.toBuilder()).apply { block() }._build()

