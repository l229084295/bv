// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/opus.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializeopusDetailReq")
public inline fun opusDetailReq(block: bilibili.app.dynamic.v2.OpusDetailReqKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.OpusDetailReq =
  bilibili.app.dynamic.v2.OpusDetailReqKt.Dsl._create(bilibili.app.dynamic.v2.OpusDetailReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.OpusDetailReq`
 */
public object OpusDetailReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.OpusDetailReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.OpusDetailReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.OpusDetailReq = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.OpusType opus_type = 1;`
     */
    public var opusType: bilibili.app.dynamic.v2.OpusType
      @JvmName("getOpusType")
      get() = _builder.getOpusType()
      @JvmName("setOpusType")
      set(value) {
        _builder.setOpusType(value)
      }
    public var opusTypeValue: kotlin.Int
      @JvmName("getOpusTypeValue")
      get() = _builder.getOpusTypeValue()
      @JvmName("setOpusTypeValue")
      set(value) {
        _builder.setOpusTypeValue(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.OpusType opus_type = 1;`
     */
    public fun clearOpusType() {
      _builder.clearOpusType()
    }

    /**
     * ```
     * ```
     *
     * `int64 oid = 2;`
     */
    public var oid: kotlin.Long
      @JvmName("getOid")
      get() = _builder.getOid()
      @JvmName("setOid")
      set(value) {
        _builder.setOid(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 oid = 2;`
     */
    public fun clearOid() {
      _builder.clearOid()
    }

    /**
     * ```
     * ```
     *
     * `int64 dyn_type = 3;`
     */
    public var dynType: kotlin.Long
      @JvmName("getDynType")
      get() = _builder.getDynType()
      @JvmName("setDynType")
      set(value) {
        _builder.setDynType(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 dyn_type = 3;`
     */
    public fun clearDynType() {
      _builder.clearDynType()
    }

    /**
     * ```
     * ```
     *
     * `string share_id = 4;`
     */
    public var shareId: kotlin.String
      @JvmName("getShareId")
      get() = _builder.getShareId()
      @JvmName("setShareId")
      set(value) {
        _builder.setShareId(value)
      }
    /**
     * ```
     * ```
     *
     * `string share_id = 4;`
     */
    public fun clearShareId() {
      _builder.clearShareId()
    }

    /**
     * ```
     * ```
     *
     * `int32 share_mode = 9;`
     */
    public var shareMode: kotlin.Int
      @JvmName("getShareMode")
      get() = _builder.getShareMode()
      @JvmName("setShareMode")
      set(value) {
        _builder.setShareMode(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 share_mode = 9;`
     */
    public fun clearShareMode() {
      _builder.clearShareMode()
    }

    /**
     * ```
     * ```
     *
     * `int32 local_time = 10;`
     */
    public var localTime: kotlin.Int
      @JvmName("getLocalTime")
      get() = _builder.getLocalTime()
      @JvmName("setLocalTime")
      set(value) {
        _builder.setLocalTime(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 local_time = 10;`
     */
    public fun clearLocalTime() {
      _builder.clearLocalTime()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.archive.middleware.v1.PlayerArgs player_args = 11;`
     */
    public var playerArgs: bilibili.app.archive.middleware.v1.PlayerArgs
      @JvmName("getPlayerArgs")
      get() = _builder.getPlayerArgs()
      @JvmName("setPlayerArgs")
      set(value) {
        _builder.setPlayerArgs(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.archive.middleware.v1.PlayerArgs player_args = 11;`
     */
    public fun clearPlayerArgs() {
      _builder.clearPlayerArgs()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.archive.middleware.v1.PlayerArgs player_args = 11;`
     * @return Whether the playerArgs field is set.
     */
    public fun hasPlayerArgs(): kotlin.Boolean {
      return _builder.hasPlayerArgs()
    }
    public val OpusDetailReqKt.Dsl.playerArgsOrNull: bilibili.app.archive.middleware.v1.PlayerArgs?
      get() = _builder.playerArgsOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.Config config = 12;`
     */
    public var config: bilibili.app.dynamic.v2.Config
      @JvmName("getConfig")
      get() = _builder.getConfig()
      @JvmName("setConfig")
      set(value) {
        _builder.setConfig(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.Config config = 12;`
     */
    public fun clearConfig() {
      _builder.clearConfig()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.Config config = 12;`
     * @return Whether the config field is set.
     */
    public fun hasConfig(): kotlin.Boolean {
      return _builder.hasConfig()
    }
    public val OpusDetailReqKt.Dsl.configOrNull: bilibili.app.dynamic.v2.Config?
      get() = _builder.configOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.OpusDetailReq.copy(block: `bilibili.app.dynamic.v2`.OpusDetailReqKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.OpusDetailReq =
  `bilibili.app.dynamic.v2`.OpusDetailReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.OpusDetailReqOrBuilder.playerArgsOrNull: bilibili.app.archive.middleware.v1.PlayerArgs?
  get() = if (hasPlayerArgs()) getPlayerArgs() else null

public val bilibili.app.dynamic.v2.OpusDetailReqOrBuilder.configOrNull: bilibili.app.dynamic.v2.Config?
  get() = if (hasConfig()) getConfig() else null

