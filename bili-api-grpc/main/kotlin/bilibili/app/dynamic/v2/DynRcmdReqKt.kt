// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializedynRcmdReq")
public inline fun dynRcmdReq(block: bilibili.app.dynamic.v2.DynRcmdReqKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.DynRcmdReq =
  bilibili.app.dynamic.v2.DynRcmdReqKt.Dsl._create(bilibili.app.dynamic.v2.DynRcmdReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * 推荐页-请求
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.DynRcmdReq`
 */
public object DynRcmdReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.DynRcmdReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.DynRcmdReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.DynRcmdReq = _builder.build()

    /**
     * ```
     * 秒开参数
     * ```
     *
     * `.bilibili.app.archive.middleware.v1.PlayerArgs player_args = 1;`
     */
    public var playerArgs: bilibili.app.archive.middleware.v1.PlayerArgs
      @JvmName("getPlayerArgs")
      get() = _builder.getPlayerArgs()
      @JvmName("setPlayerArgs")
      set(value) {
        _builder.setPlayerArgs(value)
      }
    /**
     * ```
     * 秒开参数
     * ```
     *
     * `.bilibili.app.archive.middleware.v1.PlayerArgs player_args = 1;`
     */
    public fun clearPlayerArgs() {
      _builder.clearPlayerArgs()
    }
    /**
     * ```
     * 秒开参数
     * ```
     *
     * `.bilibili.app.archive.middleware.v1.PlayerArgs player_args = 1;`
     * @return Whether the playerArgs field is set.
     */
    public fun hasPlayerArgs(): kotlin.Boolean {
      return _builder.hasPlayerArgs()
    }
    public val DynRcmdReqKt.Dsl.playerArgsOrNull: bilibili.app.archive.middleware.v1.PlayerArgs?
      get() = _builder.playerArgsOrNull

    /**
     * ```
     * 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
     * ```
     *
     * `int32 local_time = 2;`
     */
    public var localTime: kotlin.Int
      @JvmName("getLocalTime")
      get() = _builder.getLocalTime()
      @JvmName("setLocalTime")
      set(value) {
        _builder.setLocalTime(value)
      }
    /**
     * ```
     * 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
     * ```
     *
     * `int32 local_time = 2;`
     */
    public fun clearLocalTime() {
      _builder.clearLocalTime()
    }

    /**
     * ```
     * ```
     *
     * `int64 fake_uid = 3;`
     */
    public var fakeUid: kotlin.Long
      @JvmName("getFakeUid")
      get() = _builder.getFakeUid()
      @JvmName("setFakeUid")
      set(value) {
        _builder.setFakeUid(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 fake_uid = 3;`
     */
    public fun clearFakeUid() {
      _builder.clearFakeUid()
    }

    /**
     * ```
     * ```
     *
     * `bool is_refresh = 4;`
     */
    public var isRefresh: kotlin.Boolean
      @JvmName("getIsRefresh")
      get() = _builder.getIsRefresh()
      @JvmName("setIsRefresh")
      set(value) {
        _builder.setIsRefresh(value)
      }
    /**
     * ```
     * ```
     *
     * `bool is_refresh = 4;`
     */
    public fun clearIsRefresh() {
      _builder.clearIsRefresh()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.DynRcmdReq.copy(block: `bilibili.app.dynamic.v2`.DynRcmdReqKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.DynRcmdReq =
  `bilibili.app.dynamic.v2`.DynRcmdReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.DynRcmdReqOrBuilder.playerArgsOrNull: bilibili.app.archive.middleware.v1.PlayerArgs?
  get() = if (hasPlayerArgs()) getPlayerArgs() else null

