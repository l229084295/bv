// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializedynRcmdUpExchangeReply")
public inline fun dynRcmdUpExchangeReply(block: bilibili.app.dynamic.v2.DynRcmdUpExchangeReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.DynRcmdUpExchangeReply =
  bilibili.app.dynamic.v2.DynRcmdUpExchangeReplyKt.Dsl._create(bilibili.app.dynamic.v2.DynRcmdUpExchangeReply.newBuilder()).apply { block() }._build()
/**
 * ```
 * 关注推荐up主换一换-响应
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.DynRcmdUpExchangeReply`
 */
public object DynRcmdUpExchangeReplyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.DynRcmdUpExchangeReply.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.DynRcmdUpExchangeReply.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.DynRcmdUpExchangeReply = _builder.build()

    /**
     * ```
     * 无关注推荐
     * ```
     *
     * `.bilibili.app.dynamic.v2.Unfollow unfollow = 1;`
     */
    public var unfollow: bilibili.app.dynamic.v2.Unfollow
      @JvmName("getUnfollow")
      get() = _builder.getUnfollow()
      @JvmName("setUnfollow")
      set(value) {
        _builder.setUnfollow(value)
      }
    /**
     * ```
     * 无关注推荐
     * ```
     *
     * `.bilibili.app.dynamic.v2.Unfollow unfollow = 1;`
     */
    public fun clearUnfollow() {
      _builder.clearUnfollow()
    }
    /**
     * ```
     * 无关注推荐
     * ```
     *
     * `.bilibili.app.dynamic.v2.Unfollow unfollow = 1;`
     * @return Whether the unfollow field is set.
     */
    public fun hasUnfollow(): kotlin.Boolean {
      return _builder.hasUnfollow()
    }
    public val DynRcmdUpExchangeReplyKt.Dsl.unfollowOrNull: bilibili.app.dynamic.v2.Unfollow?
      get() = _builder.unfollowOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.DynRcmdUpExchangeReply.copy(block: `bilibili.app.dynamic.v2`.DynRcmdUpExchangeReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.DynRcmdUpExchangeReply =
  `bilibili.app.dynamic.v2`.DynRcmdUpExchangeReplyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.DynRcmdUpExchangeReplyOrBuilder.unfollowOrNull: bilibili.app.dynamic.v2.Unfollow?
  get() = if (hasUnfollow()) getUnfollow() else null

