// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializemdlDynDrawTag")
public inline fun mdlDynDrawTag(block: bilibili.app.dynamic.v2.MdlDynDrawTagKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.MdlDynDrawTag =
  bilibili.app.dynamic.v2.MdlDynDrawTagKt.Dsl._create(bilibili.app.dynamic.v2.MdlDynDrawTag.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态列表渲染部分-详情模块-图文-标签
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.MdlDynDrawTag`
 */
public object MdlDynDrawTagKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.MdlDynDrawTag.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.MdlDynDrawTag.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.MdlDynDrawTag = _builder.build()

    /**
     * ```
     * 标签类型
     * ```
     *
     * `.bilibili.app.dynamic.v2.MdlDynDrawTagType type = 1;`
     */
    public var type: bilibili.app.dynamic.v2.MdlDynDrawTagType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    public var typeValue: kotlin.Int
      @JvmName("getTypeValue")
      get() = _builder.getTypeValue()
      @JvmName("setTypeValue")
      set(value) {
        _builder.setTypeValue(value)
      }
    /**
     * ```
     * 标签类型
     * ```
     *
     * `.bilibili.app.dynamic.v2.MdlDynDrawTagType type = 1;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * ```
     * 标签详情
     * ```
     *
     * `.bilibili.app.dynamic.v2.MdlDynDrawTagItem item = 2;`
     */
    public var item: bilibili.app.dynamic.v2.MdlDynDrawTagItem
      @JvmName("getItem")
      get() = _builder.getItem()
      @JvmName("setItem")
      set(value) {
        _builder.setItem(value)
      }
    /**
     * ```
     * 标签详情
     * ```
     *
     * `.bilibili.app.dynamic.v2.MdlDynDrawTagItem item = 2;`
     */
    public fun clearItem() {
      _builder.clearItem()
    }
    /**
     * ```
     * 标签详情
     * ```
     *
     * `.bilibili.app.dynamic.v2.MdlDynDrawTagItem item = 2;`
     * @return Whether the item field is set.
     */
    public fun hasItem(): kotlin.Boolean {
      return _builder.hasItem()
    }
    public val MdlDynDrawTagKt.Dsl.itemOrNull: bilibili.app.dynamic.v2.MdlDynDrawTagItem?
      get() = _builder.itemOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.MdlDynDrawTag.copy(block: `bilibili.app.dynamic.v2`.MdlDynDrawTagKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.MdlDynDrawTag =
  `bilibili.app.dynamic.v2`.MdlDynDrawTagKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.MdlDynDrawTagOrBuilder.itemOrNull: bilibili.app.dynamic.v2.MdlDynDrawTagItem?
  get() = if (hasItem()) getItem() else null

