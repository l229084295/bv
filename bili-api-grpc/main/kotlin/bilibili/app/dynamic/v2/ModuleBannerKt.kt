// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializemoduleBanner")
public inline fun moduleBanner(block: bilibili.app.dynamic.v2.ModuleBannerKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.ModuleBanner =
  bilibili.app.dynamic.v2.ModuleBannerKt.Dsl._create(bilibili.app.dynamic.v2.ModuleBanner.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态列表-通栏
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.ModuleBanner`
 */
public object ModuleBannerKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.ModuleBanner.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.ModuleBanner.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.ModuleBanner = _builder.build()

    /**
     * ```
     * 模块标题
     * ```
     *
     * `string title = 1;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * 模块标题
     * ```
     *
     * `string title = 1;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * 卡片类型
     * ```
     *
     * `.bilibili.app.dynamic.v2.ModuleBannerType type = 2;`
     */
    public var type: bilibili.app.dynamic.v2.ModuleBannerType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    public var typeValue: kotlin.Int
      @JvmName("getTypeValue")
      get() = _builder.getTypeValue()
      @JvmName("setTypeValue")
      set(value) {
        _builder.setTypeValue(value)
      }
    /**
     * ```
     * 卡片类型
     * ```
     *
     * `.bilibili.app.dynamic.v2.ModuleBannerType type = 2;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * `.bilibili.app.dynamic.v2.ModuleBannerUser user = 3;`
     */
    public var user: bilibili.app.dynamic.v2.ModuleBannerUser
      @JvmName("getUser")
      get() = _builder.getUser()
      @JvmName("setUser")
      set(value) {
        _builder.setUser(value)
      }
    /**
     * `.bilibili.app.dynamic.v2.ModuleBannerUser user = 3;`
     */
    public fun clearUser() {
      _builder.clearUser()
    }
    /**
     * `.bilibili.app.dynamic.v2.ModuleBannerUser user = 3;`
     * @return Whether the user field is set.
     */
    public fun hasUser(): kotlin.Boolean {
      return _builder.hasUser()
    }

    /**
     * ```
     * 不感兴趣文案
     * ```
     *
     * `string dislike_text = 4;`
     */
    public var dislikeText: kotlin.String
      @JvmName("getDislikeText")
      get() = _builder.getDislikeText()
      @JvmName("setDislikeText")
      set(value) {
        _builder.setDislikeText(value)
      }
    /**
     * ```
     * 不感兴趣文案
     * ```
     *
     * `string dislike_text = 4;`
     */
    public fun clearDislikeText() {
      _builder.clearDislikeText()
    }

    /**
     * ```
     * 不感兴趣图标
     * ```
     *
     * `string dislike_icon = 5;`
     */
    public var dislikeIcon: kotlin.String
      @JvmName("getDislikeIcon")
      get() = _builder.getDislikeIcon()
      @JvmName("setDislikeIcon")
      set(value) {
        _builder.setDislikeIcon(value)
      }
    /**
     * ```
     * 不感兴趣图标
     * ```
     *
     * `string dislike_icon = 5;`
     */
    public fun clearDislikeIcon() {
      _builder.clearDislikeIcon()
    }
    public val itemCase: bilibili.app.dynamic.v2.ModuleBanner.ItemCase
      @JvmName("getItemCase")
      get() = _builder.getItemCase()

    public fun clearItem() {
      _builder.clearItem()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.ModuleBanner.copy(block: `bilibili.app.dynamic.v2`.ModuleBannerKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.ModuleBanner =
  `bilibili.app.dynamic.v2`.ModuleBannerKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.ModuleBannerOrBuilder.userOrNull: bilibili.app.dynamic.v2.ModuleBannerUser?
  get() = if (hasUser()) getUser() else null

