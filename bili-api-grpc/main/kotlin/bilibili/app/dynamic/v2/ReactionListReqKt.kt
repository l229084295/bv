// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializereactionListReq")
public inline fun reactionListReq(block: bilibili.app.dynamic.v2.ReactionListReqKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.ReactionListReq =
  bilibili.app.dynamic.v2.ReactionListReqKt.Dsl._create(bilibili.app.dynamic.v2.ReactionListReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * 新版动态转发点赞列表-请求
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.ReactionListReq`
 */
public object ReactionListReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.ReactionListReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.ReactionListReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.ReactionListReq = _builder.build()

    /**
     * ```
     * 动态ID
     * ```
     *
     * `int64 dynamic_id = 1;`
     */
    public var dynamicId: kotlin.Long
      @JvmName("getDynamicId")
      get() = _builder.getDynamicId()
      @JvmName("setDynamicId")
      set(value) {
        _builder.setDynamicId(value)
      }
    /**
     * ```
     * 动态ID
     * ```
     *
     * `int64 dynamic_id = 1;`
     */
    public fun clearDynamicId() {
      _builder.clearDynamicId()
    }

    /**
     * ```
     * 动态类型
     * ```
     *
     * `int64 dyn_type = 2;`
     */
    public var dynType: kotlin.Long
      @JvmName("getDynType")
      get() = _builder.getDynType()
      @JvmName("setDynType")
      set(value) {
        _builder.setDynType(value)
      }
    /**
     * ```
     * 动态类型
     * ```
     *
     * `int64 dyn_type = 2;`
     */
    public fun clearDynType() {
      _builder.clearDynType()
    }

    /**
     * ```
     * 业务方资源id
     * ```
     *
     * `int64 rid = 3;`
     */
    public var rid: kotlin.Long
      @JvmName("getRid")
      get() = _builder.getRid()
      @JvmName("setRid")
      set(value) {
        _builder.setRid(value)
      }
    /**
     * ```
     * 业务方资源id
     * ```
     *
     * `int64 rid = 3;`
     */
    public fun clearRid() {
      _builder.clearRid()
    }

    /**
     * ```
     * 偏移,使用上一页回包中的offset字段；第一页不传。
     * ```
     *
     * `string offset = 4;`
     */
    public var offset: kotlin.String
      @JvmName("getOffset")
      get() = _builder.getOffset()
      @JvmName("setOffset")
      set(value) {
        _builder.setOffset(value)
      }
    /**
     * ```
     * 偏移,使用上一页回包中的offset字段；第一页不传。
     * ```
     *
     * `string offset = 4;`
     */
    public fun clearOffset() {
      _builder.clearOffset()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.ReactionListReq.copy(block: `bilibili.app.dynamic.v2`.ReactionListReqKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.ReactionListReq =
  `bilibili.app.dynamic.v2`.ReactionListReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

