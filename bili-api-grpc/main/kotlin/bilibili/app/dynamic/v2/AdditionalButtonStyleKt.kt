// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializeadditionalButtonStyle")
public inline fun additionalButtonStyle(block: bilibili.app.dynamic.v2.AdditionalButtonStyleKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.AdditionalButtonStyle =
  bilibili.app.dynamic.v2.AdditionalButtonStyleKt.Dsl._create(bilibili.app.dynamic.v2.AdditionalButtonStyle.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态-附加卡-按钮样式
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.AdditionalButtonStyle`
 */
public object AdditionalButtonStyleKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.AdditionalButtonStyle.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.AdditionalButtonStyle.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.AdditionalButtonStyle = _builder.build()

    /**
     * ```
     * icon
     * ```
     *
     * `string icon = 1;`
     */
    public var icon: kotlin.String
      @JvmName("getIcon")
      get() = _builder.getIcon()
      @JvmName("setIcon")
      set(value) {
        _builder.setIcon(value)
      }
    /**
     * ```
     * icon
     * ```
     *
     * `string icon = 1;`
     */
    public fun clearIcon() {
      _builder.clearIcon()
    }

    /**
     * ```
     * 文案
     * ```
     *
     * `string text = 2;`
     */
    public var text: kotlin.String
      @JvmName("getText")
      get() = _builder.getText()
      @JvmName("setText")
      set(value) {
        _builder.setText(value)
      }
    /**
     * ```
     * 文案
     * ```
     *
     * `string text = 2;`
     */
    public fun clearText() {
      _builder.clearText()
    }

    /**
     * ```
     * 按钮点击交互
     * ```
     *
     * `.bilibili.app.dynamic.v2.AdditionalButtonInteractive interactive = 3;`
     */
    public var interactive: bilibili.app.dynamic.v2.AdditionalButtonInteractive
      @JvmName("getInteractive")
      get() = _builder.getInteractive()
      @JvmName("setInteractive")
      set(value) {
        _builder.setInteractive(value)
      }
    /**
     * ```
     * 按钮点击交互
     * ```
     *
     * `.bilibili.app.dynamic.v2.AdditionalButtonInteractive interactive = 3;`
     */
    public fun clearInteractive() {
      _builder.clearInteractive()
    }
    /**
     * ```
     * 按钮点击交互
     * ```
     *
     * `.bilibili.app.dynamic.v2.AdditionalButtonInteractive interactive = 3;`
     * @return Whether the interactive field is set.
     */
    public fun hasInteractive(): kotlin.Boolean {
      return _builder.hasInteractive()
    }
    public val AdditionalButtonStyleKt.Dsl.interactiveOrNull: bilibili.app.dynamic.v2.AdditionalButtonInteractive?
      get() = _builder.interactiveOrNull

    /**
     * ```
     * 当前按钮填充样式
     * ```
     *
     * `.bilibili.app.dynamic.v2.AddButtonBgStyle bg_style = 4;`
     */
    public var bgStyle: bilibili.app.dynamic.v2.AddButtonBgStyle
      @JvmName("getBgStyle")
      get() = _builder.getBgStyle()
      @JvmName("setBgStyle")
      set(value) {
        _builder.setBgStyle(value)
      }
    public var bgStyleValue: kotlin.Int
      @JvmName("getBgStyleValue")
      get() = _builder.getBgStyleValue()
      @JvmName("setBgStyleValue")
      set(value) {
        _builder.setBgStyleValue(value)
      }
    /**
     * ```
     * 当前按钮填充样式
     * ```
     *
     * `.bilibili.app.dynamic.v2.AddButtonBgStyle bg_style = 4;`
     */
    public fun clearBgStyle() {
      _builder.clearBgStyle()
    }

    /**
     * ```
     * toast文案, 当disable=1时有效
     * ```
     *
     * `string toast = 5;`
     */
    public var toast: kotlin.String
      @JvmName("getToast")
      get() = _builder.getToast()
      @JvmName("setToast")
      set(value) {
        _builder.setToast(value)
      }
    /**
     * ```
     * toast文案, 当disable=1时有效
     * ```
     *
     * `string toast = 5;`
     */
    public fun clearToast() {
      _builder.clearToast()
    }

    /**
     * ```
     * 当前按钮样式,
     * 0:高亮 1:置灰(按钮不可点击)
     * ```
     *
     * `.bilibili.app.dynamic.v2.DisableState disable = 6;`
     */
    public var disable: bilibili.app.dynamic.v2.DisableState
      @JvmName("getDisable")
      get() = _builder.getDisable()
      @JvmName("setDisable")
      set(value) {
        _builder.setDisable(value)
      }
    public var disableValue: kotlin.Int
      @JvmName("getDisableValue")
      get() = _builder.getDisableValue()
      @JvmName("setDisableValue")
      set(value) {
        _builder.setDisableValue(value)
      }
    /**
     * ```
     * 当前按钮样式,
     * 0:高亮 1:置灰(按钮不可点击)
     * ```
     *
     * `.bilibili.app.dynamic.v2.DisableState disable = 6;`
     */
    public fun clearDisable() {
      _builder.clearDisable()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.AdditionalButtonShare share = 7;`
     */
    public var share: bilibili.app.dynamic.v2.AdditionalButtonShare
      @JvmName("getShare")
      get() = _builder.getShare()
      @JvmName("setShare")
      set(value) {
        _builder.setShare(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.AdditionalButtonShare share = 7;`
     */
    public fun clearShare() {
      _builder.clearShare()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.AdditionalButtonShare share = 7;`
     * @return Whether the share field is set.
     */
    public fun hasShare(): kotlin.Boolean {
      return _builder.hasShare()
    }
    public val AdditionalButtonStyleKt.Dsl.shareOrNull: bilibili.app.dynamic.v2.AdditionalButtonShare?
      get() = _builder.shareOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.AdditionalButtonStyle.copy(block: `bilibili.app.dynamic.v2`.AdditionalButtonStyleKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.AdditionalButtonStyle =
  `bilibili.app.dynamic.v2`.AdditionalButtonStyleKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.AdditionalButtonStyleOrBuilder.interactiveOrNull: bilibili.app.dynamic.v2.AdditionalButtonInteractive?
  get() = if (hasInteractive()) getInteractive() else null

public val bilibili.app.dynamic.v2.AdditionalButtonStyleOrBuilder.shareOrNull: bilibili.app.dynamic.v2.AdditionalButtonShare?
  get() = if (hasShare()) getShare() else null

