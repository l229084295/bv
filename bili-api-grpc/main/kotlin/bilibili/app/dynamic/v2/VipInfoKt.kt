// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializevipInfo")
public inline fun vipInfo(block: bilibili.app.dynamic.v2.VipInfoKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.VipInfo =
  bilibili.app.dynamic.v2.VipInfoKt.Dsl._create(bilibili.app.dynamic.v2.VipInfo.newBuilder()).apply { block() }._build()
/**
 * ```
 * 大会员信息
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.VipInfo`
 */
public object VipInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.VipInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.VipInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.VipInfo = _builder.build()

    /**
     * ```
     * 大会员类型
     * ```
     *
     * `int32 Type = 1;`
     */
    public var type: kotlin.Int
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * ```
     * 大会员类型
     * ```
     *
     * `int32 Type = 1;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * ```
     * 大会员状态
     * ```
     *
     * `int32 status = 2;`
     */
    public var status: kotlin.Int
      @JvmName("getStatus")
      get() = _builder.getStatus()
      @JvmName("setStatus")
      set(value) {
        _builder.setStatus(value)
      }
    /**
     * ```
     * 大会员状态
     * ```
     *
     * `int32 status = 2;`
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }

    /**
     * ```
     * 到期时间
     * ```
     *
     * `int64 due_date = 3;`
     */
    public var dueDate: kotlin.Long
      @JvmName("getDueDate")
      get() = _builder.getDueDate()
      @JvmName("setDueDate")
      set(value) {
        _builder.setDueDate(value)
      }
    /**
     * ```
     * 到期时间
     * ```
     *
     * `int64 due_date = 3;`
     */
    public fun clearDueDate() {
      _builder.clearDueDate()
    }

    /**
     * ```
     * 标签
     * ```
     *
     * `.bilibili.app.dynamic.v2.VipLabel label = 4;`
     */
    public var label: bilibili.app.dynamic.v2.VipLabel
      @JvmName("getLabel")
      get() = _builder.getLabel()
      @JvmName("setLabel")
      set(value) {
        _builder.setLabel(value)
      }
    /**
     * ```
     * 标签
     * ```
     *
     * `.bilibili.app.dynamic.v2.VipLabel label = 4;`
     */
    public fun clearLabel() {
      _builder.clearLabel()
    }
    /**
     * ```
     * 标签
     * ```
     *
     * `.bilibili.app.dynamic.v2.VipLabel label = 4;`
     * @return Whether the label field is set.
     */
    public fun hasLabel(): kotlin.Boolean {
      return _builder.hasLabel()
    }
    public val VipInfoKt.Dsl.labelOrNull: bilibili.app.dynamic.v2.VipLabel?
      get() = _builder.labelOrNull

    /**
     * ```
     * 主题
     * ```
     *
     * `int32 theme_type = 5;`
     */
    public var themeType: kotlin.Int
      @JvmName("getThemeType")
      get() = _builder.getThemeType()
      @JvmName("setThemeType")
      set(value) {
        _builder.setThemeType(value)
      }
    /**
     * ```
     * 主题
     * ```
     *
     * `int32 theme_type = 5;`
     */
    public fun clearThemeType() {
      _builder.clearThemeType()
    }

    /**
     * ```
     * 大会员角标
     * 0:无角标 1:粉色大会员角标 2:绿色小会员角标
     * ```
     *
     * `int32 avatar_subscript = 6;`
     */
    public var avatarSubscript: kotlin.Int
      @JvmName("getAvatarSubscript")
      get() = _builder.getAvatarSubscript()
      @JvmName("setAvatarSubscript")
      set(value) {
        _builder.setAvatarSubscript(value)
      }
    /**
     * ```
     * 大会员角标
     * 0:无角标 1:粉色大会员角标 2:绿色小会员角标
     * ```
     *
     * `int32 avatar_subscript = 6;`
     */
    public fun clearAvatarSubscript() {
      _builder.clearAvatarSubscript()
    }

    /**
     * ```
     * 昵称色值，可能为空，色值示例：#FFFB9E60
     * ```
     *
     * `string nickname_color = 7;`
     */
    public var nicknameColor: kotlin.String
      @JvmName("getNicknameColor")
      get() = _builder.getNicknameColor()
      @JvmName("setNicknameColor")
      set(value) {
        _builder.setNicknameColor(value)
      }
    /**
     * ```
     * 昵称色值，可能为空，色值示例：#FFFB9E60
     * ```
     *
     * `string nickname_color = 7;`
     */
    public fun clearNicknameColor() {
      _builder.clearNicknameColor()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.VipInfo.copy(block: `bilibili.app.dynamic.v2`.VipInfoKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.VipInfo =
  `bilibili.app.dynamic.v2`.VipInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.VipInfoOrBuilder.labelOrNull: bilibili.app.dynamic.v2.VipLabel?
  get() = if (hasLabel()) getLabel() else null

