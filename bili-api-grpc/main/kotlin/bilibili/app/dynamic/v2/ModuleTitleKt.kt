// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializemoduleTitle")
public inline fun moduleTitle(block: bilibili.app.dynamic.v2.ModuleTitleKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.ModuleTitle =
  bilibili.app.dynamic.v2.ModuleTitleKt.Dsl._create(bilibili.app.dynamic.v2.ModuleTitle.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.ModuleTitle`
 */
public object ModuleTitleKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.ModuleTitle.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.ModuleTitle.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.ModuleTitle = _builder.build()

    /**
     * ```
     * ```
     *
     * `string title = 1;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * ```
     *
     * `string title = 1;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.IconButton right_btn = 2;`
     */
    public var rightBtn: bilibili.app.dynamic.v2.IconButton
      @JvmName("getRightBtn")
      get() = _builder.getRightBtn()
      @JvmName("setRightBtn")
      set(value) {
        _builder.setRightBtn(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.IconButton right_btn = 2;`
     */
    public fun clearRightBtn() {
      _builder.clearRightBtn()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.IconButton right_btn = 2;`
     * @return Whether the rightBtn field is set.
     */
    public fun hasRightBtn(): kotlin.Boolean {
      return _builder.hasRightBtn()
    }
    public val ModuleTitleKt.Dsl.rightBtnOrNull: bilibili.app.dynamic.v2.IconButton?
      get() = _builder.rightBtnOrNull

    /**
     * ```
     * ```
     *
     * `int32 title_style = 3;`
     */
    public var titleStyle: kotlin.Int
      @JvmName("getTitleStyle")
      get() = _builder.getTitleStyle()
      @JvmName("setTitleStyle")
      set(value) {
        _builder.setTitleStyle(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 title_style = 3;`
     */
    public fun clearTitleStyle() {
      _builder.clearTitleStyle()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.ModuleTitle.copy(block: `bilibili.app.dynamic.v2`.ModuleTitleKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.ModuleTitle =
  `bilibili.app.dynamic.v2`.ModuleTitleKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.ModuleTitleOrBuilder.rightBtnOrNull: bilibili.app.dynamic.v2.IconButton?
  get() = if (hasRightBtn()) getRightBtn() else null

