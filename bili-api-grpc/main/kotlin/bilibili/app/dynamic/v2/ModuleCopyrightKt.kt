// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializemoduleCopyright")
public inline fun moduleCopyright(block: bilibili.app.dynamic.v2.ModuleCopyrightKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.ModuleCopyright =
  bilibili.app.dynamic.v2.ModuleCopyrightKt.Dsl._create(bilibili.app.dynamic.v2.ModuleCopyright.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.ModuleCopyright`
 */
public object ModuleCopyrightKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.ModuleCopyright.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.ModuleCopyright.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.ModuleCopyright = _builder.build()

    /**
     * ```
     * ```
     *
     * `string left_text = 1;`
     */
    public var leftText: kotlin.String
      @JvmName("getLeftText")
      get() = _builder.getLeftText()
      @JvmName("setLeftText")
      set(value) {
        _builder.setLeftText(value)
      }
    /**
     * ```
     * ```
     *
     * `string left_text = 1;`
     */
    public fun clearLeftText() {
      _builder.clearLeftText()
    }

    /**
     * ```
     * ```
     *
     * `string right_text = 2;`
     */
    public var rightText: kotlin.String
      @JvmName("getRightText")
      get() = _builder.getRightText()
      @JvmName("setRightText")
      set(value) {
        _builder.setRightText(value)
      }
    /**
     * ```
     * ```
     *
     * `string right_text = 2;`
     */
    public fun clearRightText() {
      _builder.clearRightText()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.ModuleCopyright.copy(block: `bilibili.app.dynamic.v2`.ModuleCopyrightKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.ModuleCopyright =
  `bilibili.app.dynamic.v2`.ModuleCopyrightKt.Dsl._create(this.toBuilder()).apply { block() }._build()

