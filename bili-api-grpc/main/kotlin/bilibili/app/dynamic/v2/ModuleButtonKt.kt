// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializemoduleButton")
public inline fun moduleButton(block: bilibili.app.dynamic.v2.ModuleButtonKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.ModuleButton =
  bilibili.app.dynamic.v2.ModuleButtonKt.Dsl._create(bilibili.app.dynamic.v2.ModuleButton.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.ModuleButton`
 */
public object ModuleButtonKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.ModuleButton.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.ModuleButton.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.ModuleButton = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.IconButton btn = 1;`
     */
    public var btn: bilibili.app.dynamic.v2.IconButton
      @JvmName("getBtn")
      get() = _builder.getBtn()
      @JvmName("setBtn")
      set(value) {
        _builder.setBtn(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.IconButton btn = 1;`
     */
    public fun clearBtn() {
      _builder.clearBtn()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.IconButton btn = 1;`
     * @return Whether the btn field is set.
     */
    public fun hasBtn(): kotlin.Boolean {
      return _builder.hasBtn()
    }
    public val ModuleButtonKt.Dsl.btnOrNull: bilibili.app.dynamic.v2.IconButton?
      get() = _builder.btnOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.ModuleButton.copy(block: `bilibili.app.dynamic.v2`.ModuleButtonKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.ModuleButton =
  `bilibili.app.dynamic.v2`.ModuleButtonKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.ModuleButtonOrBuilder.btnOrNull: bilibili.app.dynamic.v2.IconButton?
  get() = if (hasBtn()) getBtn() else null

