// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializecampusSquareReply")
public inline fun campusSquareReply(block: bilibili.app.dynamic.v2.CampusSquareReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.CampusSquareReply =
  bilibili.app.dynamic.v2.CampusSquareReplyKt.Dsl._create(bilibili.app.dynamic.v2.CampusSquareReply.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.CampusSquareReply`
 */
public object CampusSquareReplyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.CampusSquareReply.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.CampusSquareReply.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.CampusSquareReply = _builder.build()

    /**
     * ```
     * ```
     *
     * `string title = 1;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * ```
     *
     * `string title = 1;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ListProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.app.dynamic.v2.RcmdCampusBrief list = 2;`
     */
     public val list: com.google.protobuf.kotlin.DslList<bilibili.app.dynamic.v2.RcmdCampusBrief, ListProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getListList()
      )
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.app.dynamic.v2.RcmdCampusBrief list = 2;`
     * @param value The list to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addList")
    public fun com.google.protobuf.kotlin.DslList<bilibili.app.dynamic.v2.RcmdCampusBrief, ListProxy>.add(value: bilibili.app.dynamic.v2.RcmdCampusBrief) {
      _builder.addList(value)
    }
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.app.dynamic.v2.RcmdCampusBrief list = 2;`
     * @param value The list to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignList")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bilibili.app.dynamic.v2.RcmdCampusBrief, ListProxy>.plusAssign(value: bilibili.app.dynamic.v2.RcmdCampusBrief) {
      add(value)
    }
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.app.dynamic.v2.RcmdCampusBrief list = 2;`
     * @param values The list to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllList")
    public fun com.google.protobuf.kotlin.DslList<bilibili.app.dynamic.v2.RcmdCampusBrief, ListProxy>.addAll(values: kotlin.collections.Iterable<bilibili.app.dynamic.v2.RcmdCampusBrief>) {
      _builder.addAllList(values)
    }
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.app.dynamic.v2.RcmdCampusBrief list = 2;`
     * @param values The list to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllList")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bilibili.app.dynamic.v2.RcmdCampusBrief, ListProxy>.plusAssign(values: kotlin.collections.Iterable<bilibili.app.dynamic.v2.RcmdCampusBrief>) {
      addAll(values)
    }
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.app.dynamic.v2.RcmdCampusBrief list = 2;`
     * @param index The index to set the value at.
     * @param value The list to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setList")
    public operator fun com.google.protobuf.kotlin.DslList<bilibili.app.dynamic.v2.RcmdCampusBrief, ListProxy>.set(index: kotlin.Int, value: bilibili.app.dynamic.v2.RcmdCampusBrief) {
      _builder.setList(index, value)
    }
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.app.dynamic.v2.RcmdCampusBrief list = 2;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearList")
    public fun com.google.protobuf.kotlin.DslList<bilibili.app.dynamic.v2.RcmdCampusBrief, ListProxy>.clear() {
      _builder.clearList()
    }


    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.CampusLabel button = 3;`
     */
    public var button: bilibili.app.dynamic.v2.CampusLabel
      @JvmName("getButton")
      get() = _builder.getButton()
      @JvmName("setButton")
      set(value) {
        _builder.setButton(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.CampusLabel button = 3;`
     */
    public fun clearButton() {
      _builder.clearButton()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.CampusLabel button = 3;`
     * @return Whether the button field is set.
     */
    public fun hasButton(): kotlin.Boolean {
      return _builder.hasButton()
    }
    public val CampusSquareReplyKt.Dsl.buttonOrNull: bilibili.app.dynamic.v2.CampusLabel?
      get() = _builder.buttonOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.CampusSquareReply.copy(block: `bilibili.app.dynamic.v2`.CampusSquareReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.CampusSquareReply =
  `bilibili.app.dynamic.v2`.CampusSquareReplyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.CampusSquareReplyOrBuilder.buttonOrNull: bilibili.app.dynamic.v2.CampusLabel?
  get() = if (hasButton()) getButton() else null

