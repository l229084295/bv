// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializelegacyTopicFeedReq")
public inline fun legacyTopicFeedReq(block: bilibili.app.dynamic.v2.LegacyTopicFeedReqKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.LegacyTopicFeedReq =
  bilibili.app.dynamic.v2.LegacyTopicFeedReqKt.Dsl._create(bilibili.app.dynamic.v2.LegacyTopicFeedReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.LegacyTopicFeedReq`
 */
public object LegacyTopicFeedReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.LegacyTopicFeedReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.LegacyTopicFeedReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.LegacyTopicFeedReq = _builder.build()

    /**
     * ```
     * ```
     *
     * `int64 topic_id = 1;`
     */
    public var topicId: kotlin.Long
      @JvmName("getTopicId")
      get() = _builder.getTopicId()
      @JvmName("setTopicId")
      set(value) {
        _builder.setTopicId(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 topic_id = 1;`
     */
    public fun clearTopicId() {
      _builder.clearTopicId()
    }

    /**
     * ```
     * ```
     *
     * `string topic_name = 2;`
     */
    public var topicName: kotlin.String
      @JvmName("getTopicName")
      get() = _builder.getTopicName()
      @JvmName("setTopicName")
      set(value) {
        _builder.setTopicName(value)
      }
    /**
     * ```
     * ```
     *
     * `string topic_name = 2;`
     */
    public fun clearTopicName() {
      _builder.clearTopicName()
    }

    /**
     * ```
     * ```
     *
     * `string offset = 3;`
     */
    public var offset: kotlin.String
      @JvmName("getOffset")
      get() = _builder.getOffset()
      @JvmName("setOffset")
      set(value) {
        _builder.setOffset(value)
      }
    /**
     * ```
     * ```
     *
     * `string offset = 3;`
     */
    public fun clearOffset() {
      _builder.clearOffset()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.SortType sort_type = 4;`
     */
    public var sortType: bilibili.app.dynamic.v2.SortType
      @JvmName("getSortType")
      get() = _builder.getSortType()
      @JvmName("setSortType")
      set(value) {
        _builder.setSortType(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.SortType sort_type = 4;`
     */
    public fun clearSortType() {
      _builder.clearSortType()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.SortType sort_type = 4;`
     * @return Whether the sortType field is set.
     */
    public fun hasSortType(): kotlin.Boolean {
      return _builder.hasSortType()
    }
    public val LegacyTopicFeedReqKt.Dsl.sortTypeOrNull: bilibili.app.dynamic.v2.SortType?
      get() = _builder.sortTypeOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.SortType card_filter = 5;`
     */
    public var cardFilter: bilibili.app.dynamic.v2.SortType
      @JvmName("getCardFilter")
      get() = _builder.getCardFilter()
      @JvmName("setCardFilter")
      set(value) {
        _builder.setCardFilter(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.SortType card_filter = 5;`
     */
    public fun clearCardFilter() {
      _builder.clearCardFilter()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.SortType card_filter = 5;`
     * @return Whether the cardFilter field is set.
     */
    public fun hasCardFilter(): kotlin.Boolean {
      return _builder.hasCardFilter()
    }
    public val LegacyTopicFeedReqKt.Dsl.cardFilterOrNull: bilibili.app.dynamic.v2.SortType?
      get() = _builder.cardFilterOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.LegacyTopicFeedReq.copy(block: `bilibili.app.dynamic.v2`.LegacyTopicFeedReqKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.LegacyTopicFeedReq =
  `bilibili.app.dynamic.v2`.LegacyTopicFeedReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.LegacyTopicFeedReqOrBuilder.sortTypeOrNull: bilibili.app.dynamic.v2.SortType?
  get() = if (hasSortType()) getSortType() else null

public val bilibili.app.dynamic.v2.LegacyTopicFeedReqOrBuilder.cardFilterOrNull: bilibili.app.dynamic.v2.SortType?
  get() = if (hasCardFilter()) getCardFilter() else null

