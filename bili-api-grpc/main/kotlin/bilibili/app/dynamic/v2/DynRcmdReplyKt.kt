// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializedynRcmdReply")
public inline fun dynRcmdReply(block: bilibili.app.dynamic.v2.DynRcmdReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.DynRcmdReply =
  bilibili.app.dynamic.v2.DynRcmdReplyKt.Dsl._create(bilibili.app.dynamic.v2.DynRcmdReply.newBuilder()).apply { block() }._build()
/**
 * ```
 * 推荐页-响应
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.DynRcmdReply`
 */
public object DynRcmdReplyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.DynRcmdReply.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.DynRcmdReply.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.DynRcmdReply = _builder.build()

    /**
     * ```
     * 推荐页返回参数
     * ```
     *
     * `.bilibili.app.dynamic.v2.DynRegionRcmd region_rcmd = 1;`
     */
    public var regionRcmd: bilibili.app.dynamic.v2.DynRegionRcmd
      @JvmName("getRegionRcmd")
      get() = _builder.getRegionRcmd()
      @JvmName("setRegionRcmd")
      set(value) {
        _builder.setRegionRcmd(value)
      }
    /**
     * ```
     * 推荐页返回参数
     * ```
     *
     * `.bilibili.app.dynamic.v2.DynRegionRcmd region_rcmd = 1;`
     */
    public fun clearRegionRcmd() {
      _builder.clearRegionRcmd()
    }
    /**
     * ```
     * 推荐页返回参数
     * ```
     *
     * `.bilibili.app.dynamic.v2.DynRegionRcmd region_rcmd = 1;`
     * @return Whether the regionRcmd field is set.
     */
    public fun hasRegionRcmd(): kotlin.Boolean {
      return _builder.hasRegionRcmd()
    }
    public val DynRcmdReplyKt.Dsl.regionRcmdOrNull: bilibili.app.dynamic.v2.DynRegionRcmd?
      get() = _builder.regionRcmdOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.DynamicList dynamic_list = 2;`
     */
    public var dynamicList: bilibili.app.dynamic.v2.DynamicList
      @JvmName("getDynamicList")
      get() = _builder.getDynamicList()
      @JvmName("setDynamicList")
      set(value) {
        _builder.setDynamicList(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.DynamicList dynamic_list = 2;`
     */
    public fun clearDynamicList() {
      _builder.clearDynamicList()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.DynamicList dynamic_list = 2;`
     * @return Whether the dynamicList field is set.
     */
    public fun hasDynamicList(): kotlin.Boolean {
      return _builder.hasDynamicList()
    }
    public val DynRcmdReplyKt.Dsl.dynamicListOrNull: bilibili.app.dynamic.v2.DynamicList?
      get() = _builder.dynamicListOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.DynRcmdReply.copy(block: `bilibili.app.dynamic.v2`.DynRcmdReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.DynRcmdReply =
  `bilibili.app.dynamic.v2`.DynRcmdReplyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.DynRcmdReplyOrBuilder.regionRcmdOrNull: bilibili.app.dynamic.v2.DynRegionRcmd?
  get() = if (hasRegionRcmd()) getRegionRcmd() else null

public val bilibili.app.dynamic.v2.DynRcmdReplyOrBuilder.dynamicListOrNull: bilibili.app.dynamic.v2.DynamicList?
  get() = if (hasDynamicList()) getDynamicList() else null

