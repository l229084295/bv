// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializeweightItem")
public inline fun weightItem(block: bilibili.app.dynamic.v2.WeightItemKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.WeightItem =
  bilibili.app.dynamic.v2.WeightItemKt.Dsl._create(bilibili.app.dynamic.v2.WeightItem.newBuilder()).apply { block() }._build()
/**
 * ```
 * 提权样式
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.WeightItem`
 */
public object WeightItemKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.WeightItem.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.WeightItem.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.WeightItem = _builder.build()

    /**
     * ```
     * 类型
     * ```
     *
     * `.bilibili.app.dynamic.v2.WeightType type = 1;`
     */
    public var type: bilibili.app.dynamic.v2.WeightType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    public var typeValue: kotlin.Int
      @JvmName("getTypeValue")
      get() = _builder.getTypeValue()
      @JvmName("setTypeValue")
      set(value) {
        _builder.setTypeValue(value)
      }
    /**
     * ```
     * 类型
     * ```
     *
     * `.bilibili.app.dynamic.v2.WeightType type = 1;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * ```
     * 热门默认跳转按钮
     * ```
     *
     * `.bilibili.app.dynamic.v2.WeightButton button = 2;`
     */
    public var button: bilibili.app.dynamic.v2.WeightButton
      @JvmName("getButton")
      get() = _builder.getButton()
      @JvmName("setButton")
      set(value) {
        _builder.setButton(value)
      }
    /**
     * ```
     * 热门默认跳转按钮
     * ```
     *
     * `.bilibili.app.dynamic.v2.WeightButton button = 2;`
     */
    public fun clearButton() {
      _builder.clearButton()
    }
    /**
     * ```
     * 热门默认跳转按钮
     * ```
     *
     * `.bilibili.app.dynamic.v2.WeightButton button = 2;`
     * @return Whether the button field is set.
     */
    public fun hasButton(): kotlin.Boolean {
      return _builder.hasButton()
    }

    /**
     * ```
     * 提权不感兴趣
     * ```
     *
     * `.bilibili.app.dynamic.v2.WeightDislike dislike = 3;`
     */
    public var dislike: bilibili.app.dynamic.v2.WeightDislike
      @JvmName("getDislike")
      get() = _builder.getDislike()
      @JvmName("setDislike")
      set(value) {
        _builder.setDislike(value)
      }
    /**
     * ```
     * 提权不感兴趣
     * ```
     *
     * `.bilibili.app.dynamic.v2.WeightDislike dislike = 3;`
     */
    public fun clearDislike() {
      _builder.clearDislike()
    }
    /**
     * ```
     * 提权不感兴趣
     * ```
     *
     * `.bilibili.app.dynamic.v2.WeightDislike dislike = 3;`
     * @return Whether the dislike field is set.
     */
    public fun hasDislike(): kotlin.Boolean {
      return _builder.hasDislike()
    }
    public val itemCase: bilibili.app.dynamic.v2.WeightItem.ItemCase
      @JvmName("getItemCase")
      get() = _builder.getItemCase()

    public fun clearItem() {
      _builder.clearItem()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.WeightItem.copy(block: `bilibili.app.dynamic.v2`.WeightItemKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.WeightItem =
  `bilibili.app.dynamic.v2`.WeightItemKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.WeightItemOrBuilder.buttonOrNull: bilibili.app.dynamic.v2.WeightButton?
  get() = if (hasButton()) getButton() else null

public val bilibili.app.dynamic.v2.WeightItemOrBuilder.dislikeOrNull: bilibili.app.dynamic.v2.WeightDislike?
  get() = if (hasDislike()) getDislike() else null

