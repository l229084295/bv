// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializeuserPendant")
public inline fun userPendant(block: bilibili.app.dynamic.v2.UserPendantKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.UserPendant =
  bilibili.app.dynamic.v2.UserPendantKt.Dsl._create(bilibili.app.dynamic.v2.UserPendant.newBuilder()).apply { block() }._build()
/**
 * ```
 * 头像挂件信息
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.UserPendant`
 */
public object UserPendantKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.UserPendant.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.UserPendant.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.UserPendant = _builder.build()

    /**
     * ```
     * pid
     * ```
     *
     * `int64 pid = 1;`
     */
    public var pid: kotlin.Long
      @JvmName("getPid")
      get() = _builder.getPid()
      @JvmName("setPid")
      set(value) {
        _builder.setPid(value)
      }
    /**
     * ```
     * pid
     * ```
     *
     * `int64 pid = 1;`
     */
    public fun clearPid() {
      _builder.clearPid()
    }

    /**
     * ```
     * 名称
     * ```
     *
     * `string name = 2;`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * ```
     * 名称
     * ```
     *
     * `string name = 2;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * ```
     * 图片链接
     * ```
     *
     * `string image = 3;`
     */
    public var image: kotlin.String
      @JvmName("getImage")
      get() = _builder.getImage()
      @JvmName("setImage")
      set(value) {
        _builder.setImage(value)
      }
    /**
     * ```
     * 图片链接
     * ```
     *
     * `string image = 3;`
     */
    public fun clearImage() {
      _builder.clearImage()
    }

    /**
     * ```
     * 有效期
     * ```
     *
     * `int64 expire = 4;`
     */
    public var expire: kotlin.Long
      @JvmName("getExpire")
      get() = _builder.getExpire()
      @JvmName("setExpire")
      set(value) {
        _builder.setExpire(value)
      }
    /**
     * ```
     * 有效期
     * ```
     *
     * `int64 expire = 4;`
     */
    public fun clearExpire() {
      _builder.clearExpire()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.UserPendant.copy(block: `bilibili.app.dynamic.v2`.UserPendantKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.UserPendant =
  `bilibili.app.dynamic.v2`.UserPendantKt.Dsl._create(this.toBuilder()).apply { block() }._build()

