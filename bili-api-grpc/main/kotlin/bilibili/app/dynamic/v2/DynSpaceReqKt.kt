// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializedynSpaceReq")
public inline fun dynSpaceReq(block: bilibili.app.dynamic.v2.DynSpaceReqKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.DynSpaceReq =
  bilibili.app.dynamic.v2.DynSpaceReqKt.Dsl._create(bilibili.app.dynamic.v2.DynSpaceReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * 空间页动态-请求
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.DynSpaceReq`
 */
public object DynSpaceReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.DynSpaceReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.DynSpaceReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.DynSpaceReq = _builder.build()

    /**
     * ```
     * 被访问者，也就是空间主人的uid
     * ```
     *
     * `int64 host_uid = 1;`
     */
    public var hostUid: kotlin.Long
      @JvmName("getHostUid")
      get() = _builder.getHostUid()
      @JvmName("setHostUid")
      set(value) {
        _builder.setHostUid(value)
      }
    /**
     * ```
     * 被访问者，也就是空间主人的uid
     * ```
     *
     * `int64 host_uid = 1;`
     */
    public fun clearHostUid() {
      _builder.clearHostUid()
    }

    /**
     * ```
     * 动态偏移history_offset
     * ```
     *
     * `string history_offset = 2;`
     */
    public var historyOffset: kotlin.String
      @JvmName("getHistoryOffset")
      get() = _builder.getHistoryOffset()
      @JvmName("setHistoryOffset")
      set(value) {
        _builder.setHistoryOffset(value)
      }
    /**
     * ```
     * 动态偏移history_offset
     * ```
     *
     * `string history_offset = 2;`
     */
    public fun clearHistoryOffset() {
      _builder.clearHistoryOffset()
    }

    /**
     * ```
     * 秒开参数
     * ```
     *
     * `.bilibili.app.archive.middleware.v1.PlayerArgs player_args = 3;`
     */
    public var playerArgs: bilibili.app.archive.middleware.v1.PlayerArgs
      @JvmName("getPlayerArgs")
      get() = _builder.getPlayerArgs()
      @JvmName("setPlayerArgs")
      set(value) {
        _builder.setPlayerArgs(value)
      }
    /**
     * ```
     * 秒开参数
     * ```
     *
     * `.bilibili.app.archive.middleware.v1.PlayerArgs player_args = 3;`
     */
    public fun clearPlayerArgs() {
      _builder.clearPlayerArgs()
    }
    /**
     * ```
     * 秒开参数
     * ```
     *
     * `.bilibili.app.archive.middleware.v1.PlayerArgs player_args = 3;`
     * @return Whether the playerArgs field is set.
     */
    public fun hasPlayerArgs(): kotlin.Boolean {
      return _builder.hasPlayerArgs()
    }
    public val DynSpaceReqKt.Dsl.playerArgsOrNull: bilibili.app.archive.middleware.v1.PlayerArgs?
      get() = _builder.playerArgsOrNull

    /**
     * ```
     * 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
     * ```
     *
     * `int32 local_time = 4;`
     */
    public var localTime: kotlin.Int
      @JvmName("getLocalTime")
      get() = _builder.getLocalTime()
      @JvmName("setLocalTime")
      set(value) {
        _builder.setLocalTime(value)
      }
    /**
     * ```
     * 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
     * ```
     *
     * `int32 local_time = 4;`
     */
    public fun clearLocalTime() {
      _builder.clearLocalTime()
    }

    /**
     * ```
     * 向下翻页数，默认从1开始
     * ```
     *
     * `int64 page = 5;`
     */
    public var page: kotlin.Long
      @JvmName("getPage")
      get() = _builder.getPage()
      @JvmName("setPage")
      set(value) {
        _builder.setPage(value)
      }
    /**
     * ```
     * 向下翻页数，默认从1开始
     * ```
     *
     * `int64 page = 5;`
     */
    public fun clearPage() {
      _builder.clearPage()
    }

    /**
     * ```
     * 来源，空间页：space，直播tab：live
     * ```
     *
     * `string from = 6;`
     */
    public var from: kotlin.String
      @JvmName("getFrom")
      get() = _builder.getFrom()
      @JvmName("setFrom")
      set(value) {
        _builder.setFrom(value)
      }
    /**
     * ```
     * 来源，空间页：space，直播tab：live
     * ```
     *
     * `string from = 6;`
     */
    public fun clearFrom() {
      _builder.clearFrom()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.DynSpaceReq.copy(block: `bilibili.app.dynamic.v2`.DynSpaceReqKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.DynSpaceReq =
  `bilibili.app.dynamic.v2`.DynSpaceReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.DynSpaceReqOrBuilder.playerArgsOrNull: bilibili.app.archive.middleware.v1.PlayerArgs?
  get() = if (hasPlayerArgs()) getPlayerArgs() else null

