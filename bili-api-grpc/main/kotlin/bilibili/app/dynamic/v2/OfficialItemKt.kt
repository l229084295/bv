// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializeofficialItem")
public inline fun officialItem(block: bilibili.app.dynamic.v2.OfficialItemKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.OfficialItem =
  bilibili.app.dynamic.v2.OfficialItemKt.Dsl._create(bilibili.app.dynamic.v2.OfficialItem.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `bilibili.app.dynamic.v2.OfficialItem`
 */
public object OfficialItemKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.OfficialItem.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.OfficialItem.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.OfficialItem = _builder.build()

    /**
     * `int32 type = 1;`
     */
    public var type: kotlin.Int
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * `int32 type = 1;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * `.bilibili.app.dynamic.v2.OfficialRcmdArchive rcmd_archive = 2;`
     */
    public var rcmdArchive: bilibili.app.dynamic.v2.OfficialRcmdArchive
      @JvmName("getRcmdArchive")
      get() = _builder.getRcmdArchive()
      @JvmName("setRcmdArchive")
      set(value) {
        _builder.setRcmdArchive(value)
      }
    /**
     * `.bilibili.app.dynamic.v2.OfficialRcmdArchive rcmd_archive = 2;`
     */
    public fun clearRcmdArchive() {
      _builder.clearRcmdArchive()
    }
    /**
     * `.bilibili.app.dynamic.v2.OfficialRcmdArchive rcmd_archive = 2;`
     * @return Whether the rcmdArchive field is set.
     */
    public fun hasRcmdArchive(): kotlin.Boolean {
      return _builder.hasRcmdArchive()
    }

    /**
     * `.bilibili.app.dynamic.v2.OfficialRcmdDynamic rcmd_dynamic = 3;`
     */
    public var rcmdDynamic: bilibili.app.dynamic.v2.OfficialRcmdDynamic
      @JvmName("getRcmdDynamic")
      get() = _builder.getRcmdDynamic()
      @JvmName("setRcmdDynamic")
      set(value) {
        _builder.setRcmdDynamic(value)
      }
    /**
     * `.bilibili.app.dynamic.v2.OfficialRcmdDynamic rcmd_dynamic = 3;`
     */
    public fun clearRcmdDynamic() {
      _builder.clearRcmdDynamic()
    }
    /**
     * `.bilibili.app.dynamic.v2.OfficialRcmdDynamic rcmd_dynamic = 3;`
     * @return Whether the rcmdDynamic field is set.
     */
    public fun hasRcmdDynamic(): kotlin.Boolean {
      return _builder.hasRcmdDynamic()
    }
    public val rcmdItemCase: bilibili.app.dynamic.v2.OfficialItem.RcmdItemCase
      @JvmName("getRcmdItemCase")
      get() = _builder.getRcmdItemCase()

    public fun clearRcmdItem() {
      _builder.clearRcmdItem()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.OfficialItem.copy(block: `bilibili.app.dynamic.v2`.OfficialItemKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.OfficialItem =
  `bilibili.app.dynamic.v2`.OfficialItemKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.OfficialItemOrBuilder.rcmdArchiveOrNull: bilibili.app.dynamic.v2.OfficialRcmdArchive?
  get() = if (hasRcmdArchive()) getRcmdArchive() else null

public val bilibili.app.dynamic.v2.OfficialItemOrBuilder.rcmdDynamicOrNull: bilibili.app.dynamic.v2.OfficialRcmdDynamic?
  get() = if (hasRcmdDynamic()) getRcmdDynamic() else null

