// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v2/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v2;

@kotlin.jvm.JvmName("-initializecampusFeatureProgress")
public inline fun campusFeatureProgress(block: bilibili.app.dynamic.v2.CampusFeatureProgressKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.CampusFeatureProgress =
  bilibili.app.dynamic.v2.CampusFeatureProgressKt.Dsl._create(bilibili.app.dynamic.v2.CampusFeatureProgress.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v2.CampusFeatureProgress`
 */
public object CampusFeatureProgressKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v2.CampusFeatureProgress.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v2.CampusFeatureProgress.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v2.CampusFeatureProgress = _builder.build()

    /**
     * ```
     * ```
     *
     * `int64 progress_full = 1;`
     */
    public var progressFull: kotlin.Long
      @JvmName("getProgressFull")
      get() = _builder.getProgressFull()
      @JvmName("setProgressFull")
      set(value) {
        _builder.setProgressFull(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 progress_full = 1;`
     */
    public fun clearProgressFull() {
      _builder.clearProgressFull()
    }

    /**
     * ```
     * ```
     *
     * `int64 progress_achieved = 2;`
     */
    public var progressAchieved: kotlin.Long
      @JvmName("getProgressAchieved")
      get() = _builder.getProgressAchieved()
      @JvmName("setProgressAchieved")
      set(value) {
        _builder.setProgressAchieved(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 progress_achieved = 2;`
     */
    public fun clearProgressAchieved() {
      _builder.clearProgressAchieved()
    }

    /**
     * ```
     * ```
     *
     * `string desc_title = 3;`
     */
    public var descTitle: kotlin.String
      @JvmName("getDescTitle")
      get() = _builder.getDescTitle()
      @JvmName("setDescTitle")
      set(value) {
        _builder.setDescTitle(value)
      }
    /**
     * ```
     * ```
     *
     * `string desc_title = 3;`
     */
    public fun clearDescTitle() {
      _builder.clearDescTitle()
    }

    /**
     * ```
     * ```
     *
     * `string desc_1 = 4;`
     */
    public var desc1: kotlin.String
      @JvmName("getDesc1")
      get() = _builder.getDesc1()
      @JvmName("setDesc1")
      set(value) {
        _builder.setDesc1(value)
      }
    /**
     * ```
     * ```
     *
     * `string desc_1 = 4;`
     */
    public fun clearDesc1() {
      _builder.clearDesc1()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.CampusLabel btn = 5;`
     */
    public var btn: bilibili.app.dynamic.v2.CampusLabel
      @JvmName("getBtn")
      get() = _builder.getBtn()
      @JvmName("setBtn")
      set(value) {
        _builder.setBtn(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.CampusLabel btn = 5;`
     */
    public fun clearBtn() {
      _builder.clearBtn()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.dynamic.v2.CampusLabel btn = 5;`
     * @return Whether the btn field is set.
     */
    public fun hasBtn(): kotlin.Boolean {
      return _builder.hasBtn()
    }
    public val CampusFeatureProgressKt.Dsl.btnOrNull: bilibili.app.dynamic.v2.CampusLabel?
      get() = _builder.btnOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v2.CampusFeatureProgress.copy(block: `bilibili.app.dynamic.v2`.CampusFeatureProgressKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v2.CampusFeatureProgress =
  `bilibili.app.dynamic.v2`.CampusFeatureProgressKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v2.CampusFeatureProgressOrBuilder.btnOrNull: bilibili.app.dynamic.v2.CampusLabel?
  get() = if (hasBtn()) getBtn() else null

