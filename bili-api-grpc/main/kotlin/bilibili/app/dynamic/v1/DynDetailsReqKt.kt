// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v1/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v1;

@kotlin.jvm.JvmName("-initializedynDetailsReq")
public inline fun dynDetailsReq(block: bilibili.app.dynamic.v1.DynDetailsReqKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.DynDetailsReq =
  bilibili.app.dynamic.v1.DynDetailsReqKt.Dsl._create(bilibili.app.dynamic.v1.DynDetailsReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * 批量动态id获取动态详情请求参数
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v1.DynDetailsReq`
 */
public object DynDetailsReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v1.DynDetailsReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v1.DynDetailsReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v1.DynDetailsReq = _builder.build()

    /**
     * ```
     * 青少年模式
     * ```
     *
     * `int32 teenagers_mode = 1;`
     */
    public var teenagersMode: kotlin.Int
      @JvmName("getTeenagersMode")
      get() = _builder.getTeenagersMode()
      @JvmName("setTeenagersMode")
      set(value) {
        _builder.setTeenagersMode(value)
      }
    /**
     * ```
     * 青少年模式
     * ```
     *
     * `int32 teenagers_mode = 1;`
     */
    public fun clearTeenagersMode() {
      _builder.clearTeenagersMode()
    }

    /**
     * ```
     * 动态id
     * ```
     *
     * `string dynamic_ids = 2;`
     */
    public var dynamicIds: kotlin.String
      @JvmName("getDynamicIds")
      get() = _builder.getDynamicIds()
      @JvmName("setDynamicIds")
      set(value) {
        _builder.setDynamicIds(value)
      }
    /**
     * ```
     * 动态id
     * ```
     *
     * `string dynamic_ids = 2;`
     */
    public fun clearDynamicIds() {
      _builder.clearDynamicIds()
    }

    /**
     * ```
     * 清晰度
     * ```
     *
     * `int32 qn = 3;`
     */
    public var qn: kotlin.Int
      @JvmName("getQn")
      get() = _builder.getQn()
      @JvmName("setQn")
      set(value) {
        _builder.setQn(value)
      }
    /**
     * ```
     * 清晰度
     * ```
     *
     * `int32 qn = 3;`
     */
    public fun clearQn() {
      _builder.clearQn()
    }

    /**
     * ```
     * 流版本
     * ```
     *
     * `int32 fnver = 4;`
     */
    public var fnver: kotlin.Int
      @JvmName("getFnver")
      get() = _builder.getFnver()
      @JvmName("setFnver")
      set(value) {
        _builder.setFnver(value)
      }
    /**
     * ```
     * 流版本
     * ```
     *
     * `int32 fnver = 4;`
     */
    public fun clearFnver() {
      _builder.clearFnver()
    }

    /**
     * ```
     * 流功能
     * ```
     *
     * `int32 fnval = 5;`
     */
    public var fnval: kotlin.Int
      @JvmName("getFnval")
      get() = _builder.getFnval()
      @JvmName("setFnval")
      set(value) {
        _builder.setFnval(value)
      }
    /**
     * ```
     * 流功能
     * ```
     *
     * `int32 fnval = 5;`
     */
    public fun clearFnval() {
      _builder.clearFnval()
    }

    /**
     * ```
     * 是否强制使用域名
     * ```
     *
     * `int32 force_host = 6;`
     */
    public var forceHost: kotlin.Int
      @JvmName("getForceHost")
      get() = _builder.getForceHost()
      @JvmName("setForceHost")
      set(value) {
        _builder.setForceHost(value)
      }
    /**
     * ```
     * 是否强制使用域名
     * ```
     *
     * `int32 force_host = 6;`
     */
    public fun clearForceHost() {
      _builder.clearForceHost()
    }

    /**
     * ```
     * 是否4k
     * ```
     *
     * `int32 fourk = 7;`
     */
    public var fourk: kotlin.Int
      @JvmName("getFourk")
      get() = _builder.getFourk()
      @JvmName("setFourk")
      set(value) {
        _builder.setFourk(value)
      }
    /**
     * ```
     * 是否4k
     * ```
     *
     * `int32 fourk = 7;`
     */
    public fun clearFourk() {
      _builder.clearFourk()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v1.DynDetailsReq.copy(block: `bilibili.app.dynamic.v1`.DynDetailsReqKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.DynDetailsReq =
  `bilibili.app.dynamic.v1`.DynDetailsReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

