// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v1/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v1;

@kotlin.jvm.JvmName("-initializemodule")
public inline fun module(block: bilibili.app.dynamic.v1.ModuleKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.Module =
  bilibili.app.dynamic.v1.ModuleKt.Dsl._create(bilibili.app.dynamic.v1.Module.newBuilder()).apply { block() }._build()
/**
 * ```
 * 模块
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v1.Module`
 */
public object ModuleKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v1.Module.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v1.Module.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v1.Module = _builder.build()

    /**
     * ```
     * 类型
     * fold:折叠 author:发布人 dynamic:动态卡片内容 state:计数信息 forward:转发 extend:小卡信息 dispute:争议小黄条 desc:描述信息
     * likeUser:点赞用户 upList:最近访问列表 followList:我的追番
     * ```
     *
     * `string module_type = 1;`
     */
    public var moduleType: kotlin.String
      @JvmName("getModuleType")
      get() = _builder.getModuleType()
      @JvmName("setModuleType")
      set(value) {
        _builder.setModuleType(value)
      }
    /**
     * ```
     * 类型
     * fold:折叠 author:发布人 dynamic:动态卡片内容 state:计数信息 forward:转发 extend:小卡信息 dispute:争议小黄条 desc:描述信息
     * likeUser:点赞用户 upList:最近访问列表 followList:我的追番
     * ```
     *
     * `string module_type = 1;`
     */
    public fun clearModuleType() {
      _builder.clearModuleType()
    }

    /**
     * ```
     * 折叠
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleFold module_fold = 2;`
     */
    public var moduleFold: bilibili.app.dynamic.v1.ModuleFold
      @JvmName("getModuleFold")
      get() = _builder.getModuleFold()
      @JvmName("setModuleFold")
      set(value) {
        _builder.setModuleFold(value)
      }
    /**
     * ```
     * 折叠
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleFold module_fold = 2;`
     */
    public fun clearModuleFold() {
      _builder.clearModuleFold()
    }
    /**
     * ```
     * 折叠
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleFold module_fold = 2;`
     * @return Whether the moduleFold field is set.
     */
    public fun hasModuleFold(): kotlin.Boolean {
      return _builder.hasModuleFold()
    }

    /**
     * ```
     * 发布人
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleAuthor module_author = 3;`
     */
    public var moduleAuthor: bilibili.app.dynamic.v1.ModuleAuthor
      @JvmName("getModuleAuthor")
      get() = _builder.getModuleAuthor()
      @JvmName("setModuleAuthor")
      set(value) {
        _builder.setModuleAuthor(value)
      }
    /**
     * ```
     * 发布人
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleAuthor module_author = 3;`
     */
    public fun clearModuleAuthor() {
      _builder.clearModuleAuthor()
    }
    /**
     * ```
     * 发布人
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleAuthor module_author = 3;`
     * @return Whether the moduleAuthor field is set.
     */
    public fun hasModuleAuthor(): kotlin.Boolean {
      return _builder.hasModuleAuthor()
    }

    /**
     * ```
     * 动态卡片内容
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleDynamic module_dynamic = 4;`
     */
    public var moduleDynamic: bilibili.app.dynamic.v1.ModuleDynamic
      @JvmName("getModuleDynamic")
      get() = _builder.getModuleDynamic()
      @JvmName("setModuleDynamic")
      set(value) {
        _builder.setModuleDynamic(value)
      }
    /**
     * ```
     * 动态卡片内容
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleDynamic module_dynamic = 4;`
     */
    public fun clearModuleDynamic() {
      _builder.clearModuleDynamic()
    }
    /**
     * ```
     * 动态卡片内容
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleDynamic module_dynamic = 4;`
     * @return Whether the moduleDynamic field is set.
     */
    public fun hasModuleDynamic(): kotlin.Boolean {
      return _builder.hasModuleDynamic()
    }

    /**
     * ```
     * 计数信息
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleState module_state = 5;`
     */
    public var moduleState: bilibili.app.dynamic.v1.ModuleState
      @JvmName("getModuleState")
      get() = _builder.getModuleState()
      @JvmName("setModuleState")
      set(value) {
        _builder.setModuleState(value)
      }
    /**
     * ```
     * 计数信息
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleState module_state = 5;`
     */
    public fun clearModuleState() {
      _builder.clearModuleState()
    }
    /**
     * ```
     * 计数信息
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleState module_state = 5;`
     * @return Whether the moduleState field is set.
     */
    public fun hasModuleState(): kotlin.Boolean {
      return _builder.hasModuleState()
    }

    /**
     * ```
     * 转发
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleForward module_forward = 6;`
     */
    public var moduleForward: bilibili.app.dynamic.v1.ModuleForward
      @JvmName("getModuleForward")
      get() = _builder.getModuleForward()
      @JvmName("setModuleForward")
      set(value) {
        _builder.setModuleForward(value)
      }
    /**
     * ```
     * 转发
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleForward module_forward = 6;`
     */
    public fun clearModuleForward() {
      _builder.clearModuleForward()
    }
    /**
     * ```
     * 转发
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleForward module_forward = 6;`
     * @return Whether the moduleForward field is set.
     */
    public fun hasModuleForward(): kotlin.Boolean {
      return _builder.hasModuleForward()
    }

    /**
     * ```
     * 小卡信息
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleExtend module_extend = 7;`
     */
    public var moduleExtend: bilibili.app.dynamic.v1.ModuleExtend
      @JvmName("getModuleExtend")
      get() = _builder.getModuleExtend()
      @JvmName("setModuleExtend")
      set(value) {
        _builder.setModuleExtend(value)
      }
    /**
     * ```
     * 小卡信息
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleExtend module_extend = 7;`
     */
    public fun clearModuleExtend() {
      _builder.clearModuleExtend()
    }
    /**
     * ```
     * 小卡信息
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleExtend module_extend = 7;`
     * @return Whether the moduleExtend field is set.
     */
    public fun hasModuleExtend(): kotlin.Boolean {
      return _builder.hasModuleExtend()
    }

    /**
     * ```
     * 争议小黄条
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleDispute module_dispute = 8;`
     */
    public var moduleDispute: bilibili.app.dynamic.v1.ModuleDispute
      @JvmName("getModuleDispute")
      get() = _builder.getModuleDispute()
      @JvmName("setModuleDispute")
      set(value) {
        _builder.setModuleDispute(value)
      }
    /**
     * ```
     * 争议小黄条
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleDispute module_dispute = 8;`
     */
    public fun clearModuleDispute() {
      _builder.clearModuleDispute()
    }
    /**
     * ```
     * 争议小黄条
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleDispute module_dispute = 8;`
     * @return Whether the moduleDispute field is set.
     */
    public fun hasModuleDispute(): kotlin.Boolean {
      return _builder.hasModuleDispute()
    }

    /**
     * ```
     * 描述信息
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleDesc module_desc = 9;`
     */
    public var moduleDesc: bilibili.app.dynamic.v1.ModuleDesc
      @JvmName("getModuleDesc")
      get() = _builder.getModuleDesc()
      @JvmName("setModuleDesc")
      set(value) {
        _builder.setModuleDesc(value)
      }
    /**
     * ```
     * 描述信息
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleDesc module_desc = 9;`
     */
    public fun clearModuleDesc() {
      _builder.clearModuleDesc()
    }
    /**
     * ```
     * 描述信息
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleDesc module_desc = 9;`
     * @return Whether the moduleDesc field is set.
     */
    public fun hasModuleDesc(): kotlin.Boolean {
      return _builder.hasModuleDesc()
    }

    /**
     * ```
     * 点赞用户
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleLikeUser module_likeUser = 10;`
     */
    public var moduleLikeUser: bilibili.app.dynamic.v1.ModuleLikeUser
      @JvmName("getModuleLikeUser")
      get() = _builder.getModuleLikeUser()
      @JvmName("setModuleLikeUser")
      set(value) {
        _builder.setModuleLikeUser(value)
      }
    /**
     * ```
     * 点赞用户
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleLikeUser module_likeUser = 10;`
     */
    public fun clearModuleLikeUser() {
      _builder.clearModuleLikeUser()
    }
    /**
     * ```
     * 点赞用户
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleLikeUser module_likeUser = 10;`
     * @return Whether the moduleLikeUser field is set.
     */
    public fun hasModuleLikeUser(): kotlin.Boolean {
      return _builder.hasModuleLikeUser()
    }

    /**
     * ```
     * 最近访问列表
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleDynUpList module_upList = 11;`
     */
    public var moduleUpList: bilibili.app.dynamic.v1.ModuleDynUpList
      @JvmName("getModuleUpList")
      get() = _builder.getModuleUpList()
      @JvmName("setModuleUpList")
      set(value) {
        _builder.setModuleUpList(value)
      }
    /**
     * ```
     * 最近访问列表
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleDynUpList module_upList = 11;`
     */
    public fun clearModuleUpList() {
      _builder.clearModuleUpList()
    }
    /**
     * ```
     * 最近访问列表
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleDynUpList module_upList = 11;`
     * @return Whether the moduleUpList field is set.
     */
    public fun hasModuleUpList(): kotlin.Boolean {
      return _builder.hasModuleUpList()
    }

    /**
     * ```
     * 我的追番
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleFollowList module_followList = 12;`
     */
    public var moduleFollowList: bilibili.app.dynamic.v1.ModuleFollowList
      @JvmName("getModuleFollowList")
      get() = _builder.getModuleFollowList()
      @JvmName("setModuleFollowList")
      set(value) {
        _builder.setModuleFollowList(value)
      }
    /**
     * ```
     * 我的追番
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleFollowList module_followList = 12;`
     */
    public fun clearModuleFollowList() {
      _builder.clearModuleFollowList()
    }
    /**
     * ```
     * 我的追番
     * ```
     *
     * `.bilibili.app.dynamic.v1.ModuleFollowList module_followList = 12;`
     * @return Whether the moduleFollowList field is set.
     */
    public fun hasModuleFollowList(): kotlin.Boolean {
      return _builder.hasModuleFollowList()
    }
    public val moduleItemCase: bilibili.app.dynamic.v1.Module.ModuleItemCase
      @JvmName("getModuleItemCase")
      get() = _builder.getModuleItemCase()

    public fun clearModuleItem() {
      _builder.clearModuleItem()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v1.Module.copy(block: `bilibili.app.dynamic.v1`.ModuleKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.Module =
  `bilibili.app.dynamic.v1`.ModuleKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v1.ModuleOrBuilder.moduleFoldOrNull: bilibili.app.dynamic.v1.ModuleFold?
  get() = if (hasModuleFold()) getModuleFold() else null

public val bilibili.app.dynamic.v1.ModuleOrBuilder.moduleAuthorOrNull: bilibili.app.dynamic.v1.ModuleAuthor?
  get() = if (hasModuleAuthor()) getModuleAuthor() else null

public val bilibili.app.dynamic.v1.ModuleOrBuilder.moduleDynamicOrNull: bilibili.app.dynamic.v1.ModuleDynamic?
  get() = if (hasModuleDynamic()) getModuleDynamic() else null

public val bilibili.app.dynamic.v1.ModuleOrBuilder.moduleStateOrNull: bilibili.app.dynamic.v1.ModuleState?
  get() = if (hasModuleState()) getModuleState() else null

public val bilibili.app.dynamic.v1.ModuleOrBuilder.moduleForwardOrNull: bilibili.app.dynamic.v1.ModuleForward?
  get() = if (hasModuleForward()) getModuleForward() else null

public val bilibili.app.dynamic.v1.ModuleOrBuilder.moduleExtendOrNull: bilibili.app.dynamic.v1.ModuleExtend?
  get() = if (hasModuleExtend()) getModuleExtend() else null

public val bilibili.app.dynamic.v1.ModuleOrBuilder.moduleDisputeOrNull: bilibili.app.dynamic.v1.ModuleDispute?
  get() = if (hasModuleDispute()) getModuleDispute() else null

public val bilibili.app.dynamic.v1.ModuleOrBuilder.moduleDescOrNull: bilibili.app.dynamic.v1.ModuleDesc?
  get() = if (hasModuleDesc()) getModuleDesc() else null

public val bilibili.app.dynamic.v1.ModuleOrBuilder.moduleLikeUserOrNull: bilibili.app.dynamic.v1.ModuleLikeUser?
  get() = if (hasModuleLikeUser()) getModuleLikeUser() else null

public val bilibili.app.dynamic.v1.ModuleOrBuilder.moduleUpListOrNull: bilibili.app.dynamic.v1.ModuleDynUpList?
  get() = if (hasModuleUpList()) getModuleUpList() else null

public val bilibili.app.dynamic.v1.ModuleOrBuilder.moduleFollowListOrNull: bilibili.app.dynamic.v1.ModuleFollowList?
  get() = if (hasModuleFollowList()) getModuleFollowList() else null

