// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v1/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v1;

@kotlin.jvm.JvmName("-initializedynVideoReq")
public inline fun dynVideoReq(block: bilibili.app.dynamic.v1.DynVideoReqKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.DynVideoReq =
  bilibili.app.dynamic.v1.DynVideoReqKt.Dsl._create(bilibili.app.dynamic.v1.DynVideoReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态视频页-请求
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v1.DynVideoReq`
 */
public object DynVideoReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v1.DynVideoReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v1.DynVideoReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v1.DynVideoReq = _builder.build()

    /**
     * ```
     * 青少年模式
     * ```
     *
     * `int32 teenagers_mode = 1;`
     */
    public var teenagersMode: kotlin.Int
      @JvmName("getTeenagersMode")
      get() = _builder.getTeenagersMode()
      @JvmName("setTeenagersMode")
      set(value) {
        _builder.setTeenagersMode(value)
      }
    /**
     * ```
     * 青少年模式
     * ```
     *
     * `int32 teenagers_mode = 1;`
     */
    public fun clearTeenagersMode() {
      _builder.clearTeenagersMode()
    }

    /**
     * ```
     * 透传 update_baseline
     * ```
     *
     * `string update_baseline = 2;`
     */
    public var updateBaseline: kotlin.String
      @JvmName("getUpdateBaseline")
      get() = _builder.getUpdateBaseline()
      @JvmName("setUpdateBaseline")
      set(value) {
        _builder.setUpdateBaseline(value)
      }
    /**
     * ```
     * 透传 update_baseline
     * ```
     *
     * `string update_baseline = 2;`
     */
    public fun clearUpdateBaseline() {
      _builder.clearUpdateBaseline()
    }

    /**
     * ```
     * 透传 history_offset
     * ```
     *
     * `string offset = 3;`
     */
    public var offset: kotlin.String
      @JvmName("getOffset")
      get() = _builder.getOffset()
      @JvmName("setOffset")
      set(value) {
        _builder.setOffset(value)
      }
    /**
     * ```
     * 透传 history_offset
     * ```
     *
     * `string offset = 3;`
     */
    public fun clearOffset() {
      _builder.clearOffset()
    }

    /**
     * ```
     * 向下翻页数
     * ```
     *
     * `int32 page = 4;`
     */
    public var page: kotlin.Int
      @JvmName("getPage")
      get() = _builder.getPage()
      @JvmName("setPage")
      set(value) {
        _builder.setPage(value)
      }
    /**
     * ```
     * 向下翻页数
     * ```
     *
     * `int32 page = 4;`
     */
    public fun clearPage() {
      _builder.clearPage()
    }

    /**
     * ```
     * 刷新方式
     * 1:向上刷新 2:向下翻页
     * ```
     *
     * `int32 refresh_type = 5;`
     */
    public var refreshType: kotlin.Int
      @JvmName("getRefreshType")
      get() = _builder.getRefreshType()
      @JvmName("setRefreshType")
      set(value) {
        _builder.setRefreshType(value)
      }
    /**
     * ```
     * 刷新方式
     * 1:向上刷新 2:向下翻页
     * ```
     *
     * `int32 refresh_type = 5;`
     */
    public fun clearRefreshType() {
      _builder.clearRefreshType()
    }

    /**
     * ```
     * 清晰度
     * ```
     *
     * `int32 qn = 6;`
     */
    public var qn: kotlin.Int
      @JvmName("getQn")
      get() = _builder.getQn()
      @JvmName("setQn")
      set(value) {
        _builder.setQn(value)
      }
    /**
     * ```
     * 清晰度
     * ```
     *
     * `int32 qn = 6;`
     */
    public fun clearQn() {
      _builder.clearQn()
    }

    /**
     * ```
     * 流版本
     * ```
     *
     * `int32 fnver = 7;`
     */
    public var fnver: kotlin.Int
      @JvmName("getFnver")
      get() = _builder.getFnver()
      @JvmName("setFnver")
      set(value) {
        _builder.setFnver(value)
      }
    /**
     * ```
     * 流版本
     * ```
     *
     * `int32 fnver = 7;`
     */
    public fun clearFnver() {
      _builder.clearFnver()
    }

    /**
     * ```
     * 流类型
     * ```
     *
     * `int32 fnval = 8;`
     */
    public var fnval: kotlin.Int
      @JvmName("getFnval")
      get() = _builder.getFnval()
      @JvmName("setFnval")
      set(value) {
        _builder.setFnval(value)
      }
    /**
     * ```
     * 流类型
     * ```
     *
     * `int32 fnval = 8;`
     */
    public fun clearFnval() {
      _builder.clearFnval()
    }

    /**
     * ```
     * 是否强制使用域名
     * ```
     *
     * `int32 force_host = 9;`
     */
    public var forceHost: kotlin.Int
      @JvmName("getForceHost")
      get() = _builder.getForceHost()
      @JvmName("setForceHost")
      set(value) {
        _builder.setForceHost(value)
      }
    /**
     * ```
     * 是否强制使用域名
     * ```
     *
     * `int32 force_host = 9;`
     */
    public fun clearForceHost() {
      _builder.clearForceHost()
    }

    /**
     * ```
     * 是否4K
     * ```
     *
     * `int32 fourk = 10;`
     */
    public var fourk: kotlin.Int
      @JvmName("getFourk")
      get() = _builder.getFourk()
      @JvmName("setFourk")
      set(value) {
        _builder.setFourk(value)
      }
    /**
     * ```
     * 是否4K
     * ```
     *
     * `int32 fourk = 10;`
     */
    public fun clearFourk() {
      _builder.clearFourk()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v1.DynVideoReq.copy(block: `bilibili.app.dynamic.v1`.DynVideoReqKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.DynVideoReq =
  `bilibili.app.dynamic.v1`.DynVideoReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

