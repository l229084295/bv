// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v1/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v1;

@kotlin.jvm.JvmName("-initializedynOurCitySwitchReq")
public inline fun dynOurCitySwitchReq(block: bilibili.app.dynamic.v1.DynOurCitySwitchReqKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.DynOurCitySwitchReq =
  bilibili.app.dynamic.v1.DynOurCitySwitchReqKt.Dsl._create(bilibili.app.dynamic.v1.DynOurCitySwitchReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态同城开关-请求
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v1.DynOurCitySwitchReq`
 */
public object DynOurCitySwitchReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v1.DynOurCitySwitchReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v1.DynOurCitySwitchReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v1.DynOurCitySwitchReq = _builder.build()

    /**
     * ```
     * 开关参数
     * 0:关闭 1:开启
     * ```
     *
     * `int32 switch = 1;`
     */
    public var switch: kotlin.Int
      @JvmName("getSwitch")
      get() = _builder.getSwitch()
      @JvmName("setSwitch")
      set(value) {
        _builder.setSwitch(value)
      }
    /**
     * ```
     * 开关参数
     * 0:关闭 1:开启
     * ```
     *
     * `int32 switch = 1;`
     */
    public fun clearSwitch() {
      _builder.clearSwitch()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v1.DynOurCitySwitchReq.copy(block: `bilibili.app.dynamic.v1`.DynOurCitySwitchReqKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.DynOurCitySwitchReq =
  `bilibili.app.dynamic.v1`.DynOurCitySwitchReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

