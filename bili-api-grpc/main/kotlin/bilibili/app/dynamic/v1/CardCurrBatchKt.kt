// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v1/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v1;

@kotlin.jvm.JvmName("-initializecardCurrBatch")
public inline fun cardCurrBatch(block: bilibili.app.dynamic.v1.CardCurrBatchKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.CardCurrBatch =
  bilibili.app.dynamic.v1.CardCurrBatchKt.Dsl._create(bilibili.app.dynamic.v1.CardCurrBatch.newBuilder()).apply { block() }._build()
/**
 * ```
 * 付费课程批次卡
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v1.CardCurrBatch`
 */
public object CardCurrBatchKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v1.CardCurrBatch.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v1.CardCurrBatch.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v1.CardCurrBatch = _builder.build()

    /**
     * ```
     * 标题
     * ```
     *
     * `string title = 1;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * 标题
     * ```
     *
     * `string title = 1;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * 封面图
     * ```
     *
     * `string cover = 2;`
     */
    public var cover: kotlin.String
      @JvmName("getCover")
      get() = _builder.getCover()
      @JvmName("setCover")
      set(value) {
        _builder.setCover(value)
      }
    /**
     * ```
     * 封面图
     * ```
     *
     * `string cover = 2;`
     */
    public fun clearCover() {
      _builder.clearCover()
    }

    /**
     * ```
     * 跳转地址
     * ```
     *
     * `string uri = 3;`
     */
    public var uri: kotlin.String
      @JvmName("getUri")
      get() = _builder.getUri()
      @JvmName("setUri")
      set(value) {
        _builder.setUri(value)
      }
    /**
     * ```
     * 跳转地址
     * ```
     *
     * `string uri = 3;`
     */
    public fun clearUri() {
      _builder.clearUri()
    }

    /**
     * ```
     * 展示项 1(本集标题)
     * ```
     *
     * `string text_1 = 4;`
     */
    public var text1: kotlin.String
      @JvmName("getText1")
      get() = _builder.getText1()
      @JvmName("setText1")
      set(value) {
        _builder.setText1(value)
      }
    /**
     * ```
     * 展示项 1(本集标题)
     * ```
     *
     * `string text_1 = 4;`
     */
    public fun clearText1() {
      _builder.clearText1()
    }

    /**
     * ```
     * 展示项 2(更新了多少个视频)
     * ```
     *
     * `string text_2 = 5;`
     */
    public var text2: kotlin.String
      @JvmName("getText2")
      get() = _builder.getText2()
      @JvmName("setText2")
      set(value) {
        _builder.setText2(value)
      }
    /**
     * ```
     * 展示项 2(更新了多少个视频)
     * ```
     *
     * `string text_2 = 5;`
     */
    public fun clearText2() {
      _builder.clearText2()
    }

    /**
     * ```
     * 角标
     * ```
     *
     * `.bilibili.app.dynamic.v1.VideoBadge badge = 6;`
     */
    public var badge: bilibili.app.dynamic.v1.VideoBadge
      @JvmName("getBadge")
      get() = _builder.getBadge()
      @JvmName("setBadge")
      set(value) {
        _builder.setBadge(value)
      }
    /**
     * ```
     * 角标
     * ```
     *
     * `.bilibili.app.dynamic.v1.VideoBadge badge = 6;`
     */
    public fun clearBadge() {
      _builder.clearBadge()
    }
    /**
     * ```
     * 角标
     * ```
     *
     * `.bilibili.app.dynamic.v1.VideoBadge badge = 6;`
     * @return Whether the badge field is set.
     */
    public fun hasBadge(): kotlin.Boolean {
      return _builder.hasBadge()
    }
    public val CardCurrBatchKt.Dsl.badgeOrNull: bilibili.app.dynamic.v1.VideoBadge?
      get() = _builder.badgeOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v1.CardCurrBatch.copy(block: `bilibili.app.dynamic.v1`.CardCurrBatchKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.CardCurrBatch =
  `bilibili.app.dynamic.v1`.CardCurrBatchKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v1.CardCurrBatchOrBuilder.badgeOrNull: bilibili.app.dynamic.v1.VideoBadge?
  get() = if (hasBadge()) getBadge() else null

