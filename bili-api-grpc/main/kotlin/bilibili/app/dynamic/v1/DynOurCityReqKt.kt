// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v1/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v1;

@kotlin.jvm.JvmName("-initializedynOurCityReq")
public inline fun dynOurCityReq(block: bilibili.app.dynamic.v1.DynOurCityReqKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.DynOurCityReq =
  bilibili.app.dynamic.v1.DynOurCityReqKt.Dsl._create(bilibili.app.dynamic.v1.DynOurCityReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态同城页-请求
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v1.DynOurCityReq`
 */
public object DynOurCityReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v1.DynOurCityReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v1.DynOurCityReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v1.DynOurCityReq = _builder.build()

    /**
     * ```
     * 城市ID
     * ```
     *
     * `int64 city_id = 1;`
     */
    public var cityId: kotlin.Long
      @JvmName("getCityId")
      get() = _builder.getCityId()
      @JvmName("setCityId")
      set(value) {
        _builder.setCityId(value)
      }
    /**
     * ```
     * 城市ID
     * ```
     *
     * `int64 city_id = 1;`
     */
    public fun clearCityId() {
      _builder.clearCityId()
    }

    /**
     * ```
     * 纬度
     * ```
     *
     * `double lat = 2;`
     */
    public var lat: kotlin.Double
      @JvmName("getLat")
      get() = _builder.getLat()
      @JvmName("setLat")
      set(value) {
        _builder.setLat(value)
      }
    /**
     * ```
     * 纬度
     * ```
     *
     * `double lat = 2;`
     */
    public fun clearLat() {
      _builder.clearLat()
    }

    /**
     * ```
     * 经度
     * ```
     *
     * `double lng = 3;`
     */
    public var lng: kotlin.Double
      @JvmName("getLng")
      get() = _builder.getLng()
      @JvmName("setLng")
      set(value) {
        _builder.setLng(value)
      }
    /**
     * ```
     * 经度
     * ```
     *
     * `double lng = 3;`
     */
    public fun clearLng() {
      _builder.clearLng()
    }

    /**
     * ```
     * 透传上一次接口请求返回的offset
     * ```
     *
     * `string offset = 4;`
     */
    public var offset: kotlin.String
      @JvmName("getOffset")
      get() = _builder.getOffset()
      @JvmName("setOffset")
      set(value) {
        _builder.setOffset(value)
      }
    /**
     * ```
     * 透传上一次接口请求返回的offset
     * ```
     *
     * `string offset = 4;`
     */
    public fun clearOffset() {
      _builder.clearOffset()
    }

    /**
     * ```
     * 每页元素个数
     * ```
     *
     * `int32 page_size = 5;`
     */
    public var pageSize: kotlin.Int
      @JvmName("getPageSize")
      get() = _builder.getPageSize()
      @JvmName("setPageSize")
      set(value) {
        _builder.setPageSize(value)
      }
    /**
     * ```
     * 每页元素个数
     * ```
     *
     * `int32 page_size = 5;`
     */
    public fun clearPageSize() {
      _builder.clearPageSize()
    }

    /**
     * ```
     * 青少年模式
     * 1:开启青少年模式
     * ```
     *
     * `int32 teenagers_mode = 6;`
     */
    public var teenagersMode: kotlin.Int
      @JvmName("getTeenagersMode")
      get() = _builder.getTeenagersMode()
      @JvmName("setTeenagersMode")
      set(value) {
        _builder.setTeenagersMode(value)
      }
    /**
     * ```
     * 青少年模式
     * 1:开启青少年模式
     * ```
     *
     * `int32 teenagers_mode = 6;`
     */
    public fun clearTeenagersMode() {
      _builder.clearTeenagersMode()
    }

    /**
     * ```
     * 清晰度(旧版)
     * ```
     *
     * `int32 qn = 7;`
     */
    public var qn: kotlin.Int
      @JvmName("getQn")
      get() = _builder.getQn()
      @JvmName("setQn")
      set(value) {
        _builder.setQn(value)
      }
    /**
     * ```
     * 清晰度(旧版)
     * ```
     *
     * `int32 qn = 7;`
     */
    public fun clearQn() {
      _builder.clearQn()
    }

    /**
     * ```
     * 流版本(旧版)
     * ```
     *
     * `int32 fnver = 8;`
     */
    public var fnver: kotlin.Int
      @JvmName("getFnver")
      get() = _builder.getFnver()
      @JvmName("setFnver")
      set(value) {
        _builder.setFnver(value)
      }
    /**
     * ```
     * 流版本(旧版)
     * ```
     *
     * `int32 fnver = 8;`
     */
    public fun clearFnver() {
      _builder.clearFnver()
    }

    /**
     * ```
     * 流类型(旧版)
     * ```
     *
     * `int32 fnval = 9;`
     */
    public var fnval: kotlin.Int
      @JvmName("getFnval")
      get() = _builder.getFnval()
      @JvmName("setFnval")
      set(value) {
        _builder.setFnval(value)
      }
    /**
     * ```
     * 流类型(旧版)
     * ```
     *
     * `int32 fnval = 9;`
     */
    public fun clearFnval() {
      _builder.clearFnval()
    }

    /**
     * ```
     * 是否强制使用域名(旧版)
     * ```
     *
     * `int32 force_host = 10;`
     */
    public var forceHost: kotlin.Int
      @JvmName("getForceHost")
      get() = _builder.getForceHost()
      @JvmName("setForceHost")
      set(value) {
        _builder.setForceHost(value)
      }
    /**
     * ```
     * 是否强制使用域名(旧版)
     * ```
     *
     * `int32 force_host = 10;`
     */
    public fun clearForceHost() {
      _builder.clearForceHost()
    }

    /**
     * ```
     * 是否4k(旧版)
     * ```
     *
     * `int32 fourk = 11;`
     */
    public var fourk: kotlin.Int
      @JvmName("getFourk")
      get() = _builder.getFourk()
      @JvmName("setFourk")
      set(value) {
        _builder.setFourk(value)
      }
    /**
     * ```
     * 是否4k(旧版)
     * ```
     *
     * `int32 fourk = 11;`
     */
    public fun clearFourk() {
      _builder.clearFourk()
    }

    /**
     * ```
     * 是否开启lbs
     * 0:关闭 1:开启
     * ```
     *
     * `int32 lbs_state = 12;`
     */
    public var lbsState: kotlin.Int
      @JvmName("getLbsState")
      get() = _builder.getLbsState()
      @JvmName("setLbsState")
      set(value) {
        _builder.setLbsState(value)
      }
    /**
     * ```
     * 是否开启lbs
     * 0:关闭 1:开启
     * ```
     *
     * `int32 lbs_state = 12;`
     */
    public fun clearLbsState() {
      _builder.clearLbsState()
    }

    /**
     * ```
     * 是否刷新城市
     * ```
     *
     * `uint32 refresh_city = 13;`
     */
    public var refreshCity: kotlin.Int
      @JvmName("getRefreshCity")
      get() = _builder.getRefreshCity()
      @JvmName("setRefreshCity")
      set(value) {
        _builder.setRefreshCity(value)
      }
    /**
     * ```
     * 是否刷新城市
     * ```
     *
     * `uint32 refresh_city = 13;`
     */
    public fun clearRefreshCity() {
      _builder.clearRefreshCity()
    }

    /**
     * ```
     * 魔镜设置
     * ```
     *
     * `.bilibili.app.dynamic.v1.ExpConf exp_conf = 14;`
     */
    public var expConf: bilibili.app.dynamic.v1.ExpConf
      @JvmName("getExpConf")
      get() = _builder.getExpConf()
      @JvmName("setExpConf")
      set(value) {
        _builder.setExpConf(value)
      }
    /**
     * ```
     * 魔镜设置
     * ```
     *
     * `.bilibili.app.dynamic.v1.ExpConf exp_conf = 14;`
     */
    public fun clearExpConf() {
      _builder.clearExpConf()
    }
    /**
     * ```
     * 魔镜设置
     * ```
     *
     * `.bilibili.app.dynamic.v1.ExpConf exp_conf = 14;`
     * @return Whether the expConf field is set.
     */
    public fun hasExpConf(): kotlin.Boolean {
      return _builder.hasExpConf()
    }
    public val DynOurCityReqKt.Dsl.expConfOrNull: bilibili.app.dynamic.v1.ExpConf?
      get() = _builder.expConfOrNull

    /**
     * ```
     * 秒开参数
     * ```
     *
     * `.bilibili.app.archive.middleware.v1.PlayerArgs player_args = 15;`
     */
    public var playerArgs: bilibili.app.archive.middleware.v1.PlayerArgs
      @JvmName("getPlayerArgs")
      get() = _builder.getPlayerArgs()
      @JvmName("setPlayerArgs")
      set(value) {
        _builder.setPlayerArgs(value)
      }
    /**
     * ```
     * 秒开参数
     * ```
     *
     * `.bilibili.app.archive.middleware.v1.PlayerArgs player_args = 15;`
     */
    public fun clearPlayerArgs() {
      _builder.clearPlayerArgs()
    }
    /**
     * ```
     * 秒开参数
     * ```
     *
     * `.bilibili.app.archive.middleware.v1.PlayerArgs player_args = 15;`
     * @return Whether the playerArgs field is set.
     */
    public fun hasPlayerArgs(): kotlin.Boolean {
      return _builder.hasPlayerArgs()
    }
    public val DynOurCityReqKt.Dsl.playerArgsOrNull: bilibili.app.archive.middleware.v1.PlayerArgs?
      get() = _builder.playerArgsOrNull

    /**
     * ```
     * 城市码
     * ```
     *
     * `int64 city_code = 16;`
     */
    public var cityCode: kotlin.Long
      @JvmName("getCityCode")
      get() = _builder.getCityCode()
      @JvmName("setCityCode")
      set(value) {
        _builder.setCityCode(value)
      }
    /**
     * ```
     * 城市码
     * ```
     *
     * `int64 city_code = 16;`
     */
    public fun clearCityCode() {
      _builder.clearCityCode()
    }

    /**
     * ```
     * 构建时间
     * ```
     *
     * `int64 build_time = 17;`
     */
    public var buildTime: kotlin.Long
      @JvmName("getBuildTime")
      get() = _builder.getBuildTime()
      @JvmName("setBuildTime")
      set(value) {
        _builder.setBuildTime(value)
      }
    /**
     * ```
     * 构建时间
     * ```
     *
     * `int64 build_time = 17;`
     */
    public fun clearBuildTime() {
      _builder.clearBuildTime()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v1.DynOurCityReq.copy(block: `bilibili.app.dynamic.v1`.DynOurCityReqKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.DynOurCityReq =
  `bilibili.app.dynamic.v1`.DynOurCityReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v1.DynOurCityReqOrBuilder.expConfOrNull: bilibili.app.dynamic.v1.ExpConf?
  get() = if (hasExpConf()) getExpConf() else null

public val bilibili.app.dynamic.v1.DynOurCityReqOrBuilder.playerArgsOrNull: bilibili.app.archive.middleware.v1.PlayerArgs?
  get() = if (hasPlayerArgs()) getPlayerArgs() else null

