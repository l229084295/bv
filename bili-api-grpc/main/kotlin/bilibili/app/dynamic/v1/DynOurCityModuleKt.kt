// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v1/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v1;

@kotlin.jvm.JvmName("-initializedynOurCityModule")
public inline fun dynOurCityModule(block: bilibili.app.dynamic.v1.DynOurCityModuleKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.DynOurCityModule =
  bilibili.app.dynamic.v1.DynOurCityModuleKt.Dsl._create(bilibili.app.dynamic.v1.DynOurCityModule.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态同城物料模块
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v1.DynOurCityModule`
 */
public object DynOurCityModuleKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v1.DynOurCityModule.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v1.DynOurCityModule.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v1.DynOurCityModule = _builder.build()

    /**
     * ```
     * 类型
     * cover:封面 desc:描述 author:发布人 extend:扩展部分
     * ```
     *
     * `string module_type = 1;`
     */
    public var moduleType: kotlin.String
      @JvmName("getModuleType")
      get() = _builder.getModuleType()
      @JvmName("setModuleType")
      set(value) {
        _builder.setModuleType(value)
      }
    /**
     * ```
     * 类型
     * cover:封面 desc:描述 author:发布人 extend:扩展部分
     * ```
     *
     * `string module_type = 1;`
     */
    public fun clearModuleType() {
      _builder.clearModuleType()
    }

    /**
     * ```
     * 封面
     * ```
     *
     * `.bilibili.app.dynamic.v1.DynOurCityModuleCover module_cover = 2;`
     */
    public var moduleCover: bilibili.app.dynamic.v1.DynOurCityModuleCover
      @JvmName("getModuleCover")
      get() = _builder.getModuleCover()
      @JvmName("setModuleCover")
      set(value) {
        _builder.setModuleCover(value)
      }
    /**
     * ```
     * 封面
     * ```
     *
     * `.bilibili.app.dynamic.v1.DynOurCityModuleCover module_cover = 2;`
     */
    public fun clearModuleCover() {
      _builder.clearModuleCover()
    }
    /**
     * ```
     * 封面
     * ```
     *
     * `.bilibili.app.dynamic.v1.DynOurCityModuleCover module_cover = 2;`
     * @return Whether the moduleCover field is set.
     */
    public fun hasModuleCover(): kotlin.Boolean {
      return _builder.hasModuleCover()
    }

    /**
     * ```
     * 描述
     * ```
     *
     * `.bilibili.app.dynamic.v1.DynOurCityModuleDesc module_desc = 3;`
     */
    public var moduleDesc: bilibili.app.dynamic.v1.DynOurCityModuleDesc
      @JvmName("getModuleDesc")
      get() = _builder.getModuleDesc()
      @JvmName("setModuleDesc")
      set(value) {
        _builder.setModuleDesc(value)
      }
    /**
     * ```
     * 描述
     * ```
     *
     * `.bilibili.app.dynamic.v1.DynOurCityModuleDesc module_desc = 3;`
     */
    public fun clearModuleDesc() {
      _builder.clearModuleDesc()
    }
    /**
     * ```
     * 描述
     * ```
     *
     * `.bilibili.app.dynamic.v1.DynOurCityModuleDesc module_desc = 3;`
     * @return Whether the moduleDesc field is set.
     */
    public fun hasModuleDesc(): kotlin.Boolean {
      return _builder.hasModuleDesc()
    }

    /**
     * ```
     * 发布人
     * ```
     *
     * `.bilibili.app.dynamic.v1.DynOurCityModuleAuthor module_author = 4;`
     */
    public var moduleAuthor: bilibili.app.dynamic.v1.DynOurCityModuleAuthor
      @JvmName("getModuleAuthor")
      get() = _builder.getModuleAuthor()
      @JvmName("setModuleAuthor")
      set(value) {
        _builder.setModuleAuthor(value)
      }
    /**
     * ```
     * 发布人
     * ```
     *
     * `.bilibili.app.dynamic.v1.DynOurCityModuleAuthor module_author = 4;`
     */
    public fun clearModuleAuthor() {
      _builder.clearModuleAuthor()
    }
    /**
     * ```
     * 发布人
     * ```
     *
     * `.bilibili.app.dynamic.v1.DynOurCityModuleAuthor module_author = 4;`
     * @return Whether the moduleAuthor field is set.
     */
    public fun hasModuleAuthor(): kotlin.Boolean {
      return _builder.hasModuleAuthor()
    }

    /**
     * ```
     * 扩展部分
     * ```
     *
     * `.bilibili.app.dynamic.v1.DynOurCityModuleExtend module_extend = 5;`
     */
    public var moduleExtend: bilibili.app.dynamic.v1.DynOurCityModuleExtend
      @JvmName("getModuleExtend")
      get() = _builder.getModuleExtend()
      @JvmName("setModuleExtend")
      set(value) {
        _builder.setModuleExtend(value)
      }
    /**
     * ```
     * 扩展部分
     * ```
     *
     * `.bilibili.app.dynamic.v1.DynOurCityModuleExtend module_extend = 5;`
     */
    public fun clearModuleExtend() {
      _builder.clearModuleExtend()
    }
    /**
     * ```
     * 扩展部分
     * ```
     *
     * `.bilibili.app.dynamic.v1.DynOurCityModuleExtend module_extend = 5;`
     * @return Whether the moduleExtend field is set.
     */
    public fun hasModuleExtend(): kotlin.Boolean {
      return _builder.hasModuleExtend()
    }
    public val moduleItemCase: bilibili.app.dynamic.v1.DynOurCityModule.ModuleItemCase
      @JvmName("getModuleItemCase")
      get() = _builder.getModuleItemCase()

    public fun clearModuleItem() {
      _builder.clearModuleItem()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v1.DynOurCityModule.copy(block: `bilibili.app.dynamic.v1`.DynOurCityModuleKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.DynOurCityModule =
  `bilibili.app.dynamic.v1`.DynOurCityModuleKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v1.DynOurCityModuleOrBuilder.moduleCoverOrNull: bilibili.app.dynamic.v1.DynOurCityModuleCover?
  get() = if (hasModuleCover()) getModuleCover() else null

public val bilibili.app.dynamic.v1.DynOurCityModuleOrBuilder.moduleDescOrNull: bilibili.app.dynamic.v1.DynOurCityModuleDesc?
  get() = if (hasModuleDesc()) getModuleDesc() else null

public val bilibili.app.dynamic.v1.DynOurCityModuleOrBuilder.moduleAuthorOrNull: bilibili.app.dynamic.v1.DynOurCityModuleAuthor?
  get() = if (hasModuleAuthor()) getModuleAuthor() else null

public val bilibili.app.dynamic.v1.DynOurCityModuleOrBuilder.moduleExtendOrNull: bilibili.app.dynamic.v1.DynOurCityModuleExtend?
  get() = if (hasModuleExtend()) getModuleExtend() else null

