// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v1/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v1;

@kotlin.jvm.JvmName("-initializedynTab")
public inline fun dynTab(block: bilibili.app.dynamic.v1.DynTabKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.DynTab =
  bilibili.app.dynamic.v1.DynTabKt.Dsl._create(bilibili.app.dynamic.v1.DynTab.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态tab详情
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v1.DynTab`
 */
public object DynTabKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v1.DynTab.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v1.DynTab.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v1.DynTab = _builder.build()

    /**
     * ```
     * tab标题 优先展示用,未开启状态第一次请求返回同城,后续请求返回对应城市名
     * ```
     *
     * `string title = 1;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * tab标题 优先展示用,未开启状态第一次请求返回同城,后续请求返回对应城市名
     * ```
     *
     * `string title = 1;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * 跳转链接
     * ```
     *
     * `string uri = 2;`
     */
    public var uri: kotlin.String
      @JvmName("getUri")
      get() = _builder.getUri()
      @JvmName("setUri")
      set(value) {
        _builder.setUri(value)
      }
    /**
     * ```
     * 跳转链接
     * ```
     *
     * `string uri = 2;`
     */
    public fun clearUri() {
      _builder.clearUri()
    }

    /**
     * ```
     * 气泡内容
     * ```
     *
     * `string bubble = 3;`
     */
    public var bubble: kotlin.String
      @JvmName("getBubble")
      get() = _builder.getBubble()
      @JvmName("setBubble")
      set(value) {
        _builder.setBubble(value)
      }
    /**
     * ```
     * 气泡内容
     * ```
     *
     * `string bubble = 3;`
     */
    public fun clearBubble() {
      _builder.clearBubble()
    }

    /**
     * ```
     * 是否推红点
     * ```
     *
     * `int32 red_point = 4;`
     */
    public var redPoint: kotlin.Int
      @JvmName("getRedPoint")
      get() = _builder.getRedPoint()
      @JvmName("setRedPoint")
      set(value) {
        _builder.setRedPoint(value)
      }
    /**
     * ```
     * 是否推红点
     * ```
     *
     * `int32 red_point = 4;`
     */
    public fun clearRedPoint() {
      _builder.clearRedPoint()
    }

    /**
     * ```
     * 城市ID
     * ```
     *
     * `int64 city_id = 5;`
     */
    public var cityId: kotlin.Long
      @JvmName("getCityId")
      get() = _builder.getCityId()
      @JvmName("setCityId")
      set(value) {
        _builder.setCityId(value)
      }
    /**
     * ```
     * 城市ID
     * ```
     *
     * `int64 city_id = 5;`
     */
    public fun clearCityId() {
      _builder.clearCityId()
    }

    /**
     * ```
     * 是否弹窗
     * ```
     *
     * `int32 is_popup = 6;`
     */
    public var isPopup: kotlin.Int
      @JvmName("getIsPopup")
      get() = _builder.getIsPopup()
      @JvmName("setIsPopup")
      set(value) {
        _builder.setIsPopup(value)
      }
    /**
     * ```
     * 是否弹窗
     * ```
     *
     * `int32 is_popup = 6;`
     */
    public fun clearIsPopup() {
      _builder.clearIsPopup()
    }

    /**
     * ```
     * 弹窗内容
     * ```
     *
     * `.bilibili.app.dynamic.v1.Popup popup = 7;`
     */
    public var popup: bilibili.app.dynamic.v1.Popup
      @JvmName("getPopup")
      get() = _builder.getPopup()
      @JvmName("setPopup")
      set(value) {
        _builder.setPopup(value)
      }
    /**
     * ```
     * 弹窗内容
     * ```
     *
     * `.bilibili.app.dynamic.v1.Popup popup = 7;`
     */
    public fun clearPopup() {
      _builder.clearPopup()
    }
    /**
     * ```
     * 弹窗内容
     * ```
     *
     * `.bilibili.app.dynamic.v1.Popup popup = 7;`
     * @return Whether the popup field is set.
     */
    public fun hasPopup(): kotlin.Boolean {
      return _builder.hasPopup()
    }
    public val DynTabKt.Dsl.popupOrNull: bilibili.app.dynamic.v1.Popup?
      get() = _builder.popupOrNull

    /**
     * ```
     * 是否默认tab
     * ```
     *
     * `bool defaultTab = 8;`
     */
    public var defaultTab: kotlin.Boolean
      @JvmName("getDefaultTab")
      get() = _builder.getDefaultTab()
      @JvmName("setDefaultTab")
      set(value) {
        _builder.setDefaultTab(value)
      }
    /**
     * ```
     * 是否默认tab
     * ```
     *
     * `bool defaultTab = 8;`
     */
    public fun clearDefaultTab() {
      _builder.clearDefaultTab()
    }

    /**
     * ```
     * 副标题 对应城市名
     * ```
     *
     * `string sub_title = 9;`
     */
    public var subTitle: kotlin.String
      @JvmName("getSubTitle")
      get() = _builder.getSubTitle()
      @JvmName("setSubTitle")
      set(value) {
        _builder.setSubTitle(value)
      }
    /**
     * ```
     * 副标题 对应城市名
     * ```
     *
     * `string sub_title = 9;`
     */
    public fun clearSubTitle() {
      _builder.clearSubTitle()
    }

    /**
     * ```
     * 锚点字段
     * ```
     *
     * `string anchor = 10;`
     */
    public var anchor: kotlin.String
      @JvmName("getAnchor")
      get() = _builder.getAnchor()
      @JvmName("setAnchor")
      set(value) {
        _builder.setAnchor(value)
      }
    /**
     * ```
     * 锚点字段
     * ```
     *
     * `string anchor = 10;`
     */
    public fun clearAnchor() {
      _builder.clearAnchor()
    }

    /**
     * ```
     * 内测文案
     * ```
     *
     * `string internal_test = 11;`
     */
    public var internalTest: kotlin.String
      @JvmName("getInternalTest")
      get() = _builder.getInternalTest()
      @JvmName("setInternalTest")
      set(value) {
        _builder.setInternalTest(value)
      }
    /**
     * ```
     * 内测文案
     * ```
     *
     * `string internal_test = 11;`
     */
    public fun clearInternalTest() {
      _builder.clearInternalTest()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v1.DynTab.copy(block: `bilibili.app.dynamic.v1`.DynTabKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.DynTab =
  `bilibili.app.dynamic.v1`.DynTabKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v1.DynTabOrBuilder.popupOrNull: bilibili.app.dynamic.v1.Popup?
  get() = if (hasPopup()) getPopup() else null

