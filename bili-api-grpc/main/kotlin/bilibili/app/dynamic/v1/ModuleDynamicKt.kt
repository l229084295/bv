// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v1/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v1;

@kotlin.jvm.JvmName("-initializemoduleDynamic")
public inline fun moduleDynamic(block: bilibili.app.dynamic.v1.ModuleDynamicKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.ModuleDynamic =
  bilibili.app.dynamic.v1.ModuleDynamicKt.Dsl._create(bilibili.app.dynamic.v1.ModuleDynamic.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态详情模块
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v1.ModuleDynamic`
 */
public object ModuleDynamicKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v1.ModuleDynamic.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v1.ModuleDynamic.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v1.ModuleDynamic = _builder.build()

    /**
     * ```
     * 卡片类型 
     * ugc:ugc卡 pgc:pgc卡 currSeason:付费课程系列 currBatch:付费课程批次
     * ```
     *
     * `string card_type = 1;`
     */
    public var cardType: kotlin.String
      @JvmName("getCardType")
      get() = _builder.getCardType()
      @JvmName("setCardType")
      set(value) {
        _builder.setCardType(value)
      }
    /**
     * ```
     * 卡片类型 
     * ugc:ugc卡 pgc:pgc卡 currSeason:付费课程系列 currBatch:付费课程批次
     * ```
     *
     * `string card_type = 1;`
     */
    public fun clearCardType() {
      _builder.clearCardType()
    }

    /**
     * ```
     * ugc卡
     * ```
     *
     * `.bilibili.app.dynamic.v1.CardUGC card_ugc = 2;`
     */
    public var cardUgc: bilibili.app.dynamic.v1.CardUGC
      @JvmName("getCardUgc")
      get() = _builder.getCardUgc()
      @JvmName("setCardUgc")
      set(value) {
        _builder.setCardUgc(value)
      }
    /**
     * ```
     * ugc卡
     * ```
     *
     * `.bilibili.app.dynamic.v1.CardUGC card_ugc = 2;`
     */
    public fun clearCardUgc() {
      _builder.clearCardUgc()
    }
    /**
     * ```
     * ugc卡
     * ```
     *
     * `.bilibili.app.dynamic.v1.CardUGC card_ugc = 2;`
     * @return Whether the cardUgc field is set.
     */
    public fun hasCardUgc(): kotlin.Boolean {
      return _builder.hasCardUgc()
    }

    /**
     * ```
     * pgc卡
     * ```
     *
     * `.bilibili.app.dynamic.v1.CardPGC card_pgc = 3;`
     */
    public var cardPgc: bilibili.app.dynamic.v1.CardPGC
      @JvmName("getCardPgc")
      get() = _builder.getCardPgc()
      @JvmName("setCardPgc")
      set(value) {
        _builder.setCardPgc(value)
      }
    /**
     * ```
     * pgc卡
     * ```
     *
     * `.bilibili.app.dynamic.v1.CardPGC card_pgc = 3;`
     */
    public fun clearCardPgc() {
      _builder.clearCardPgc()
    }
    /**
     * ```
     * pgc卡
     * ```
     *
     * `.bilibili.app.dynamic.v1.CardPGC card_pgc = 3;`
     * @return Whether the cardPgc field is set.
     */
    public fun hasCardPgc(): kotlin.Boolean {
      return _builder.hasCardPgc()
    }

    /**
     * ```
     * 付费课程系列
     * ```
     *
     * `.bilibili.app.dynamic.v1.CardCurrSeason card_curr_season = 4;`
     */
    public var cardCurrSeason: bilibili.app.dynamic.v1.CardCurrSeason
      @JvmName("getCardCurrSeason")
      get() = _builder.getCardCurrSeason()
      @JvmName("setCardCurrSeason")
      set(value) {
        _builder.setCardCurrSeason(value)
      }
    /**
     * ```
     * 付费课程系列
     * ```
     *
     * `.bilibili.app.dynamic.v1.CardCurrSeason card_curr_season = 4;`
     */
    public fun clearCardCurrSeason() {
      _builder.clearCardCurrSeason()
    }
    /**
     * ```
     * 付费课程系列
     * ```
     *
     * `.bilibili.app.dynamic.v1.CardCurrSeason card_curr_season = 4;`
     * @return Whether the cardCurrSeason field is set.
     */
    public fun hasCardCurrSeason(): kotlin.Boolean {
      return _builder.hasCardCurrSeason()
    }

    /**
     * ```
     * 付费课程批次
     * ```
     *
     * `.bilibili.app.dynamic.v1.CardCurrBatch card_curr_batch = 5;`
     */
    public var cardCurrBatch: bilibili.app.dynamic.v1.CardCurrBatch
      @JvmName("getCardCurrBatch")
      get() = _builder.getCardCurrBatch()
      @JvmName("setCardCurrBatch")
      set(value) {
        _builder.setCardCurrBatch(value)
      }
    /**
     * ```
     * 付费课程批次
     * ```
     *
     * `.bilibili.app.dynamic.v1.CardCurrBatch card_curr_batch = 5;`
     */
    public fun clearCardCurrBatch() {
      _builder.clearCardCurrBatch()
    }
    /**
     * ```
     * 付费课程批次
     * ```
     *
     * `.bilibili.app.dynamic.v1.CardCurrBatch card_curr_batch = 5;`
     * @return Whether the cardCurrBatch field is set.
     */
    public fun hasCardCurrBatch(): kotlin.Boolean {
      return _builder.hasCardCurrBatch()
    }
    public val cardCase: bilibili.app.dynamic.v1.ModuleDynamic.CardCase
      @JvmName("getCardCase")
      get() = _builder.getCardCase()

    public fun clearCard() {
      _builder.clearCard()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v1.ModuleDynamic.copy(block: `bilibili.app.dynamic.v1`.ModuleDynamicKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.ModuleDynamic =
  `bilibili.app.dynamic.v1`.ModuleDynamicKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v1.ModuleDynamicOrBuilder.cardUgcOrNull: bilibili.app.dynamic.v1.CardUGC?
  get() = if (hasCardUgc()) getCardUgc() else null

public val bilibili.app.dynamic.v1.ModuleDynamicOrBuilder.cardPgcOrNull: bilibili.app.dynamic.v1.CardPGC?
  get() = if (hasCardPgc()) getCardPgc() else null

public val bilibili.app.dynamic.v1.ModuleDynamicOrBuilder.cardCurrSeasonOrNull: bilibili.app.dynamic.v1.CardCurrSeason?
  get() = if (hasCardCurrSeason()) getCardCurrSeason() else null

public val bilibili.app.dynamic.v1.ModuleDynamicOrBuilder.cardCurrBatchOrNull: bilibili.app.dynamic.v1.CardCurrBatch?
  get() = if (hasCardCurrBatch()) getCardCurrBatch() else null

