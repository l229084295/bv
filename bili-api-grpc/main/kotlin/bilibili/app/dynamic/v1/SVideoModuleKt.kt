// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/dynamic/v1/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.dynamic.v1;

@kotlin.jvm.JvmName("-initializesVideoModule")
public inline fun sVideoModule(block: bilibili.app.dynamic.v1.SVideoModuleKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.SVideoModule =
  bilibili.app.dynamic.v1.SVideoModuleKt.Dsl._create(bilibili.app.dynamic.v1.SVideoModule.newBuilder()).apply { block() }._build()
/**
 * ```
 * 小视频模块
 * ```
 *
 * Protobuf type `bilibili.app.dynamic.v1.SVideoModule`
 */
public object SVideoModuleKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.dynamic.v1.SVideoModule.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.dynamic.v1.SVideoModule.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.dynamic.v1.SVideoModule = _builder.build()

    /**
     * ```
     * 类型
     * author:发布人 player:播放器内容 desc:描述信息 stat:计数信息
     * ```
     *
     * `string module_type = 1;`
     */
    public var moduleType: kotlin.String
      @JvmName("getModuleType")
      get() = _builder.getModuleType()
      @JvmName("setModuleType")
      set(value) {
        _builder.setModuleType(value)
      }
    /**
     * ```
     * 类型
     * author:发布人 player:播放器内容 desc:描述信息 stat:计数信息
     * ```
     *
     * `string module_type = 1;`
     */
    public fun clearModuleType() {
      _builder.clearModuleType()
    }

    /**
     * ```
     * 发布人
     * ```
     *
     * `.bilibili.app.dynamic.v1.SVideoModuleAuthor module_author = 2;`
     */
    public var moduleAuthor: bilibili.app.dynamic.v1.SVideoModuleAuthor
      @JvmName("getModuleAuthor")
      get() = _builder.getModuleAuthor()
      @JvmName("setModuleAuthor")
      set(value) {
        _builder.setModuleAuthor(value)
      }
    /**
     * ```
     * 发布人
     * ```
     *
     * `.bilibili.app.dynamic.v1.SVideoModuleAuthor module_author = 2;`
     */
    public fun clearModuleAuthor() {
      _builder.clearModuleAuthor()
    }
    /**
     * ```
     * 发布人
     * ```
     *
     * `.bilibili.app.dynamic.v1.SVideoModuleAuthor module_author = 2;`
     * @return Whether the moduleAuthor field is set.
     */
    public fun hasModuleAuthor(): kotlin.Boolean {
      return _builder.hasModuleAuthor()
    }

    /**
     * ```
     * 播放器内容
     * ```
     *
     * `.bilibili.app.dynamic.v1.SVideoModulePlayer module_player = 3;`
     */
    public var modulePlayer: bilibili.app.dynamic.v1.SVideoModulePlayer
      @JvmName("getModulePlayer")
      get() = _builder.getModulePlayer()
      @JvmName("setModulePlayer")
      set(value) {
        _builder.setModulePlayer(value)
      }
    /**
     * ```
     * 播放器内容
     * ```
     *
     * `.bilibili.app.dynamic.v1.SVideoModulePlayer module_player = 3;`
     */
    public fun clearModulePlayer() {
      _builder.clearModulePlayer()
    }
    /**
     * ```
     * 播放器内容
     * ```
     *
     * `.bilibili.app.dynamic.v1.SVideoModulePlayer module_player = 3;`
     * @return Whether the modulePlayer field is set.
     */
    public fun hasModulePlayer(): kotlin.Boolean {
      return _builder.hasModulePlayer()
    }

    /**
     * ```
     * 描述信息
     * ```
     *
     * `.bilibili.app.dynamic.v1.SVideoModuleDesc module_desc = 4;`
     */
    public var moduleDesc: bilibili.app.dynamic.v1.SVideoModuleDesc
      @JvmName("getModuleDesc")
      get() = _builder.getModuleDesc()
      @JvmName("setModuleDesc")
      set(value) {
        _builder.setModuleDesc(value)
      }
    /**
     * ```
     * 描述信息
     * ```
     *
     * `.bilibili.app.dynamic.v1.SVideoModuleDesc module_desc = 4;`
     */
    public fun clearModuleDesc() {
      _builder.clearModuleDesc()
    }
    /**
     * ```
     * 描述信息
     * ```
     *
     * `.bilibili.app.dynamic.v1.SVideoModuleDesc module_desc = 4;`
     * @return Whether the moduleDesc field is set.
     */
    public fun hasModuleDesc(): kotlin.Boolean {
      return _builder.hasModuleDesc()
    }

    /**
     * ```
     * 计数信息
     * ```
     *
     * `.bilibili.app.dynamic.v1.SVideoModuleStat module_stat = 5;`
     */
    public var moduleStat: bilibili.app.dynamic.v1.SVideoModuleStat
      @JvmName("getModuleStat")
      get() = _builder.getModuleStat()
      @JvmName("setModuleStat")
      set(value) {
        _builder.setModuleStat(value)
      }
    /**
     * ```
     * 计数信息
     * ```
     *
     * `.bilibili.app.dynamic.v1.SVideoModuleStat module_stat = 5;`
     */
    public fun clearModuleStat() {
      _builder.clearModuleStat()
    }
    /**
     * ```
     * 计数信息
     * ```
     *
     * `.bilibili.app.dynamic.v1.SVideoModuleStat module_stat = 5;`
     * @return Whether the moduleStat field is set.
     */
    public fun hasModuleStat(): kotlin.Boolean {
      return _builder.hasModuleStat()
    }
    public val moduleItemCase: bilibili.app.dynamic.v1.SVideoModule.ModuleItemCase
      @JvmName("getModuleItemCase")
      get() = _builder.getModuleItemCase()

    public fun clearModuleItem() {
      _builder.clearModuleItem()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.dynamic.v1.SVideoModule.copy(block: `bilibili.app.dynamic.v1`.SVideoModuleKt.Dsl.() -> kotlin.Unit): bilibili.app.dynamic.v1.SVideoModule =
  `bilibili.app.dynamic.v1`.SVideoModuleKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.dynamic.v1.SVideoModuleOrBuilder.moduleAuthorOrNull: bilibili.app.dynamic.v1.SVideoModuleAuthor?
  get() = if (hasModuleAuthor()) getModuleAuthor() else null

public val bilibili.app.dynamic.v1.SVideoModuleOrBuilder.modulePlayerOrNull: bilibili.app.dynamic.v1.SVideoModulePlayer?
  get() = if (hasModulePlayer()) getModulePlayer() else null

public val bilibili.app.dynamic.v1.SVideoModuleOrBuilder.moduleDescOrNull: bilibili.app.dynamic.v1.SVideoModuleDesc?
  get() = if (hasModuleDesc()) getModuleDesc() else null

public val bilibili.app.dynamic.v1.SVideoModuleOrBuilder.moduleStatOrNull: bilibili.app.dynamic.v1.SVideoModuleStat?
  get() = if (hasModuleStat()) getModuleStat() else null

