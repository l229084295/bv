// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/playurl/v1/playurl.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.playurl.v1;

@kotlin.jvm.JvmName("-initializestream")
public inline fun stream(block: bilibili.app.playurl.v1.StreamKt.Dsl.() -> kotlin.Unit): bilibili.app.playurl.v1.Stream =
  bilibili.app.playurl.v1.StreamKt.Dsl._create(bilibili.app.playurl.v1.Stream.newBuilder()).apply { block() }._build()
/**
 * ```
 * 视频流信息
 * ```
 *
 * Protobuf type `bilibili.app.playurl.v1.Stream`
 */
public object StreamKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.playurl.v1.Stream.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.playurl.v1.Stream.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.playurl.v1.Stream = _builder.build()

    /**
     * ```
     * 元数据
     * ```
     *
     * `.bilibili.app.playurl.v1.StreamInfo stream_info = 1;`
     */
    public var streamInfo: bilibili.app.playurl.v1.StreamInfo
      @JvmName("getStreamInfo")
      get() = _builder.getStreamInfo()
      @JvmName("setStreamInfo")
      set(value) {
        _builder.setStreamInfo(value)
      }
    /**
     * ```
     * 元数据
     * ```
     *
     * `.bilibili.app.playurl.v1.StreamInfo stream_info = 1;`
     */
    public fun clearStreamInfo() {
      _builder.clearStreamInfo()
    }
    /**
     * ```
     * 元数据
     * ```
     *
     * `.bilibili.app.playurl.v1.StreamInfo stream_info = 1;`
     * @return Whether the streamInfo field is set.
     */
    public fun hasStreamInfo(): kotlin.Boolean {
      return _builder.hasStreamInfo()
    }
    public val StreamKt.Dsl.streamInfoOrNull: bilibili.app.playurl.v1.StreamInfo?
      get() = _builder.streamInfoOrNull

    /**
     * ```
     * dash流
     * ```
     *
     * `.bilibili.app.playurl.v1.DashVideo dash_video = 2;`
     */
    public var dashVideo: bilibili.app.playurl.v1.DashVideo
      @JvmName("getDashVideo")
      get() = _builder.getDashVideo()
      @JvmName("setDashVideo")
      set(value) {
        _builder.setDashVideo(value)
      }
    /**
     * ```
     * dash流
     * ```
     *
     * `.bilibili.app.playurl.v1.DashVideo dash_video = 2;`
     */
    public fun clearDashVideo() {
      _builder.clearDashVideo()
    }
    /**
     * ```
     * dash流
     * ```
     *
     * `.bilibili.app.playurl.v1.DashVideo dash_video = 2;`
     * @return Whether the dashVideo field is set.
     */
    public fun hasDashVideo(): kotlin.Boolean {
      return _builder.hasDashVideo()
    }

    /**
     * ```
     * 分段流
     * ```
     *
     * `.bilibili.app.playurl.v1.SegmentVideo segment_video = 3;`
     */
    public var segmentVideo: bilibili.app.playurl.v1.SegmentVideo
      @JvmName("getSegmentVideo")
      get() = _builder.getSegmentVideo()
      @JvmName("setSegmentVideo")
      set(value) {
        _builder.setSegmentVideo(value)
      }
    /**
     * ```
     * 分段流
     * ```
     *
     * `.bilibili.app.playurl.v1.SegmentVideo segment_video = 3;`
     */
    public fun clearSegmentVideo() {
      _builder.clearSegmentVideo()
    }
    /**
     * ```
     * 分段流
     * ```
     *
     * `.bilibili.app.playurl.v1.SegmentVideo segment_video = 3;`
     * @return Whether the segmentVideo field is set.
     */
    public fun hasSegmentVideo(): kotlin.Boolean {
      return _builder.hasSegmentVideo()
    }
    public val contentCase: bilibili.app.playurl.v1.Stream.ContentCase
      @JvmName("getContentCase")
      get() = _builder.getContentCase()

    public fun clearContent() {
      _builder.clearContent()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.playurl.v1.Stream.copy(block: `bilibili.app.playurl.v1`.StreamKt.Dsl.() -> kotlin.Unit): bilibili.app.playurl.v1.Stream =
  `bilibili.app.playurl.v1`.StreamKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.playurl.v1.StreamOrBuilder.streamInfoOrNull: bilibili.app.playurl.v1.StreamInfo?
  get() = if (hasStreamInfo()) getStreamInfo() else null

public val bilibili.app.playurl.v1.StreamOrBuilder.dashVideoOrNull: bilibili.app.playurl.v1.DashVideo?
  get() = if (hasDashVideo()) getDashVideo() else null

public val bilibili.app.playurl.v1.StreamOrBuilder.segmentVideoOrNull: bilibili.app.playurl.v1.SegmentVideo?
  get() = if (hasSegmentVideo()) getSegmentVideo() else null

