// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/playurl/v1/playurl.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.playurl.v1;

@kotlin.jvm.JvmName("-initializevolumeInfo")
public inline fun volumeInfo(block: bilibili.app.playurl.v1.VolumeInfoKt.Dsl.() -> kotlin.Unit): bilibili.app.playurl.v1.VolumeInfo =
  bilibili.app.playurl.v1.VolumeInfoKt.Dsl._create(bilibili.app.playurl.v1.VolumeInfo.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.playurl.v1.VolumeInfo`
 */
public object VolumeInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.playurl.v1.VolumeInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.playurl.v1.VolumeInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.playurl.v1.VolumeInfo = _builder.build()

    /**
     * ```
     * ```
     *
     * `double measured_i = 1;`
     */
    public var measuredI: kotlin.Double
      @JvmName("getMeasuredI")
      get() = _builder.getMeasuredI()
      @JvmName("setMeasuredI")
      set(value) {
        _builder.setMeasuredI(value)
      }
    /**
     * ```
     * ```
     *
     * `double measured_i = 1;`
     */
    public fun clearMeasuredI() {
      _builder.clearMeasuredI()
    }

    /**
     * ```
     * ```
     *
     * `double measured_lra = 2;`
     */
    public var measuredLra: kotlin.Double
      @JvmName("getMeasuredLra")
      get() = _builder.getMeasuredLra()
      @JvmName("setMeasuredLra")
      set(value) {
        _builder.setMeasuredLra(value)
      }
    /**
     * ```
     * ```
     *
     * `double measured_lra = 2;`
     */
    public fun clearMeasuredLra() {
      _builder.clearMeasuredLra()
    }

    /**
     * ```
     * ```
     *
     * `double measured_tp = 3;`
     */
    public var measuredTp: kotlin.Double
      @JvmName("getMeasuredTp")
      get() = _builder.getMeasuredTp()
      @JvmName("setMeasuredTp")
      set(value) {
        _builder.setMeasuredTp(value)
      }
    /**
     * ```
     * ```
     *
     * `double measured_tp = 3;`
     */
    public fun clearMeasuredTp() {
      _builder.clearMeasuredTp()
    }

    /**
     * ```
     * ```
     *
     * `double measured_threshold = 4;`
     */
    public var measuredThreshold: kotlin.Double
      @JvmName("getMeasuredThreshold")
      get() = _builder.getMeasuredThreshold()
      @JvmName("setMeasuredThreshold")
      set(value) {
        _builder.setMeasuredThreshold(value)
      }
    /**
     * ```
     * ```
     *
     * `double measured_threshold = 4;`
     */
    public fun clearMeasuredThreshold() {
      _builder.clearMeasuredThreshold()
    }

    /**
     * ```
     * ```
     *
     * `double target_offset = 5;`
     */
    public var targetOffset: kotlin.Double
      @JvmName("getTargetOffset")
      get() = _builder.getTargetOffset()
      @JvmName("setTargetOffset")
      set(value) {
        _builder.setTargetOffset(value)
      }
    /**
     * ```
     * ```
     *
     * `double target_offset = 5;`
     */
    public fun clearTargetOffset() {
      _builder.clearTargetOffset()
    }

    /**
     * ```
     * ```
     *
     * `double target_i = 6;`
     */
    public var targetI: kotlin.Double
      @JvmName("getTargetI")
      get() = _builder.getTargetI()
      @JvmName("setTargetI")
      set(value) {
        _builder.setTargetI(value)
      }
    /**
     * ```
     * ```
     *
     * `double target_i = 6;`
     */
    public fun clearTargetI() {
      _builder.clearTargetI()
    }

    /**
     * ```
     * ```
     *
     * `double target_tp = 7;`
     */
    public var targetTp: kotlin.Double
      @JvmName("getTargetTp")
      get() = _builder.getTargetTp()
      @JvmName("setTargetTp")
      set(value) {
        _builder.setTargetTp(value)
      }
    /**
     * ```
     * ```
     *
     * `double target_tp = 7;`
     */
    public fun clearTargetTp() {
      _builder.clearTargetTp()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.playurl.v1.VolumeInfo.copy(block: `bilibili.app.playurl.v1`.VolumeInfoKt.Dsl.() -> kotlin.Unit): bilibili.app.playurl.v1.VolumeInfo =
  `bilibili.app.playurl.v1`.VolumeInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

