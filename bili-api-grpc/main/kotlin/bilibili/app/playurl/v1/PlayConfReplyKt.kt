// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/playurl/v1/playurl.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.playurl.v1;

@kotlin.jvm.JvmName("-initializeplayConfReply")
public inline fun playConfReply(block: bilibili.app.playurl.v1.PlayConfReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.playurl.v1.PlayConfReply =
  bilibili.app.playurl.v1.PlayConfReplyKt.Dsl._create(bilibili.app.playurl.v1.PlayConfReply.newBuilder()).apply { block() }._build()
/**
 * ```
 * 获取播放界面配置-响应
 * ```
 *
 * Protobuf type `bilibili.app.playurl.v1.PlayConfReply`
 */
public object PlayConfReplyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.playurl.v1.PlayConfReply.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.playurl.v1.PlayConfReply.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.playurl.v1.PlayConfReply = _builder.build()

    /**
     * ```
     * 播放控件用户自定义配置
     * ```
     *
     * `.bilibili.app.playurl.v1.PlayAbilityConf play_conf = 1;`
     */
    public var playConf: bilibili.app.playurl.v1.PlayAbilityConf
      @JvmName("getPlayConf")
      get() = _builder.getPlayConf()
      @JvmName("setPlayConf")
      set(value) {
        _builder.setPlayConf(value)
      }
    /**
     * ```
     * 播放控件用户自定义配置
     * ```
     *
     * `.bilibili.app.playurl.v1.PlayAbilityConf play_conf = 1;`
     */
    public fun clearPlayConf() {
      _builder.clearPlayConf()
    }
    /**
     * ```
     * 播放控件用户自定义配置
     * ```
     *
     * `.bilibili.app.playurl.v1.PlayAbilityConf play_conf = 1;`
     * @return Whether the playConf field is set.
     */
    public fun hasPlayConf(): kotlin.Boolean {
      return _builder.hasPlayConf()
    }
    public val PlayConfReplyKt.Dsl.playConfOrNull: bilibili.app.playurl.v1.PlayAbilityConf?
      get() = _builder.playConfOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.playurl.v1.PlayConfReply.copy(block: `bilibili.app.playurl.v1`.PlayConfReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.playurl.v1.PlayConfReply =
  `bilibili.app.playurl.v1`.PlayConfReplyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.playurl.v1.PlayConfReplyOrBuilder.playConfOrNull: bilibili.app.playurl.v1.PlayAbilityConf?
  get() = if (hasPlayConf()) getPlayConf() else null

