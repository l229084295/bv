// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/playurl/v1/playurl.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.playurl.v1;

@kotlin.jvm.JvmName("-initializearcConf")
public inline fun arcConf(block: bilibili.app.playurl.v1.ArcConfKt.Dsl.() -> kotlin.Unit): bilibili.app.playurl.v1.ArcConf =
  bilibili.app.playurl.v1.ArcConfKt.Dsl._create(bilibili.app.playurl.v1.ArcConf.newBuilder()).apply { block() }._build()
/**
 * ```
 * 配置项
 * ```
 *
 * Protobuf type `bilibili.app.playurl.v1.ArcConf`
 */
public object ArcConfKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.playurl.v1.ArcConf.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.playurl.v1.ArcConf.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.playurl.v1.ArcConf = _builder.build()

    /**
     * ```
     * 是否支持
     * ```
     *
     * `bool is_support = 1;`
     */
    public var isSupport: kotlin.Boolean
      @JvmName("getIsSupport")
      get() = _builder.getIsSupport()
      @JvmName("setIsSupport")
      set(value) {
        _builder.setIsSupport(value)
      }
    /**
     * ```
     * 是否支持
     * ```
     *
     * `bool is_support = 1;`
     */
    public fun clearIsSupport() {
      _builder.clearIsSupport()
    }

    /**
     * ```
     * ```
     *
     * `bool disabled = 2;`
     */
    public var disabled: kotlin.Boolean
      @JvmName("getDisabled")
      get() = _builder.getDisabled()
      @JvmName("setDisabled")
      set(value) {
        _builder.setDisabled(value)
      }
    /**
     * ```
     * ```
     *
     * `bool disabled = 2;`
     */
    public fun clearDisabled() {
      _builder.clearDisabled()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.playurl.v1.ExtraContent extra_content = 3;`
     */
    public var extraContent: bilibili.app.playurl.v1.ExtraContent
      @JvmName("getExtraContent")
      get() = _builder.getExtraContent()
      @JvmName("setExtraContent")
      set(value) {
        _builder.setExtraContent(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.playurl.v1.ExtraContent extra_content = 3;`
     */
    public fun clearExtraContent() {
      _builder.clearExtraContent()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.playurl.v1.ExtraContent extra_content = 3;`
     * @return Whether the extraContent field is set.
     */
    public fun hasExtraContent(): kotlin.Boolean {
      return _builder.hasExtraContent()
    }
    public val ArcConfKt.Dsl.extraContentOrNull: bilibili.app.playurl.v1.ExtraContent?
      get() = _builder.extraContentOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.playurl.v1.ArcConf.copy(block: `bilibili.app.playurl.v1`.ArcConfKt.Dsl.() -> kotlin.Unit): bilibili.app.playurl.v1.ArcConf =
  `bilibili.app.playurl.v1`.ArcConfKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.playurl.v1.ArcConfOrBuilder.extraContentOrNull: bilibili.app.playurl.v1.ExtraContent?
  get() = if (hasExtraContent()) getExtraContent() else null

