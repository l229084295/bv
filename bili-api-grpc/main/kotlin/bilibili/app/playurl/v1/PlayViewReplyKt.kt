// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/playurl/v1/playurl.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.playurl.v1;

@kotlin.jvm.JvmName("-initializeplayViewReply")
public inline fun playViewReply(block: bilibili.app.playurl.v1.PlayViewReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.playurl.v1.PlayViewReply =
  bilibili.app.playurl.v1.PlayViewReplyKt.Dsl._create(bilibili.app.playurl.v1.PlayViewReply.newBuilder()).apply { block() }._build()
/**
 * ```
 * 播放页信息-回复
 * ```
 *
 * Protobuf type `bilibili.app.playurl.v1.PlayViewReply`
 */
public object PlayViewReplyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.playurl.v1.PlayViewReply.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.playurl.v1.PlayViewReply.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.playurl.v1.PlayViewReply = _builder.build()

    /**
     * ```
     * 视频流信息
     * ```
     *
     * `.bilibili.app.playurl.v1.VideoInfo video_info = 1;`
     */
    public var videoInfo: bilibili.app.playurl.v1.VideoInfo
      @JvmName("getVideoInfo")
      get() = _builder.getVideoInfo()
      @JvmName("setVideoInfo")
      set(value) {
        _builder.setVideoInfo(value)
      }
    /**
     * ```
     * 视频流信息
     * ```
     *
     * `.bilibili.app.playurl.v1.VideoInfo video_info = 1;`
     */
    public fun clearVideoInfo() {
      _builder.clearVideoInfo()
    }
    /**
     * ```
     * 视频流信息
     * ```
     *
     * `.bilibili.app.playurl.v1.VideoInfo video_info = 1;`
     * @return Whether the videoInfo field is set.
     */
    public fun hasVideoInfo(): kotlin.Boolean {
      return _builder.hasVideoInfo()
    }
    public val PlayViewReplyKt.Dsl.videoInfoOrNull: bilibili.app.playurl.v1.VideoInfo?
      get() = _builder.videoInfoOrNull

    /**
     * ```
     * 播放控件用户自定义配置
     * ```
     *
     * `.bilibili.app.playurl.v1.PlayAbilityConf play_conf = 2;`
     */
    public var playConf: bilibili.app.playurl.v1.PlayAbilityConf
      @JvmName("getPlayConf")
      get() = _builder.getPlayConf()
      @JvmName("setPlayConf")
      set(value) {
        _builder.setPlayConf(value)
      }
    /**
     * ```
     * 播放控件用户自定义配置
     * ```
     *
     * `.bilibili.app.playurl.v1.PlayAbilityConf play_conf = 2;`
     */
    public fun clearPlayConf() {
      _builder.clearPlayConf()
    }
    /**
     * ```
     * 播放控件用户自定义配置
     * ```
     *
     * `.bilibili.app.playurl.v1.PlayAbilityConf play_conf = 2;`
     * @return Whether the playConf field is set.
     */
    public fun hasPlayConf(): kotlin.Boolean {
      return _builder.hasPlayConf()
    }
    public val PlayViewReplyKt.Dsl.playConfOrNull: bilibili.app.playurl.v1.PlayAbilityConf?
      get() = _builder.playConfOrNull

    /**
     * ```
     * 互动视频升级提示
     * ```
     *
     * `.bilibili.app.playurl.v1.UpgradeLimit upgrade_limit = 3;`
     */
    public var upgradeLimit: bilibili.app.playurl.v1.UpgradeLimit
      @JvmName("getUpgradeLimit")
      get() = _builder.getUpgradeLimit()
      @JvmName("setUpgradeLimit")
      set(value) {
        _builder.setUpgradeLimit(value)
      }
    /**
     * ```
     * 互动视频升级提示
     * ```
     *
     * `.bilibili.app.playurl.v1.UpgradeLimit upgrade_limit = 3;`
     */
    public fun clearUpgradeLimit() {
      _builder.clearUpgradeLimit()
    }
    /**
     * ```
     * 互动视频升级提示
     * ```
     *
     * `.bilibili.app.playurl.v1.UpgradeLimit upgrade_limit = 3;`
     * @return Whether the upgradeLimit field is set.
     */
    public fun hasUpgradeLimit(): kotlin.Boolean {
      return _builder.hasUpgradeLimit()
    }
    public val PlayViewReplyKt.Dsl.upgradeLimitOrNull: bilibili.app.playurl.v1.UpgradeLimit?
      get() = _builder.upgradeLimitOrNull

    /**
     * ```
     * Chronos灰度管理
     * ```
     *
     * `.bilibili.app.playurl.v1.Chronos chronos = 4;`
     */
    public var chronos: bilibili.app.playurl.v1.Chronos
      @JvmName("getChronos")
      get() = _builder.getChronos()
      @JvmName("setChronos")
      set(value) {
        _builder.setChronos(value)
      }
    /**
     * ```
     * Chronos灰度管理
     * ```
     *
     * `.bilibili.app.playurl.v1.Chronos chronos = 4;`
     */
    public fun clearChronos() {
      _builder.clearChronos()
    }
    /**
     * ```
     * Chronos灰度管理
     * ```
     *
     * `.bilibili.app.playurl.v1.Chronos chronos = 4;`
     * @return Whether the chronos field is set.
     */
    public fun hasChronos(): kotlin.Boolean {
      return _builder.hasChronos()
    }
    public val PlayViewReplyKt.Dsl.chronosOrNull: bilibili.app.playurl.v1.Chronos?
      get() = _builder.chronosOrNull

    /**
     * ```
     * 播放控件稿件配置
     * ```
     *
     * `.bilibili.app.playurl.v1.PlayArcConf play_arc = 5;`
     */
    public var playArc: bilibili.app.playurl.v1.PlayArcConf
      @JvmName("getPlayArc")
      get() = _builder.getPlayArc()
      @JvmName("setPlayArc")
      set(value) {
        _builder.setPlayArc(value)
      }
    /**
     * ```
     * 播放控件稿件配置
     * ```
     *
     * `.bilibili.app.playurl.v1.PlayArcConf play_arc = 5;`
     */
    public fun clearPlayArc() {
      _builder.clearPlayArc()
    }
    /**
     * ```
     * 播放控件稿件配置
     * ```
     *
     * `.bilibili.app.playurl.v1.PlayArcConf play_arc = 5;`
     * @return Whether the playArc field is set.
     */
    public fun hasPlayArc(): kotlin.Boolean {
      return _builder.hasPlayArc()
    }
    public val PlayViewReplyKt.Dsl.playArcOrNull: bilibili.app.playurl.v1.PlayArcConf?
      get() = _builder.playArcOrNull

    /**
     * ```
     * 事件
     * ```
     *
     * `.bilibili.app.playurl.v1.Event event = 6;`
     */
    public var event: bilibili.app.playurl.v1.Event
      @JvmName("getEvent")
      get() = _builder.getEvent()
      @JvmName("setEvent")
      set(value) {
        _builder.setEvent(value)
      }
    /**
     * ```
     * 事件
     * ```
     *
     * `.bilibili.app.playurl.v1.Event event = 6;`
     */
    public fun clearEvent() {
      _builder.clearEvent()
    }
    /**
     * ```
     * 事件
     * ```
     *
     * `.bilibili.app.playurl.v1.Event event = 6;`
     * @return Whether the event field is set.
     */
    public fun hasEvent(): kotlin.Boolean {
      return _builder.hasEvent()
    }
    public val PlayViewReplyKt.Dsl.eventOrNull: bilibili.app.playurl.v1.Event?
      get() = _builder.eventOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.playurl.v1.AB ab = 7;`
     */
    public var ab: bilibili.app.playurl.v1.AB
      @JvmName("getAb")
      get() = _builder.getAb()
      @JvmName("setAb")
      set(value) {
        _builder.setAb(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.playurl.v1.AB ab = 7;`
     */
    public fun clearAb() {
      _builder.clearAb()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.playurl.v1.AB ab = 7;`
     * @return Whether the ab field is set.
     */
    public fun hasAb(): kotlin.Boolean {
      return _builder.hasAb()
    }
    public val PlayViewReplyKt.Dsl.abOrNull: bilibili.app.playurl.v1.AB?
      get() = _builder.abOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.playurl.v1.PlayLimit play_limit = 8;`
     */
    public var playLimit: bilibili.app.playurl.v1.PlayLimit
      @JvmName("getPlayLimit")
      get() = _builder.getPlayLimit()
      @JvmName("setPlayLimit")
      set(value) {
        _builder.setPlayLimit(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.playurl.v1.PlayLimit play_limit = 8;`
     */
    public fun clearPlayLimit() {
      _builder.clearPlayLimit()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.playurl.v1.PlayLimit play_limit = 8;`
     * @return Whether the playLimit field is set.
     */
    public fun hasPlayLimit(): kotlin.Boolean {
      return _builder.hasPlayLimit()
    }
    public val PlayViewReplyKt.Dsl.playLimitOrNull: bilibili.app.playurl.v1.PlayLimit?
      get() = _builder.playLimitOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.playurl.v1.PlayViewReply.copy(block: `bilibili.app.playurl.v1`.PlayViewReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.playurl.v1.PlayViewReply =
  `bilibili.app.playurl.v1`.PlayViewReplyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.playurl.v1.PlayViewReplyOrBuilder.videoInfoOrNull: bilibili.app.playurl.v1.VideoInfo?
  get() = if (hasVideoInfo()) getVideoInfo() else null

public val bilibili.app.playurl.v1.PlayViewReplyOrBuilder.playConfOrNull: bilibili.app.playurl.v1.PlayAbilityConf?
  get() = if (hasPlayConf()) getPlayConf() else null

public val bilibili.app.playurl.v1.PlayViewReplyOrBuilder.upgradeLimitOrNull: bilibili.app.playurl.v1.UpgradeLimit?
  get() = if (hasUpgradeLimit()) getUpgradeLimit() else null

public val bilibili.app.playurl.v1.PlayViewReplyOrBuilder.chronosOrNull: bilibili.app.playurl.v1.Chronos?
  get() = if (hasChronos()) getChronos() else null

public val bilibili.app.playurl.v1.PlayViewReplyOrBuilder.playArcOrNull: bilibili.app.playurl.v1.PlayArcConf?
  get() = if (hasPlayArc()) getPlayArc() else null

public val bilibili.app.playurl.v1.PlayViewReplyOrBuilder.eventOrNull: bilibili.app.playurl.v1.Event?
  get() = if (hasEvent()) getEvent() else null

public val bilibili.app.playurl.v1.PlayViewReplyOrBuilder.abOrNull: bilibili.app.playurl.v1.AB?
  get() = if (hasAb()) getAb() else null

public val bilibili.app.playurl.v1.PlayViewReplyOrBuilder.playLimitOrNull: bilibili.app.playurl.v1.PlayLimit?
  get() = if (hasPlayLimit()) getPlayLimit() else null

