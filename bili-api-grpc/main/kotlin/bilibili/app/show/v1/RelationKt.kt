// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/show/rank/v1/rank.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.show.v1;

@kotlin.jvm.JvmName("-initializerelation")
public inline fun relation(block: bilibili.app.show.v1.RelationKt.Dsl.() -> kotlin.Unit): bilibili.app.show.v1.Relation =
  bilibili.app.show.v1.RelationKt.Dsl._create(bilibili.app.show.v1.Relation.newBuilder()).apply { block() }._build()
/**
 * ```
 * 关系信息
 * ```
 *
 * Protobuf type `bilibili.app.show.v1.Relation`
 */
public object RelationKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.show.v1.Relation.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.show.v1.Relation.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.show.v1.Relation = _builder.build()

    /**
     * ```
     * 关系状态id
     * 1:未关注 2:已关注 3:被关注 4:互相关注
     * ```
     *
     * `int32 status = 1;`
     */
    public var status: kotlin.Int
      @JvmName("getStatus")
      get() = _builder.getStatus()
      @JvmName("setStatus")
      set(value) {
        _builder.setStatus(value)
      }
    /**
     * ```
     * 关系状态id
     * 1:未关注 2:已关注 3:被关注 4:互相关注
     * ```
     *
     * `int32 status = 1;`
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }

    /**
     * ```
     * 是否关注
     * ```
     *
     * `int32 is_follow = 2;`
     */
    public var isFollow: kotlin.Int
      @JvmName("getIsFollow")
      get() = _builder.getIsFollow()
      @JvmName("setIsFollow")
      set(value) {
        _builder.setIsFollow(value)
      }
    /**
     * ```
     * 是否关注
     * ```
     *
     * `int32 is_follow = 2;`
     */
    public fun clearIsFollow() {
      _builder.clearIsFollow()
    }

    /**
     * ```
     * 是否粉丝
     * ```
     *
     * `int32 is_followed = 3;`
     */
    public var isFollowed: kotlin.Int
      @JvmName("getIsFollowed")
      get() = _builder.getIsFollowed()
      @JvmName("setIsFollowed")
      set(value) {
        _builder.setIsFollowed(value)
      }
    /**
     * ```
     * 是否粉丝
     * ```
     *
     * `int32 is_followed = 3;`
     */
    public fun clearIsFollowed() {
      _builder.clearIsFollowed()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.show.v1.Relation.copy(block: `bilibili.app.show.v1`.RelationKt.Dsl.() -> kotlin.Unit): bilibili.app.show.v1.Relation =
  `bilibili.app.show.v1`.RelationKt.Dsl._create(this.toBuilder()).apply { block() }._build()

