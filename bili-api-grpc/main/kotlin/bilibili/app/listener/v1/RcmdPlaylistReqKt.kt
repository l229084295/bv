// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/listener/v1/listener.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.listener.v1;

@kotlin.jvm.JvmName("-initializercmdPlaylistReq")
public inline fun rcmdPlaylistReq(block: bilibili.app.listener.v1.RcmdPlaylistReqKt.Dsl.() -> kotlin.Unit): bilibili.app.listener.v1.RcmdPlaylistReq =
  bilibili.app.listener.v1.RcmdPlaylistReqKt.Dsl._create(bilibili.app.listener.v1.RcmdPlaylistReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.listener.v1.RcmdPlaylistReq`
 */
public object RcmdPlaylistReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.listener.v1.RcmdPlaylistReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.listener.v1.RcmdPlaylistReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.listener.v1.RcmdPlaylistReq = _builder.build()

    /**
     * ```
     * ```
     *
     * `int32 from = 1;`
     */
    public var from: kotlin.Int
      @JvmName("getFrom")
      get() = _builder.getFrom()
      @JvmName("setFrom")
      set(value) {
        _builder.setFrom(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 from = 1;`
     */
    public fun clearFrom() {
      _builder.clearFrom()
    }

    /**
     * ```
     * ```
     *
     * `int64 id = 2;`
     */
    public var id: kotlin.Long
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 id = 2;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * ```
     * ```
     *
     * `bool need_history = 3;`
     */
    public var needHistory: kotlin.Boolean
      @JvmName("getNeedHistory")
      get() = _builder.getNeedHistory()
      @JvmName("setNeedHistory")
      set(value) {
        _builder.setNeedHistory(value)
      }
    /**
     * ```
     * ```
     *
     * `bool need_history = 3;`
     */
    public fun clearNeedHistory() {
      _builder.clearNeedHistory()
    }

    /**
     * ```
     * ```
     *
     * `bool need_top_cards = 4;`
     */
    public var needTopCards: kotlin.Boolean
      @JvmName("getNeedTopCards")
      get() = _builder.getNeedTopCards()
      @JvmName("setNeedTopCards")
      set(value) {
        _builder.setNeedTopCards(value)
      }
    /**
     * ```
     * ```
     *
     * `bool need_top_cards = 4;`
     */
    public fun clearNeedTopCards() {
      _builder.clearNeedTopCards()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.archive.middleware.v1.PlayerArgs player_args = 5;`
     */
    public var playerArgs: bilibili.app.archive.middleware.v1.PlayerArgs
      @JvmName("getPlayerArgs")
      get() = _builder.getPlayerArgs()
      @JvmName("setPlayerArgs")
      set(value) {
        _builder.setPlayerArgs(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.archive.middleware.v1.PlayerArgs player_args = 5;`
     */
    public fun clearPlayerArgs() {
      _builder.clearPlayerArgs()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.archive.middleware.v1.PlayerArgs player_args = 5;`
     * @return Whether the playerArgs field is set.
     */
    public fun hasPlayerArgs(): kotlin.Boolean {
      return _builder.hasPlayerArgs()
    }
    public val RcmdPlaylistReqKt.Dsl.playerArgsOrNull: bilibili.app.archive.middleware.v1.PlayerArgs?
      get() = _builder.playerArgsOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.listener.v1.RcmdPlaylistReq.copy(block: `bilibili.app.listener.v1`.RcmdPlaylistReqKt.Dsl.() -> kotlin.Unit): bilibili.app.listener.v1.RcmdPlaylistReq =
  `bilibili.app.listener.v1`.RcmdPlaylistReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.listener.v1.RcmdPlaylistReqOrBuilder.playerArgsOrNull: bilibili.app.archive.middleware.v1.PlayerArgs?
  get() = if (hasPlayerArgs()) getPlayerArgs() else null

