// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/listener/v1/listener.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.listener.v1;

@kotlin.jvm.JvmName("-initializeplayInfo")
public inline fun playInfo(block: bilibili.app.listener.v1.PlayInfoKt.Dsl.() -> kotlin.Unit): bilibili.app.listener.v1.PlayInfo =
  bilibili.app.listener.v1.PlayInfoKt.Dsl._create(bilibili.app.listener.v1.PlayInfo.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.listener.v1.PlayInfo`
 */
public object PlayInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.listener.v1.PlayInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.listener.v1.PlayInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.listener.v1.PlayInfo = _builder.build()

    /**
     * ```
     * ```
     *
     * `int32 qn = 1;`
     */
    public var qn: kotlin.Int
      @JvmName("getQn")
      get() = _builder.getQn()
      @JvmName("setQn")
      set(value) {
        _builder.setQn(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 qn = 1;`
     */
    public fun clearQn() {
      _builder.clearQn()
    }

    /**
     * ```
     * ```
     *
     * `string format = 2;`
     */
    public var format: kotlin.String
      @JvmName("getFormat")
      get() = _builder.getFormat()
      @JvmName("setFormat")
      set(value) {
        _builder.setFormat(value)
      }
    /**
     * ```
     * ```
     *
     * `string format = 2;`
     */
    public fun clearFormat() {
      _builder.clearFormat()
    }

    /**
     * ```
     * ```
     *
     * `int32 qn_type = 3;`
     */
    public var qnType: kotlin.Int
      @JvmName("getQnType")
      get() = _builder.getQnType()
      @JvmName("setQnType")
      set(value) {
        _builder.setQnType(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 qn_type = 3;`
     */
    public fun clearQnType() {
      _builder.clearQnType()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PlayURL play_url = 4;`
     */
    public var playUrl: bilibili.app.listener.v1.PlayURL
      @JvmName("getPlayUrl")
      get() = _builder.getPlayUrl()
      @JvmName("setPlayUrl")
      set(value) {
        _builder.setPlayUrl(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PlayURL play_url = 4;`
     */
    public fun clearPlayUrl() {
      _builder.clearPlayUrl()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PlayURL play_url = 4;`
     * @return Whether the playUrl field is set.
     */
    public fun hasPlayUrl(): kotlin.Boolean {
      return _builder.hasPlayUrl()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PlayDASH play_dash = 5;`
     */
    public var playDash: bilibili.app.listener.v1.PlayDASH
      @JvmName("getPlayDash")
      get() = _builder.getPlayDash()
      @JvmName("setPlayDash")
      set(value) {
        _builder.setPlayDash(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PlayDASH play_dash = 5;`
     */
    public fun clearPlayDash() {
      _builder.clearPlayDash()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PlayDASH play_dash = 5;`
     * @return Whether the playDash field is set.
     */
    public fun hasPlayDash(): kotlin.Boolean {
      return _builder.hasPlayDash()
    }

    /**
     * `int32 fnver = 6;`
     */
    public var fnver: kotlin.Int
      @JvmName("getFnver")
      get() = _builder.getFnver()
      @JvmName("setFnver")
      set(value) {
        _builder.setFnver(value)
      }
    /**
     * `int32 fnver = 6;`
     */
    public fun clearFnver() {
      _builder.clearFnver()
    }

    /**
     * ```
     * ```
     *
     * `int32 fnval = 7;`
     */
    public var fnval: kotlin.Int
      @JvmName("getFnval")
      get() = _builder.getFnval()
      @JvmName("setFnval")
      set(value) {
        _builder.setFnval(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 fnval = 7;`
     */
    public fun clearFnval() {
      _builder.clearFnval()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class FormatsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * ```
     *
     * `repeated int32 formats = 8;`
     */
     public val formats: com.google.protobuf.kotlin.DslList<kotlin.Int, FormatsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getFormatsList()
      )
    /**
     * ```
     * ```
     *
     * `repeated int32 formats = 8;`
     * @param value The formats to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addFormats")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, FormatsProxy>.add(value: kotlin.Int) {
      _builder.addFormats(value)
    }/**
     * ```
     * ```
     *
     * `repeated int32 formats = 8;`
     * @param value The formats to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignFormats")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, FormatsProxy>.plusAssign(value: kotlin.Int) {
      add(value)
    }/**
     * ```
     * ```
     *
     * `repeated int32 formats = 8;`
     * @param values The formats to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllFormats")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, FormatsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
      _builder.addAllFormats(values)
    }/**
     * ```
     * ```
     *
     * `repeated int32 formats = 8;`
     * @param values The formats to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllFormats")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, FormatsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
      addAll(values)
    }/**
     * ```
     * ```
     *
     * `repeated int32 formats = 8;`
     * @param index The index to set the value at.
     * @param value The formats to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setFormats")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, FormatsProxy>.set(index: kotlin.Int, value: kotlin.Int) {
      _builder.setFormats(index, value)
    }/**
     * ```
     * ```
     *
     * `repeated int32 formats = 8;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearFormats")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, FormatsProxy>.clear() {
      _builder.clearFormats()
    }
    /**
     * ```
     * ```
     *
     * `int32 video_codecid = 9;`
     */
    public var videoCodecid: kotlin.Int
      @JvmName("getVideoCodecid")
      get() = _builder.getVideoCodecid()
      @JvmName("setVideoCodecid")
      set(value) {
        _builder.setVideoCodecid(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 video_codecid = 9;`
     */
    public fun clearVideoCodecid() {
      _builder.clearVideoCodecid()
    }

    /**
     * ```
     * ```
     *
     * `int64 length = 10;`
     */
    public var length: kotlin.Long
      @JvmName("getLength")
      get() = _builder.getLength()
      @JvmName("setLength")
      set(value) {
        _builder.setLength(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 length = 10;`
     */
    public fun clearLength() {
      _builder.clearLength()
    }

    /**
     * ```
     * ```
     *
     * `int32 code = 11;`
     */
    public var code: kotlin.Int
      @JvmName("getCode")
      get() = _builder.getCode()
      @JvmName("setCode")
      set(value) {
        _builder.setCode(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 code = 11;`
     */
    public fun clearCode() {
      _builder.clearCode()
    }

    /**
     * ```
     * ```
     *
     * `string message = 12;`
     */
    public var message: kotlin.String
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * ```
     * ```
     *
     * `string message = 12;`
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }

    /**
     * ```
     * ```
     *
     * `int64 expire_time = 13;`
     */
    public var expireTime: kotlin.Long
      @JvmName("getExpireTime")
      get() = _builder.getExpireTime()
      @JvmName("setExpireTime")
      set(value) {
        _builder.setExpireTime(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 expire_time = 13;`
     */
    public fun clearExpireTime() {
      _builder.clearExpireTime()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.playurl.v1.VolumeInfo volume = 14;`
     */
    public var volume: bilibili.app.playurl.v1.VolumeInfo
      @JvmName("getVolume")
      get() = _builder.getVolume()
      @JvmName("setVolume")
      set(value) {
        _builder.setVolume(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.playurl.v1.VolumeInfo volume = 14;`
     */
    public fun clearVolume() {
      _builder.clearVolume()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.playurl.v1.VolumeInfo volume = 14;`
     * @return Whether the volume field is set.
     */
    public fun hasVolume(): kotlin.Boolean {
      return _builder.hasVolume()
    }
    public val PlayInfoKt.Dsl.volumeOrNull: bilibili.app.playurl.v1.VolumeInfo?
      get() = _builder.volumeOrNull
    public val infoCase: bilibili.app.listener.v1.PlayInfo.InfoCase
      @JvmName("getInfoCase")
      get() = _builder.getInfoCase()

    public fun clearInfo() {
      _builder.clearInfo()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.listener.v1.PlayInfo.copy(block: `bilibili.app.listener.v1`.PlayInfoKt.Dsl.() -> kotlin.Unit): bilibili.app.listener.v1.PlayInfo =
  `bilibili.app.listener.v1`.PlayInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.listener.v1.PlayInfoOrBuilder.playUrlOrNull: bilibili.app.listener.v1.PlayURL?
  get() = if (hasPlayUrl()) getPlayUrl() else null

public val bilibili.app.listener.v1.PlayInfoOrBuilder.playDashOrNull: bilibili.app.listener.v1.PlayDASH?
  get() = if (hasPlayDash()) getPlayDash() else null

public val bilibili.app.listener.v1.PlayInfoOrBuilder.volumeOrNull: bilibili.app.playurl.v1.VolumeInfo?
  get() = if (hasVolume()) getVolume() else null

