// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/listener/v1/listener.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.listener.v1;

@kotlin.jvm.JvmName("-initializefavItemAddReq")
public inline fun favItemAddReq(block: bilibili.app.listener.v1.FavItemAddReqKt.Dsl.() -> kotlin.Unit): bilibili.app.listener.v1.FavItemAddReq =
  bilibili.app.listener.v1.FavItemAddReqKt.Dsl._create(bilibili.app.listener.v1.FavItemAddReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.listener.v1.FavItemAddReq`
 */
public object FavItemAddReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.listener.v1.FavItemAddReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.listener.v1.FavItemAddReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.listener.v1.FavItemAddReq = _builder.build()

    /**
     * ```
     * ```
     *
     * `int64 fid = 1;`
     */
    public var fid: kotlin.Long
      @JvmName("getFid")
      get() = _builder.getFid()
      @JvmName("setFid")
      set(value) {
        _builder.setFid(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 fid = 1;`
     */
    public fun clearFid() {
      _builder.clearFid()
    }

    /**
     * ```
     * ```
     *
     * `int32 folder_type = 2;`
     */
    public var folderType: kotlin.Int
      @JvmName("getFolderType")
      get() = _builder.getFolderType()
      @JvmName("setFolderType")
      set(value) {
        _builder.setFolderType(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 folder_type = 2;`
     */
    public fun clearFolderType() {
      _builder.clearFolderType()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PlayItem play = 3;`
     */
    public var play: bilibili.app.listener.v1.PlayItem
      @JvmName("getPlay")
      get() = _builder.getPlay()
      @JvmName("setPlay")
      set(value) {
        _builder.setPlay(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PlayItem play = 3;`
     */
    public fun clearPlay() {
      _builder.clearPlay()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PlayItem play = 3;`
     * @return Whether the play field is set.
     */
    public fun hasPlay(): kotlin.Boolean {
      return _builder.hasPlay()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.FavItem fav = 4;`
     */
    public var fav: bilibili.app.listener.v1.FavItem
      @JvmName("getFav")
      get() = _builder.getFav()
      @JvmName("setFav")
      set(value) {
        _builder.setFav(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.FavItem fav = 4;`
     */
    public fun clearFav() {
      _builder.clearFav()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.FavItem fav = 4;`
     * @return Whether the fav field is set.
     */
    public fun hasFav(): kotlin.Boolean {
      return _builder.hasFav()
    }
    public val itemCase: bilibili.app.listener.v1.FavItemAddReq.ItemCase
      @JvmName("getItemCase")
      get() = _builder.getItemCase()

    public fun clearItem() {
      _builder.clearItem()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.listener.v1.FavItemAddReq.copy(block: `bilibili.app.listener.v1`.FavItemAddReqKt.Dsl.() -> kotlin.Unit): bilibili.app.listener.v1.FavItemAddReq =
  `bilibili.app.listener.v1`.FavItemAddReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.listener.v1.FavItemAddReqOrBuilder.playOrNull: bilibili.app.listener.v1.PlayItem?
  get() = if (hasPlay()) getPlay() else null

public val bilibili.app.listener.v1.FavItemAddReqOrBuilder.favOrNull: bilibili.app.listener.v1.FavItem?
  get() = if (hasFav()) getFav() else null

