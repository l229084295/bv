// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/listener/v1/listener.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.listener.v1;

@kotlin.jvm.JvmName("-initializecardModule")
public inline fun cardModule(block: bilibili.app.listener.v1.CardModuleKt.Dsl.() -> kotlin.Unit): bilibili.app.listener.v1.CardModule =
  bilibili.app.listener.v1.CardModuleKt.Dsl._create(bilibili.app.listener.v1.CardModule.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.listener.v1.CardModule`
 */
public object CardModuleKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.listener.v1.CardModule.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.listener.v1.CardModule.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.listener.v1.CardModule = _builder.build()

    /**
     * ```
     * ```
     *
     * `int32 module_type = 1;`
     */
    public var moduleType: kotlin.Int
      @JvmName("getModuleType")
      get() = _builder.getModuleType()
      @JvmName("setModuleType")
      set(value) {
        _builder.setModuleType(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 module_type = 1;`
     */
    public fun clearModuleType() {
      _builder.clearModuleType()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PkcmHeader module_header = 2;`
     */
    public var moduleHeader: bilibili.app.listener.v1.PkcmHeader
      @JvmName("getModuleHeader")
      get() = _builder.getModuleHeader()
      @JvmName("setModuleHeader")
      set(value) {
        _builder.setModuleHeader(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PkcmHeader module_header = 2;`
     */
    public fun clearModuleHeader() {
      _builder.clearModuleHeader()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PkcmHeader module_header = 2;`
     * @return Whether the moduleHeader field is set.
     */
    public fun hasModuleHeader(): kotlin.Boolean {
      return _builder.hasModuleHeader()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PkcmArchive module_archive = 3;`
     */
    public var moduleArchive: bilibili.app.listener.v1.PkcmArchive
      @JvmName("getModuleArchive")
      get() = _builder.getModuleArchive()
      @JvmName("setModuleArchive")
      set(value) {
        _builder.setModuleArchive(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PkcmArchive module_archive = 3;`
     */
    public fun clearModuleArchive() {
      _builder.clearModuleArchive()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PkcmArchive module_archive = 3;`
     * @return Whether the moduleArchive field is set.
     */
    public fun hasModuleArchive(): kotlin.Boolean {
      return _builder.hasModuleArchive()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PkcmCenterButton module_cbtn = 4;`
     */
    public var moduleCbtn: bilibili.app.listener.v1.PkcmCenterButton
      @JvmName("getModuleCbtn")
      get() = _builder.getModuleCbtn()
      @JvmName("setModuleCbtn")
      set(value) {
        _builder.setModuleCbtn(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PkcmCenterButton module_cbtn = 4;`
     */
    public fun clearModuleCbtn() {
      _builder.clearModuleCbtn()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PkcmCenterButton module_cbtn = 4;`
     * @return Whether the moduleCbtn field is set.
     */
    public fun hasModuleCbtn(): kotlin.Boolean {
      return _builder.hasModuleCbtn()
    }
    public val moduleCase: bilibili.app.listener.v1.CardModule.ModuleCase
      @JvmName("getModuleCase")
      get() = _builder.getModuleCase()

    public fun clearModule() {
      _builder.clearModule()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.listener.v1.CardModule.copy(block: `bilibili.app.listener.v1`.CardModuleKt.Dsl.() -> kotlin.Unit): bilibili.app.listener.v1.CardModule =
  `bilibili.app.listener.v1`.CardModuleKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.listener.v1.CardModuleOrBuilder.moduleHeaderOrNull: bilibili.app.listener.v1.PkcmHeader?
  get() = if (hasModuleHeader()) getModuleHeader() else null

public val bilibili.app.listener.v1.CardModuleOrBuilder.moduleArchiveOrNull: bilibili.app.listener.v1.PkcmArchive?
  get() = if (hasModuleArchive()) getModuleArchive() else null

public val bilibili.app.listener.v1.CardModuleOrBuilder.moduleCbtnOrNull: bilibili.app.listener.v1.PkcmCenterButton?
  get() = if (hasModuleCbtn()) getModuleCbtn() else null

