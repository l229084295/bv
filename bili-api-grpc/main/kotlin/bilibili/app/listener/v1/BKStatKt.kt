// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/listener/v1/listener.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.listener.v1;

@kotlin.jvm.JvmName("-initializebKStat")
public inline fun bKStat(block: bilibili.app.listener.v1.BKStatKt.Dsl.() -> kotlin.Unit): bilibili.app.listener.v1.BKStat =
  bilibili.app.listener.v1.BKStatKt.Dsl._create(bilibili.app.listener.v1.BKStat.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.listener.v1.BKStat`
 */
public object BKStatKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.listener.v1.BKStat.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.listener.v1.BKStat.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.listener.v1.BKStat = _builder.build()

    /**
     * ```
     * ```
     *
     * `int32 like = 1;`
     */
    public var like: kotlin.Int
      @JvmName("getLike")
      get() = _builder.getLike()
      @JvmName("setLike")
      set(value) {
        _builder.setLike(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 like = 1;`
     */
    public fun clearLike() {
      _builder.clearLike()
    }

    /**
     * ```
     * ```
     *
     * `int32 coin = 2;`
     */
    public var coin: kotlin.Int
      @JvmName("getCoin")
      get() = _builder.getCoin()
      @JvmName("setCoin")
      set(value) {
        _builder.setCoin(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 coin = 2;`
     */
    public fun clearCoin() {
      _builder.clearCoin()
    }

    /**
     * ```
     * ```
     *
     * `int32 favourite = 3;`
     */
    public var favourite: kotlin.Int
      @JvmName("getFavourite")
      get() = _builder.getFavourite()
      @JvmName("setFavourite")
      set(value) {
        _builder.setFavourite(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 favourite = 3;`
     */
    public fun clearFavourite() {
      _builder.clearFavourite()
    }

    /**
     * ```
     * ```
     *
     * `int32 reply = 4;`
     */
    public var reply: kotlin.Int
      @JvmName("getReply")
      get() = _builder.getReply()
      @JvmName("setReply")
      set(value) {
        _builder.setReply(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 reply = 4;`
     */
    public fun clearReply() {
      _builder.clearReply()
    }

    /**
     * ```
     * ```
     *
     * `int32 share = 5;`
     */
    public var share: kotlin.Int
      @JvmName("getShare")
      get() = _builder.getShare()
      @JvmName("setShare")
      set(value) {
        _builder.setShare(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 share = 5;`
     */
    public fun clearShare() {
      _builder.clearShare()
    }

    /**
     * ```
     * ```
     *
     * `int32 view = 6;`
     */
    public var view: kotlin.Int
      @JvmName("getView")
      get() = _builder.getView()
      @JvmName("setView")
      set(value) {
        _builder.setView(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 view = 6;`
     */
    public fun clearView() {
      _builder.clearView()
    }

    /**
     * ```
     * ```
     *
     * `bool has_like = 7;`
     */
    public var hasLike: kotlin.Boolean
      @JvmName("getHasLike")
      get() = _builder.getHasLike()
      @JvmName("setHasLike")
      set(value) {
        _builder.setHasLike(value)
      }
    /**
     * ```
     * ```
     *
     * `bool has_like = 7;`
     */
    public fun clearHasLike() {
      _builder.clearHasLike()
    }

    /**
     * ```
     * ```
     *
     * `bool has_coin = 8;`
     */
    public var hasCoin: kotlin.Boolean
      @JvmName("getHasCoin")
      get() = _builder.getHasCoin()
      @JvmName("setHasCoin")
      set(value) {
        _builder.setHasCoin(value)
      }
    /**
     * ```
     * ```
     *
     * `bool has_coin = 8;`
     */
    public fun clearHasCoin() {
      _builder.clearHasCoin()
    }

    /**
     * ```
     * ```
     *
     * `bool has_fav = 9;`
     */
    public var hasFav: kotlin.Boolean
      @JvmName("getHasFav")
      get() = _builder.getHasFav()
      @JvmName("setHasFav")
      set(value) {
        _builder.setHasFav(value)
      }
    /**
     * ```
     * ```
     *
     * `bool has_fav = 9;`
     */
    public fun clearHasFav() {
      _builder.clearHasFav()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.listener.v1.BKStat.copy(block: `bilibili.app.listener.v1`.BKStatKt.Dsl.() -> kotlin.Unit): bilibili.app.listener.v1.BKStat =
  `bilibili.app.listener.v1`.BKStatKt.Dsl._create(this.toBuilder()).apply { block() }._build()

