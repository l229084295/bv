// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/listener/v1/listener.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.listener.v1;

@kotlin.jvm.JvmName("-initializeplayHistoryAddReq")
public inline fun playHistoryAddReq(block: bilibili.app.listener.v1.PlayHistoryAddReqKt.Dsl.() -> kotlin.Unit): bilibili.app.listener.v1.PlayHistoryAddReq =
  bilibili.app.listener.v1.PlayHistoryAddReqKt.Dsl._create(bilibili.app.listener.v1.PlayHistoryAddReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.listener.v1.PlayHistoryAddReq`
 */
public object PlayHistoryAddReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.listener.v1.PlayHistoryAddReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.listener.v1.PlayHistoryAddReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.listener.v1.PlayHistoryAddReq = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PlayItem item = 1;`
     */
    public var item: bilibili.app.listener.v1.PlayItem
      @JvmName("getItem")
      get() = _builder.getItem()
      @JvmName("setItem")
      set(value) {
        _builder.setItem(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PlayItem item = 1;`
     */
    public fun clearItem() {
      _builder.clearItem()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.listener.v1.PlayItem item = 1;`
     * @return Whether the item field is set.
     */
    public fun hasItem(): kotlin.Boolean {
      return _builder.hasItem()
    }
    public val PlayHistoryAddReqKt.Dsl.itemOrNull: bilibili.app.listener.v1.PlayItem?
      get() = _builder.itemOrNull

    /**
     * ```
     * ```
     *
     * `int64 progress = 2;`
     */
    public var progress: kotlin.Long
      @JvmName("getProgress")
      get() = _builder.getProgress()
      @JvmName("setProgress")
      set(value) {
        _builder.setProgress(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 progress = 2;`
     */
    public fun clearProgress() {
      _builder.clearProgress()
    }

    /**
     * ```
     * ```
     *
     * `int64 duration = 3;`
     */
    public var duration: kotlin.Long
      @JvmName("getDuration")
      get() = _builder.getDuration()
      @JvmName("setDuration")
      set(value) {
        _builder.setDuration(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 duration = 3;`
     */
    public fun clearDuration() {
      _builder.clearDuration()
    }

    /**
     * ```
     * ```
     *
     * `int32 play_style = 4;`
     */
    public var playStyle: kotlin.Int
      @JvmName("getPlayStyle")
      get() = _builder.getPlayStyle()
      @JvmName("setPlayStyle")
      set(value) {
        _builder.setPlayStyle(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 play_style = 4;`
     */
    public fun clearPlayStyle() {
      _builder.clearPlayStyle()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.listener.v1.PlayHistoryAddReq.copy(block: `bilibili.app.listener.v1`.PlayHistoryAddReqKt.Dsl.() -> kotlin.Unit): bilibili.app.listener.v1.PlayHistoryAddReq =
  `bilibili.app.listener.v1`.PlayHistoryAddReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.listener.v1.PlayHistoryAddReqOrBuilder.itemOrNull: bilibili.app.listener.v1.PlayItem?
  get() = if (hasItem()) getItem() else null

