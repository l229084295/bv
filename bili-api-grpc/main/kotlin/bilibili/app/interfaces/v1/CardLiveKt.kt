// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/interfaces/v1/history.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.interfaces.v1;

@kotlin.jvm.JvmName("-initializecardLive")
public inline fun cardLive(block: bilibili.app.interfaces.v1.CardLiveKt.Dsl.() -> kotlin.Unit): bilibili.app.interfaces.v1.CardLive =
  bilibili.app.interfaces.v1.CardLiveKt.Dsl._create(bilibili.app.interfaces.v1.CardLive.newBuilder()).apply { block() }._build()
/**
 * ```
 * 直播卡片
 * ```
 *
 * Protobuf type `bilibili.app.interface.v1.CardLive`
 */
public object CardLiveKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.interfaces.v1.CardLive.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.interfaces.v1.CardLive.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.interfaces.v1.CardLive = _builder.build()

    /**
     * ```
     * 封面url
     * ```
     *
     * `string cover = 1;`
     */
    public var cover: kotlin.String
      @JvmName("getCover")
      get() = _builder.getCover()
      @JvmName("setCover")
      set(value) {
        _builder.setCover(value)
      }
    /**
     * ```
     * 封面url
     * ```
     *
     * `string cover = 1;`
     */
    public fun clearCover() {
      _builder.clearCover()
    }

    /**
     * ```
     * 主播昵称
     * ```
     *
     * `string name = 2;`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * ```
     * 主播昵称
     * ```
     *
     * `string name = 2;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * ```
     * 主播mid
     * ```
     *
     * `int64 mid = 3;`
     */
    public var mid: kotlin.Long
      @JvmName("getMid")
      get() = _builder.getMid()
      @JvmName("setMid")
      set(value) {
        _builder.setMid(value)
      }
    /**
     * ```
     * 主播mid
     * ```
     *
     * `int64 mid = 3;`
     */
    public fun clearMid() {
      _builder.clearMid()
    }

    /**
     * ```
     * 直播分区名
     * ```
     *
     * `string tag = 4;`
     */
    public var tag: kotlin.String
      @JvmName("getTag")
      get() = _builder.getTag()
      @JvmName("setTag")
      set(value) {
        _builder.setTag(value)
      }
    /**
     * ```
     * 直播分区名
     * ```
     *
     * `string tag = 4;`
     */
    public fun clearTag() {
      _builder.clearTag()
    }

    /**
     * ```
     * 直播状态
     * ```
     *
     * `int32 ststus = 5;`
     */
    public var ststus: kotlin.Int
      @JvmName("getStstus")
      get() = _builder.getStstus()
      @JvmName("setStstus")
      set(value) {
        _builder.setStstus(value)
      }
    /**
     * ```
     * 直播状态
     * ```
     *
     * `int32 ststus = 5;`
     */
    public fun clearStstus() {
      _builder.clearStstus()
    }

    /**
     * ```
     * 是否展示关注按钮
     * ```
     *
     * `bool display_attention = 6;`
     */
    public var displayAttention: kotlin.Boolean
      @JvmName("getDisplayAttention")
      get() = _builder.getDisplayAttention()
      @JvmName("setDisplayAttention")
      set(value) {
        _builder.setDisplayAttention(value)
      }
    /**
     * ```
     * 是否展示关注按钮
     * ```
     *
     * `bool display_attention = 6;`
     */
    public fun clearDisplayAttention() {
      _builder.clearDisplayAttention()
    }

    /**
     * ```
     * 关系信息
     * ```
     *
     * `.bilibili.app.interface.v1.Relation relation = 7;`
     */
    public var relation: bilibili.app.interfaces.v1.Relation
      @JvmName("getRelation")
      get() = _builder.getRelation()
      @JvmName("setRelation")
      set(value) {
        _builder.setRelation(value)
      }
    /**
     * ```
     * 关系信息
     * ```
     *
     * `.bilibili.app.interface.v1.Relation relation = 7;`
     */
    public fun clearRelation() {
      _builder.clearRelation()
    }
    /**
     * ```
     * 关系信息
     * ```
     *
     * `.bilibili.app.interface.v1.Relation relation = 7;`
     * @return Whether the relation field is set.
     */
    public fun hasRelation(): kotlin.Boolean {
      return _builder.hasRelation()
    }
    public val CardLiveKt.Dsl.relationOrNull: bilibili.app.interfaces.v1.Relation?
      get() = _builder.relationOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.interfaces.v1.CardLive.copy(block: `bilibili.app.interfaces.v1`.CardLiveKt.Dsl.() -> kotlin.Unit): bilibili.app.interfaces.v1.CardLive =
  `bilibili.app.interfaces.v1`.CardLiveKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.interfaces.v1.CardLiveOrBuilder.relationOrNull: bilibili.app.interfaces.v1.Relation?
  get() = if (hasRelation()) getRelation() else null

