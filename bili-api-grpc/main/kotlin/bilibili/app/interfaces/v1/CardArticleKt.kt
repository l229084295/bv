// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/interfaces/v1/history.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.interfaces.v1;

@kotlin.jvm.JvmName("-initializecardArticle")
public inline fun cardArticle(block: bilibili.app.interfaces.v1.CardArticleKt.Dsl.() -> kotlin.Unit): bilibili.app.interfaces.v1.CardArticle =
  bilibili.app.interfaces.v1.CardArticleKt.Dsl._create(bilibili.app.interfaces.v1.CardArticle.newBuilder()).apply { block() }._build()
/**
 * ```
 * 专栏卡片
 * ```
 *
 * Protobuf type `bilibili.app.interface.v1.CardArticle`
 */
public object CardArticleKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.interfaces.v1.CardArticle.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.interfaces.v1.CardArticle.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.interfaces.v1.CardArticle = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class CoversProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * 封面url
     * ```
     *
     * `repeated string covers = 1;`
     * @return A list containing the covers.
     */
    public val covers: com.google.protobuf.kotlin.DslList<kotlin.String, CoversProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getCoversList()
      )
    /**
     * ```
     * 封面url
     * ```
     *
     * `repeated string covers = 1;`
     * @param value The covers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addCovers")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, CoversProxy>.add(value: kotlin.String) {
      _builder.addCovers(value)
    }
    /**
     * ```
     * 封面url
     * ```
     *
     * `repeated string covers = 1;`
     * @param value The covers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignCovers")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, CoversProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * ```
     * 封面url
     * ```
     *
     * `repeated string covers = 1;`
     * @param values The covers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllCovers")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, CoversProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllCovers(values)
    }
    /**
     * ```
     * 封面url
     * ```
     *
     * `repeated string covers = 1;`
     * @param values The covers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllCovers")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, CoversProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * ```
     * 封面url
     * ```
     *
     * `repeated string covers = 1;`
     * @param index The index to set the value at.
     * @param value The covers to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setCovers")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, CoversProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setCovers(index, value)
    }/**
     * ```
     * 封面url
     * ```
     *
     * `repeated string covers = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearCovers")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, CoversProxy>.clear() {
      _builder.clearCovers()
    }
    /**
     * ```
     * UP主昵称
     * ```
     *
     * `string name = 2;`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * ```
     * UP主昵称
     * ```
     *
     * `string name = 2;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * ```
     * UP主mid
     * ```
     *
     * `int64 mid = 3;`
     */
    public var mid: kotlin.Long
      @JvmName("getMid")
      get() = _builder.getMid()
      @JvmName("setMid")
      set(value) {
        _builder.setMid(value)
      }
    /**
     * ```
     * UP主mid
     * ```
     *
     * `int64 mid = 3;`
     */
    public fun clearMid() {
      _builder.clearMid()
    }

    /**
     * ```
     * 是否展示关注按钮
     * ```
     *
     * `bool displayAttention = 4;`
     */
    public var displayAttention: kotlin.Boolean
      @JvmName("getDisplayAttention")
      get() = _builder.getDisplayAttention()
      @JvmName("setDisplayAttention")
      set(value) {
        _builder.setDisplayAttention(value)
      }
    /**
     * ```
     * 是否展示关注按钮
     * ```
     *
     * `bool displayAttention = 4;`
     */
    public fun clearDisplayAttention() {
      _builder.clearDisplayAttention()
    }

    /**
     * ```
     * 角标
     * ```
     *
     * `string badge = 5;`
     */
    public var badge: kotlin.String
      @JvmName("getBadge")
      get() = _builder.getBadge()
      @JvmName("setBadge")
      set(value) {
        _builder.setBadge(value)
      }
    /**
     * ```
     * 角标
     * ```
     *
     * `string badge = 5;`
     */
    public fun clearBadge() {
      _builder.clearBadge()
    }

    /**
     * ```
     * 关系信息
     * ```
     *
     * `.bilibili.app.interface.v1.Relation relation = 6;`
     */
    public var relation: bilibili.app.interfaces.v1.Relation
      @JvmName("getRelation")
      get() = _builder.getRelation()
      @JvmName("setRelation")
      set(value) {
        _builder.setRelation(value)
      }
    /**
     * ```
     * 关系信息
     * ```
     *
     * `.bilibili.app.interface.v1.Relation relation = 6;`
     */
    public fun clearRelation() {
      _builder.clearRelation()
    }
    /**
     * ```
     * 关系信息
     * ```
     *
     * `.bilibili.app.interface.v1.Relation relation = 6;`
     * @return Whether the relation field is set.
     */
    public fun hasRelation(): kotlin.Boolean {
      return _builder.hasRelation()
    }
    public val CardArticleKt.Dsl.relationOrNull: bilibili.app.interfaces.v1.Relation?
      get() = _builder.relationOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.interfaces.v1.CardArticle.copy(block: `bilibili.app.interfaces.v1`.CardArticleKt.Dsl.() -> kotlin.Unit): bilibili.app.interfaces.v1.CardArticle =
  `bilibili.app.interfaces.v1`.CardArticleKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.interfaces.v1.CardArticleOrBuilder.relationOrNull: bilibili.app.interfaces.v1.Relation?
  get() = if (hasRelation()) getRelation() else null

