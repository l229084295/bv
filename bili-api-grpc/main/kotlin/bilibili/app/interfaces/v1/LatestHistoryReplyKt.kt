// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/interfaces/v1/history.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.interfaces.v1;

@kotlin.jvm.JvmName("-initializelatestHistoryReply")
public inline fun latestHistoryReply(block: bilibili.app.interfaces.v1.LatestHistoryReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.interfaces.v1.LatestHistoryReply =
  bilibili.app.interfaces.v1.LatestHistoryReplyKt.Dsl._create(bilibili.app.interfaces.v1.LatestHistoryReply.newBuilder()).apply { block() }._build()
/**
 * ```
 * 获取最新的历史记录-响应
 * ```
 *
 * Protobuf type `bilibili.app.interface.v1.LatestHistoryReply`
 */
public object LatestHistoryReplyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.interfaces.v1.LatestHistoryReply.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.interfaces.v1.LatestHistoryReply.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.interfaces.v1.LatestHistoryReply = _builder.build()

    /**
     * ```
     * 卡片内容
     * ```
     *
     * `.bilibili.app.interface.v1.CursorItem items = 1;`
     */
    public var items: bilibili.app.interfaces.v1.CursorItem
      @JvmName("getItems")
      get() = _builder.getItems()
      @JvmName("setItems")
      set(value) {
        _builder.setItems(value)
      }
    /**
     * ```
     * 卡片内容
     * ```
     *
     * `.bilibili.app.interface.v1.CursorItem items = 1;`
     */
    public fun clearItems() {
      _builder.clearItems()
    }
    /**
     * ```
     * 卡片内容
     * ```
     *
     * `.bilibili.app.interface.v1.CursorItem items = 1;`
     * @return Whether the items field is set.
     */
    public fun hasItems(): kotlin.Boolean {
      return _builder.hasItems()
    }
    public val LatestHistoryReplyKt.Dsl.itemsOrNull: bilibili.app.interfaces.v1.CursorItem?
      get() = _builder.itemsOrNull

    /**
     * ```
     * 场景
     * ```
     *
     * `string scene = 2;`
     */
    public var scene: kotlin.String
      @JvmName("getScene")
      get() = _builder.getScene()
      @JvmName("setScene")
      set(value) {
        _builder.setScene(value)
      }
    /**
     * ```
     * 场景
     * ```
     *
     * `string scene = 2;`
     */
    public fun clearScene() {
      _builder.clearScene()
    }

    /**
     * ```
     * 弹窗停留时间
     * ```
     *
     * `int64 rtime = 3;`
     */
    public var rtime: kotlin.Long
      @JvmName("getRtime")
      get() = _builder.getRtime()
      @JvmName("setRtime")
      set(value) {
        _builder.setRtime(value)
      }
    /**
     * ```
     * 弹窗停留时间
     * ```
     *
     * `int64 rtime = 3;`
     */
    public fun clearRtime() {
      _builder.clearRtime()
    }

    /**
     * ```
     * 分组的标志(客户端埋点上报)
     * ```
     *
     * `string flag = 4;`
     */
    public var flag: kotlin.String
      @JvmName("getFlag")
      get() = _builder.getFlag()
      @JvmName("setFlag")
      set(value) {
        _builder.setFlag(value)
      }
    /**
     * ```
     * 分组的标志(客户端埋点上报)
     * ```
     *
     * `string flag = 4;`
     */
    public fun clearFlag() {
      _builder.clearFlag()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.interfaces.v1.LatestHistoryReply.copy(block: `bilibili.app.interfaces.v1`.LatestHistoryReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.interfaces.v1.LatestHistoryReply =
  `bilibili.app.interfaces.v1`.LatestHistoryReplyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.interfaces.v1.LatestHistoryReplyOrBuilder.itemsOrNull: bilibili.app.interfaces.v1.CursorItem?
  get() = if (hasItems()) getItems() else null

