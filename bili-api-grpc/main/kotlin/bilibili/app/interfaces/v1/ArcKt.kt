// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/interfaces/v1/space.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.interfaces.v1;

@kotlin.jvm.JvmName("-initializearc")
public inline fun arc(block: bilibili.app.interfaces.v1.ArcKt.Dsl.() -> kotlin.Unit): bilibili.app.interfaces.v1.Arc =
  bilibili.app.interfaces.v1.ArcKt.Dsl._create(bilibili.app.interfaces.v1.Arc.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.interface.v1.Arc`
 */
public object ArcKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.interfaces.v1.Arc.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.interfaces.v1.Arc.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.interfaces.v1.Arc = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.app.archive.v1.Arc archive = 1;`
     */
    public var archive: bilibili.app.archive.v1.Arc
      @JvmName("getArchive")
      get() = _builder.getArchive()
      @JvmName("setArchive")
      set(value) {
        _builder.setArchive(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.archive.v1.Arc archive = 1;`
     */
    public fun clearArchive() {
      _builder.clearArchive()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.archive.v1.Arc archive = 1;`
     * @return Whether the archive field is set.
     */
    public fun hasArchive(): kotlin.Boolean {
      return _builder.hasArchive()
    }
    public val ArcKt.Dsl.archiveOrNull: bilibili.app.archive.v1.Arc?
      get() = _builder.archiveOrNull

    /**
     * ```
     * ```
     *
     * `string uri = 2;`
     */
    public var uri: kotlin.String
      @JvmName("getUri")
      get() = _builder.getUri()
      @JvmName("setUri")
      set(value) {
        _builder.setUri(value)
      }
    /**
     * ```
     * ```
     *
     * `string uri = 2;`
     */
    public fun clearUri() {
      _builder.clearUri()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.interfaces.v1.Arc.copy(block: `bilibili.app.interfaces.v1`.ArcKt.Dsl.() -> kotlin.Unit): bilibili.app.interfaces.v1.Arc =
  `bilibili.app.interfaces.v1`.ArcKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.interfaces.v1.ArcOrBuilder.archiveOrNull: bilibili.app.archive.v1.Arc?
  get() = if (hasArchive()) getArchive() else null

