// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/view/v1/view.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.view.v1;

@kotlin.jvm.JvmName("-initializeseasonReply")
public inline fun seasonReply(block: bilibili.app.view.v1.SeasonReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.SeasonReply =
  bilibili.app.view.v1.SeasonReplyKt.Dsl._create(bilibili.app.view.v1.SeasonReply.newBuilder()).apply { block() }._build()
/**
 * ```
 * 合集详情页-响应
 * ```
 *
 * Protobuf type `bilibili.app.view.v1.SeasonReply`
 */
public object SeasonReplyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.view.v1.SeasonReply.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.view.v1.SeasonReply.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.view.v1.SeasonReply = _builder.build()

    /**
     * ```
     * 合集信息
     * ```
     *
     * `.bilibili.app.view.v1.UgcSeason season = 1;`
     */
    public var season: bilibili.app.view.v1.UgcSeason
      @JvmName("getSeason")
      get() = _builder.getSeason()
      @JvmName("setSeason")
      set(value) {
        _builder.setSeason(value)
      }
    /**
     * ```
     * 合集信息
     * ```
     *
     * `.bilibili.app.view.v1.UgcSeason season = 1;`
     */
    public fun clearSeason() {
      _builder.clearSeason()
    }
    /**
     * ```
     * 合集信息
     * ```
     *
     * `.bilibili.app.view.v1.UgcSeason season = 1;`
     * @return Whether the season field is set.
     */
    public fun hasSeason(): kotlin.Boolean {
      return _builder.hasSeason()
    }
    public val SeasonReplyKt.Dsl.seasonOrNull: bilibili.app.view.v1.UgcSeason?
      get() = _builder.seasonOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.view.v1.SeasonReply.copy(block: `bilibili.app.view.v1`.SeasonReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.SeasonReply =
  `bilibili.app.view.v1`.SeasonReplyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.view.v1.SeasonReplyOrBuilder.seasonOrNull: bilibili.app.view.v1.UgcSeason?
  get() = if (hasSeason()) getSeason() else null

