// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/view/v1/view.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.view.v1;

@kotlin.jvm.JvmName("-initializeuserGarb")
public inline fun userGarb(block: bilibili.app.view.v1.UserGarbKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.UserGarb =
  bilibili.app.view.v1.UserGarbKt.Dsl._create(bilibili.app.view.v1.UserGarb.newBuilder()).apply { block() }._build()
/**
 * ```
 * 用户装扮信息
 * ```
 *
 * Protobuf type `bilibili.app.view.v1.UserGarb`
 */
public object UserGarbKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.view.v1.UserGarb.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.view.v1.UserGarb.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.view.v1.UserGarb = _builder.build()

    /**
     * ```
     * 点赞动画url
     * ```
     *
     * `string url_image_ani_cut = 1;`
     */
    public var urlImageAniCut: kotlin.String
      @JvmName("getUrlImageAniCut")
      get() = _builder.getUrlImageAniCut()
      @JvmName("setUrlImageAniCut")
      set(value) {
        _builder.setUrlImageAniCut(value)
      }
    /**
     * ```
     * 点赞动画url
     * ```
     *
     * `string url_image_ani_cut = 1;`
     */
    public fun clearUrlImageAniCut() {
      _builder.clearUrlImageAniCut()
    }

    /**
     * ```
     * ```
     *
     * `string like_toast = 2;`
     */
    public var likeToast: kotlin.String
      @JvmName("getLikeToast")
      get() = _builder.getLikeToast()
      @JvmName("setLikeToast")
      set(value) {
        _builder.setLikeToast(value)
      }
    /**
     * ```
     * ```
     *
     * `string like_toast = 2;`
     */
    public fun clearLikeToast() {
      _builder.clearLikeToast()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.view.v1.UserGarb.copy(block: `bilibili.app.view.v1`.UserGarbKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.UserGarb =
  `bilibili.app.view.v1`.UserGarbKt.Dsl._create(this.toBuilder()).apply { block() }._build()

