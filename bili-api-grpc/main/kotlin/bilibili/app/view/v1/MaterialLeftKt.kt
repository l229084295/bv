// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/view/v1/view.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.view.v1;

@kotlin.jvm.JvmName("-initializematerialLeft")
public inline fun materialLeft(block: bilibili.app.view.v1.MaterialLeftKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.MaterialLeft =
  bilibili.app.view.v1.MaterialLeftKt.Dsl._create(bilibili.app.view.v1.MaterialLeft.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.view.v1.MaterialLeft`
 */
public object MaterialLeftKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.view.v1.MaterialLeft.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.view.v1.MaterialLeft.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.view.v1.MaterialLeft = _builder.build()

    /**
     * ```
     * ```
     *
     * `string icon = 1;`
     */
    public var icon: kotlin.String
      @JvmName("getIcon")
      get() = _builder.getIcon()
      @JvmName("setIcon")
      set(value) {
        _builder.setIcon(value)
      }
    /**
     * ```
     * ```
     *
     * `string icon = 1;`
     */
    public fun clearIcon() {
      _builder.clearIcon()
    }

    /**
     * ```
     * ```
     *
     * `string text = 2;`
     */
    public var text: kotlin.String
      @JvmName("getText")
      get() = _builder.getText()
      @JvmName("setText")
      set(value) {
        _builder.setText(value)
      }
    /**
     * ```
     * ```
     *
     * `string text = 2;`
     */
    public fun clearText() {
      _builder.clearText()
    }

    /**
     * ```
     * ```
     *
     * `string url = 3;`
     */
    public var url: kotlin.String
      @JvmName("getUrl")
      get() = _builder.getUrl()
      @JvmName("setUrl")
      set(value) {
        _builder.setUrl(value)
      }
    /**
     * ```
     * ```
     *
     * `string url = 3;`
     */
    public fun clearUrl() {
      _builder.clearUrl()
    }

    /**
     * ```
     * ```
     *
     * `string left_type = 4;`
     */
    public var leftType: kotlin.String
      @JvmName("getLeftType")
      get() = _builder.getLeftType()
      @JvmName("setLeftType")
      set(value) {
        _builder.setLeftType(value)
      }
    /**
     * ```
     * ```
     *
     * `string left_type = 4;`
     */
    public fun clearLeftType() {
      _builder.clearLeftType()
    }

    /**
     * ```
     * ```
     *
     * `string param = 5;`
     */
    public var param: kotlin.String
      @JvmName("getParam")
      get() = _builder.getParam()
      @JvmName("setParam")
      set(value) {
        _builder.setParam(value)
      }
    /**
     * ```
     * ```
     *
     * `string param = 5;`
     */
    public fun clearParam() {
      _builder.clearParam()
    }

    /**
     * ```
     * ```
     *
     * `string operational_type = 6;`
     */
    public var operationalType: kotlin.String
      @JvmName("getOperationalType")
      get() = _builder.getOperationalType()
      @JvmName("setOperationalType")
      set(value) {
        _builder.setOperationalType(value)
      }
    /**
     * ```
     * ```
     *
     * `string operational_type = 6;`
     */
    public fun clearOperationalType() {
      _builder.clearOperationalType()
    }

    /**
     * ```
     * ```
     *
     * `string static_icon = 7;`
     */
    public var staticIcon: kotlin.String
      @JvmName("getStaticIcon")
      get() = _builder.getStaticIcon()
      @JvmName("setStaticIcon")
      set(value) {
        _builder.setStaticIcon(value)
      }
    /**
     * ```
     * ```
     *
     * `string static_icon = 7;`
     */
    public fun clearStaticIcon() {
      _builder.clearStaticIcon()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.view.v1.MaterialLeft.copy(block: `bilibili.app.view.v1`.MaterialLeftKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.MaterialLeft =
  `bilibili.app.view.v1`.MaterialLeftKt.Dsl._create(this.toBuilder()).apply { block() }._build()

