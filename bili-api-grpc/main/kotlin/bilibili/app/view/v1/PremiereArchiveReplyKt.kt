// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/view/v1/view.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.view.v1;

@kotlin.jvm.JvmName("-initializepremiereArchiveReply")
public inline fun premiereArchiveReply(block: bilibili.app.view.v1.PremiereArchiveReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.PremiereArchiveReply =
  bilibili.app.view.v1.PremiereArchiveReplyKt.Dsl._create(bilibili.app.view.v1.PremiereArchiveReply.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.view.v1.PremiereArchiveReply`
 */
public object PremiereArchiveReplyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.view.v1.PremiereArchiveReply.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.view.v1.PremiereArchiveReply.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.view.v1.PremiereArchiveReply = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.app.view.v1.Premiere premiere = 1;`
     */
    public var premiere: bilibili.app.view.v1.Premiere
      @JvmName("getPremiere")
      get() = _builder.getPremiere()
      @JvmName("setPremiere")
      set(value) {
        _builder.setPremiere(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.view.v1.Premiere premiere = 1;`
     */
    public fun clearPremiere() {
      _builder.clearPremiere()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.view.v1.Premiere premiere = 1;`
     * @return Whether the premiere field is set.
     */
    public fun hasPremiere(): kotlin.Boolean {
      return _builder.hasPremiere()
    }
    public val PremiereArchiveReplyKt.Dsl.premiereOrNull: bilibili.app.view.v1.Premiere?
      get() = _builder.premiereOrNull

    /**
     * ```
     * ```
     *
     * `bool risk_status = 2;`
     */
    public var riskStatus: kotlin.Boolean
      @JvmName("getRiskStatus")
      get() = _builder.getRiskStatus()
      @JvmName("setRiskStatus")
      set(value) {
        _builder.setRiskStatus(value)
      }
    /**
     * ```
     * ```
     *
     * `bool risk_status = 2;`
     */
    public fun clearRiskStatus() {
      _builder.clearRiskStatus()
    }

    /**
     * ```
     * ```
     *
     * `string risk_reason = 3;`
     */
    public var riskReason: kotlin.String
      @JvmName("getRiskReason")
      get() = _builder.getRiskReason()
      @JvmName("setRiskReason")
      set(value) {
        _builder.setRiskReason(value)
      }
    /**
     * ```
     * ```
     *
     * `string risk_reason = 3;`
     */
    public fun clearRiskReason() {
      _builder.clearRiskReason()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.view.v1.PremiereArchiveReply.copy(block: `bilibili.app.view.v1`.PremiereArchiveReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.PremiereArchiveReply =
  `bilibili.app.view.v1`.PremiereArchiveReplyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.view.v1.PremiereArchiveReplyOrBuilder.premiereOrNull: bilibili.app.view.v1.Premiere?
  get() = if (hasPremiere()) getPremiere() else null

