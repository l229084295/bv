// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/view/v1/view.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.view.v1;

@kotlin.jvm.JvmName("-initializeorder")
public inline fun order(block: bilibili.app.view.v1.OrderKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.Order =
  bilibili.app.view.v1.OrderKt.Dsl._create(bilibili.app.view.v1.Order.newBuilder()).apply { block() }._build()
/**
 * ```
 * 预约模块
 * ```
 *
 * Protobuf type `bilibili.app.view.v1.Order`
 */
public object OrderKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.view.v1.Order.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.view.v1.Order.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.view.v1.Order = _builder.build()

    /**
     * ```
     * 用户操作态
     * ```
     *
     * `bool status = 1;`
     */
    public var status: kotlin.Boolean
      @JvmName("getStatus")
      get() = _builder.getStatus()
      @JvmName("setStatus")
      set(value) {
        _builder.setStatus(value)
      }
    /**
     * ```
     * 用户操作态
     * ```
     *
     * `bool status = 1;`
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }

    /**
     * ```
     * 模块标题
     * ```
     *
     * `string title = 2;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * 模块标题
     * ```
     *
     * `string title = 2;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * 按钮文字 未操作
     * ```
     *
     * `string button_title = 3;`
     */
    public var buttonTitle: kotlin.String
      @JvmName("getButtonTitle")
      get() = _builder.getButtonTitle()
      @JvmName("setButtonTitle")
      set(value) {
        _builder.setButtonTitle(value)
      }
    /**
     * ```
     * 按钮文字 未操作
     * ```
     *
     * `string button_title = 3;`
     */
    public fun clearButtonTitle() {
      _builder.clearButtonTitle()
    }

    /**
     * ```
     * 按钮文字 已操作
     * ```
     *
     * `string button_selected_title = 4;`
     */
    public var buttonSelectedTitle: kotlin.String
      @JvmName("getButtonSelectedTitle")
      get() = _builder.getButtonSelectedTitle()
      @JvmName("setButtonSelectedTitle")
      set(value) {
        _builder.setButtonSelectedTitle(value)
      }
    /**
     * ```
     * 按钮文字 已操作
     * ```
     *
     * `string button_selected_title = 4;`
     */
    public fun clearButtonSelectedTitle() {
      _builder.clearButtonSelectedTitle()
    }

    /**
     * ```
     * 合集播放数
     * ```
     *
     * `int64 season_stat_view = 5;`
     */
    public var seasonStatView: kotlin.Long
      @JvmName("getSeasonStatView")
      get() = _builder.getSeasonStatView()
      @JvmName("setSeasonStatView")
      set(value) {
        _builder.setSeasonStatView(value)
      }
    /**
     * ```
     * 合集播放数
     * ```
     *
     * `int64 season_stat_view = 5;`
     */
    public fun clearSeasonStatView() {
      _builder.clearSeasonStatView()
    }

    /**
     * ```
     * 合集弹幕数
     * ```
     *
     * `int64 season_stat_danmaku = 6;`
     */
    public var seasonStatDanmaku: kotlin.Long
      @JvmName("getSeasonStatDanmaku")
      get() = _builder.getSeasonStatDanmaku()
      @JvmName("setSeasonStatDanmaku")
      set(value) {
        _builder.setSeasonStatDanmaku(value)
      }
    /**
     * ```
     * 合集弹幕数
     * ```
     *
     * `int64 season_stat_danmaku = 6;`
     */
    public fun clearSeasonStatDanmaku() {
      _builder.clearSeasonStatDanmaku()
    }

    /**
     * ```
     * 预约类型(点击时透传，直播开始前预约活动，直播开始后收藏合集)
     * ```
     *
     * `.bilibili.app.view.v1.BizType order_type = 7;`
     */
    public var orderType: bilibili.app.view.v1.BizType
      @JvmName("getOrderType")
      get() = _builder.getOrderType()
      @JvmName("setOrderType")
      set(value) {
        _builder.setOrderType(value)
      }
    public var orderTypeValue: kotlin.Int
      @JvmName("getOrderTypeValue")
      get() = _builder.getOrderTypeValue()
      @JvmName("setOrderTypeValue")
      set(value) {
        _builder.setOrderTypeValue(value)
      }
    /**
     * ```
     * 预约类型(点击时透传，直播开始前预约活动，直播开始后收藏合集)
     * ```
     *
     * `.bilibili.app.view.v1.BizType order_type = 7;`
     */
    public fun clearOrderType() {
      _builder.clearOrderType()
    }

    /**
     * ```
     * 预约活动参数
     * ```
     *
     * `.bilibili.app.view.v1.BizReserveActivityParam reserve = 8;`
     */
    public var reserve: bilibili.app.view.v1.BizReserveActivityParam
      @JvmName("getReserve")
      get() = _builder.getReserve()
      @JvmName("setReserve")
      set(value) {
        _builder.setReserve(value)
      }
    /**
     * ```
     * 预约活动参数
     * ```
     *
     * `.bilibili.app.view.v1.BizReserveActivityParam reserve = 8;`
     */
    public fun clearReserve() {
      _builder.clearReserve()
    }
    /**
     * ```
     * 预约活动参数
     * ```
     *
     * `.bilibili.app.view.v1.BizReserveActivityParam reserve = 8;`
     * @return Whether the reserve field is set.
     */
    public fun hasReserve(): kotlin.Boolean {
      return _builder.hasReserve()
    }

    /**
     * ```
     * 收藏合集参数
     * ```
     *
     * `.bilibili.app.view.v1.BizFavSeasonParam fav_season = 9;`
     */
    public var favSeason: bilibili.app.view.v1.BizFavSeasonParam
      @JvmName("getFavSeason")
      get() = _builder.getFavSeason()
      @JvmName("setFavSeason")
      set(value) {
        _builder.setFavSeason(value)
      }
    /**
     * ```
     * 收藏合集参数
     * ```
     *
     * `.bilibili.app.view.v1.BizFavSeasonParam fav_season = 9;`
     */
    public fun clearFavSeason() {
      _builder.clearFavSeason()
    }
    /**
     * ```
     * 收藏合集参数
     * ```
     *
     * `.bilibili.app.view.v1.BizFavSeasonParam fav_season = 9;`
     * @return Whether the favSeason field is set.
     */
    public fun hasFavSeason(): kotlin.Boolean {
      return _builder.hasFavSeason()
    }

    /**
     * ```
     * 合集简介
     * ```
     *
     * `string intro = 10;`
     */
    public var intro: kotlin.String
      @JvmName("getIntro")
      get() = _builder.getIntro()
      @JvmName("setIntro")
      set(value) {
        _builder.setIntro(value)
      }
    /**
     * ```
     * 合集简介
     * ```
     *
     * `string intro = 10;`
     */
    public fun clearIntro() {
      _builder.clearIntro()
    }
    public val orderParamCase: bilibili.app.view.v1.Order.OrderParamCase
      @JvmName("getOrderParamCase")
      get() = _builder.getOrderParamCase()

    public fun clearOrderParam() {
      _builder.clearOrderParam()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.view.v1.Order.copy(block: `bilibili.app.view.v1`.OrderKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.Order =
  `bilibili.app.view.v1`.OrderKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.view.v1.OrderOrBuilder.reserveOrNull: bilibili.app.view.v1.BizReserveActivityParam?
  get() = if (hasReserve()) getReserve() else null

public val bilibili.app.view.v1.OrderOrBuilder.favSeasonOrNull: bilibili.app.view.v1.BizFavSeasonParam?
  get() = if (hasFavSeason()) getFavSeason() else null

