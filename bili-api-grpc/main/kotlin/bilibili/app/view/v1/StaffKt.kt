// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/view/v1/view.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.view.v1;

@kotlin.jvm.JvmName("-initializestaff")
public inline fun staff(block: bilibili.app.view.v1.StaffKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.Staff =
  bilibili.app.view.v1.StaffKt.Dsl._create(bilibili.app.view.v1.Staff.newBuilder()).apply { block() }._build()
/**
 * ```
 * 合作成员信息
 * ```
 *
 * Protobuf type `bilibili.app.view.v1.Staff`
 */
public object StaffKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.view.v1.Staff.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.view.v1.Staff.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.view.v1.Staff = _builder.build()

    /**
     * ```
     * 成员mid
     * ```
     *
     * `int64 mid = 1;`
     */
    public var mid: kotlin.Long
      @JvmName("getMid")
      get() = _builder.getMid()
      @JvmName("setMid")
      set(value) {
        _builder.setMid(value)
      }
    /**
     * ```
     * 成员mid
     * ```
     *
     * `int64 mid = 1;`
     */
    public fun clearMid() {
      _builder.clearMid()
    }

    /**
     * ```
     * 成员角色
     * ```
     *
     * `string title = 2;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * 成员角色
     * ```
     *
     * `string title = 2;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * 成员头像url
     * ```
     *
     * `string face = 3;`
     */
    public var face: kotlin.String
      @JvmName("getFace")
      get() = _builder.getFace()
      @JvmName("setFace")
      set(value) {
        _builder.setFace(value)
      }
    /**
     * ```
     * 成员头像url
     * ```
     *
     * `string face = 3;`
     */
    public fun clearFace() {
      _builder.clearFace()
    }

    /**
     * ```
     * 成员昵称
     * ```
     *
     * `string name = 4;`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * ```
     * 成员昵称
     * ```
     *
     * `string name = 4;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * ```
     * 成员官方信息
     * ```
     *
     * `.bilibili.app.view.v1.OfficialVerify official_verify = 5;`
     */
    public var officialVerify: bilibili.app.view.v1.OfficialVerify
      @JvmName("getOfficialVerify")
      get() = _builder.getOfficialVerify()
      @JvmName("setOfficialVerify")
      set(value) {
        _builder.setOfficialVerify(value)
      }
    /**
     * ```
     * 成员官方信息
     * ```
     *
     * `.bilibili.app.view.v1.OfficialVerify official_verify = 5;`
     */
    public fun clearOfficialVerify() {
      _builder.clearOfficialVerify()
    }
    /**
     * ```
     * 成员官方信息
     * ```
     *
     * `.bilibili.app.view.v1.OfficialVerify official_verify = 5;`
     * @return Whether the officialVerify field is set.
     */
    public fun hasOfficialVerify(): kotlin.Boolean {
      return _builder.hasOfficialVerify()
    }
    public val StaffKt.Dsl.officialVerifyOrNull: bilibili.app.view.v1.OfficialVerify?
      get() = _builder.officialVerifyOrNull

    /**
     * ```
     * 成员会员信息
     * ```
     *
     * `.bilibili.app.view.v1.Vip vip = 6;`
     */
    public var vip: bilibili.app.view.v1.Vip
      @JvmName("getVip")
      get() = _builder.getVip()
      @JvmName("setVip")
      set(value) {
        _builder.setVip(value)
      }
    /**
     * ```
     * 成员会员信息
     * ```
     *
     * `.bilibili.app.view.v1.Vip vip = 6;`
     */
    public fun clearVip() {
      _builder.clearVip()
    }
    /**
     * ```
     * 成员会员信息
     * ```
     *
     * `.bilibili.app.view.v1.Vip vip = 6;`
     * @return Whether the vip field is set.
     */
    public fun hasVip(): kotlin.Boolean {
      return _builder.hasVip()
    }
    public val StaffKt.Dsl.vipOrNull: bilibili.app.view.v1.Vip?
      get() = _builder.vipOrNull

    /**
     * ```
     * 是否关注该成员
     * ```
     *
     * `int32 attention = 7;`
     */
    public var attention: kotlin.Int
      @JvmName("getAttention")
      get() = _builder.getAttention()
      @JvmName("setAttention")
      set(value) {
        _builder.setAttention(value)
      }
    /**
     * ```
     * 是否关注该成员
     * ```
     *
     * `int32 attention = 7;`
     */
    public fun clearAttention() {
      _builder.clearAttention()
    }

    /**
     * ```
     * ```
     *
     * `int32 label_style = 8;`
     */
    public var labelStyle: kotlin.Int
      @JvmName("getLabelStyle")
      get() = _builder.getLabelStyle()
      @JvmName("setLabelStyle")
      set(value) {
        _builder.setLabelStyle(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 label_style = 8;`
     */
    public fun clearLabelStyle() {
      _builder.clearLabelStyle()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.view.v1.Staff.copy(block: `bilibili.app.view.v1`.StaffKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.Staff =
  `bilibili.app.view.v1`.StaffKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.view.v1.StaffOrBuilder.officialVerifyOrNull: bilibili.app.view.v1.OfficialVerify?
  get() = if (hasOfficialVerify()) getOfficialVerify() else null

public val bilibili.app.view.v1.StaffOrBuilder.vipOrNull: bilibili.app.view.v1.Vip?
  get() = if (hasVip()) getVip() else null

