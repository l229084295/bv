// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/view/v1/view.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.view.v1;

@kotlin.jvm.JvmName("-initializeoperationCardNew")
public inline fun operationCardNew(block: bilibili.app.view.v1.OperationCardNewKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.OperationCardNew =
  bilibili.app.view.v1.OperationCardNewKt.Dsl._create(bilibili.app.view.v1.OperationCardNew.newBuilder()).apply { block() }._build()
/**
 * ```
 * 内嵌操作按钮卡片
 * ```
 *
 * Protobuf type `bilibili.app.view.v1.OperationCardNew`
 */
public object OperationCardNewKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.view.v1.OperationCardNew.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.view.v1.OperationCardNew.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.view.v1.OperationCardNew = _builder.build()

    /**
     * ```
     * 卡片id
     * ```
     *
     * `int64 id = 1;`
     */
    public var id: kotlin.Long
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * ```
     * 卡片id
     * ```
     *
     * `int64 id = 1;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * ```
     * 开始时间
     * ```
     *
     * `int32 from = 2;`
     */
    public var from: kotlin.Int
      @JvmName("getFrom")
      get() = _builder.getFrom()
      @JvmName("setFrom")
      set(value) {
        _builder.setFrom(value)
      }
    /**
     * ```
     * 开始时间
     * ```
     *
     * `int32 from = 2;`
     */
    public fun clearFrom() {
      _builder.clearFrom()
    }

    /**
     * ```
     * 结束时间
     * ```
     *
     * `int32 to = 3;`
     */
    public var to: kotlin.Int
      @JvmName("getTo")
      get() = _builder.getTo()
      @JvmName("setTo")
      set(value) {
        _builder.setTo(value)
      }
    /**
     * ```
     * 结束时间
     * ```
     *
     * `int32 to = 3;`
     */
    public fun clearTo() {
      _builder.clearTo()
    }

    /**
     * ```
     * 用户操作态
     * true已操作 false未操作
     * ```
     *
     * `bool status = 4;`
     */
    public var status: kotlin.Boolean
      @JvmName("getStatus")
      get() = _builder.getStatus()
      @JvmName("setStatus")
      set(value) {
        _builder.setStatus(value)
      }
    /**
     * ```
     * 用户操作态
     * true已操作 false未操作
     * ```
     *
     * `bool status = 4;`
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }

    /**
     * ```
     * 卡片类型
     * ```
     *
     * `.bilibili.app.view.v1.OperationCardType card_type = 5;`
     */
    public var cardType: bilibili.app.view.v1.OperationCardType
      @JvmName("getCardType")
      get() = _builder.getCardType()
      @JvmName("setCardType")
      set(value) {
        _builder.setCardType(value)
      }
    public var cardTypeValue: kotlin.Int
      @JvmName("getCardTypeValue")
      get() = _builder.getCardTypeValue()
      @JvmName("setCardTypeValue")
      set(value) {
        _builder.setCardTypeValue(value)
      }
    /**
     * ```
     * 卡片类型
     * ```
     *
     * `.bilibili.app.view.v1.OperationCardType card_type = 5;`
     */
    public fun clearCardType() {
      _builder.clearCardType()
    }

    /**
     * ```
     * 标准卡
     * ```
     *
     * `.bilibili.app.view.v1.StandardCard standard = 6;`
     */
    public var standard: bilibili.app.view.v1.StandardCard
      @JvmName("getStandard")
      get() = _builder.getStandard()
      @JvmName("setStandard")
      set(value) {
        _builder.setStandard(value)
      }
    /**
     * ```
     * 标准卡
     * ```
     *
     * `.bilibili.app.view.v1.StandardCard standard = 6;`
     */
    public fun clearStandard() {
      _builder.clearStandard()
    }
    /**
     * ```
     * 标准卡
     * ```
     *
     * `.bilibili.app.view.v1.StandardCard standard = 6;`
     * @return Whether the standard field is set.
     */
    public fun hasStandard(): kotlin.Boolean {
      return _builder.hasStandard()
    }

    /**
     * ```
     * 老运营卡片(原B剪跳转卡)
     * ```
     *
     * `.bilibili.app.view.v1.OperationCard skip = 7;`
     */
    public var skip: bilibili.app.view.v1.OperationCard
      @JvmName("getSkip")
      get() = _builder.getSkip()
      @JvmName("setSkip")
      set(value) {
        _builder.setSkip(value)
      }
    /**
     * ```
     * 老运营卡片(原B剪跳转卡)
     * ```
     *
     * `.bilibili.app.view.v1.OperationCard skip = 7;`
     */
    public fun clearSkip() {
      _builder.clearSkip()
    }
    /**
     * ```
     * 老运营卡片(原B剪跳转卡)
     * ```
     *
     * `.bilibili.app.view.v1.OperationCard skip = 7;`
     * @return Whether the skip field is set.
     */
    public fun hasSkip(): kotlin.Boolean {
      return _builder.hasSkip()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.view.v1.BizType biz_type = 8;`
     */
    public var bizType: bilibili.app.view.v1.BizType
      @JvmName("getBizType")
      get() = _builder.getBizType()
      @JvmName("setBizType")
      set(value) {
        _builder.setBizType(value)
      }
    public var bizTypeValue: kotlin.Int
      @JvmName("getBizTypeValue")
      get() = _builder.getBizTypeValue()
      @JvmName("setBizTypeValue")
      set(value) {
        _builder.setBizTypeValue(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.view.v1.BizType biz_type = 8;`
     */
    public fun clearBizType() {
      _builder.clearBizType()
    }

    /**
     * ```
     * 追番追剧参数
     * ```
     *
     * `.bilibili.app.view.v1.BizFollowVideoParam follow = 9;`
     */
    public var follow: bilibili.app.view.v1.BizFollowVideoParam
      @JvmName("getFollow")
      get() = _builder.getFollow()
      @JvmName("setFollow")
      set(value) {
        _builder.setFollow(value)
      }
    /**
     * ```
     * 追番追剧参数
     * ```
     *
     * `.bilibili.app.view.v1.BizFollowVideoParam follow = 9;`
     */
    public fun clearFollow() {
      _builder.clearFollow()
    }
    /**
     * ```
     * 追番追剧参数
     * ```
     *
     * `.bilibili.app.view.v1.BizFollowVideoParam follow = 9;`
     * @return Whether the follow field is set.
     */
    public fun hasFollow(): kotlin.Boolean {
      return _builder.hasFollow()
    }

    /**
     * ```
     * 预约活动参数
     * ```
     *
     * `.bilibili.app.view.v1.BizReserveActivityParam reserve = 10;`
     */
    public var reserve: bilibili.app.view.v1.BizReserveActivityParam
      @JvmName("getReserve")
      get() = _builder.getReserve()
      @JvmName("setReserve")
      set(value) {
        _builder.setReserve(value)
      }
    /**
     * ```
     * 预约活动参数
     * ```
     *
     * `.bilibili.app.view.v1.BizReserveActivityParam reserve = 10;`
     */
    public fun clearReserve() {
      _builder.clearReserve()
    }
    /**
     * ```
     * 预约活动参数
     * ```
     *
     * `.bilibili.app.view.v1.BizReserveActivityParam reserve = 10;`
     * @return Whether the reserve field is set.
     */
    public fun hasReserve(): kotlin.Boolean {
      return _builder.hasReserve()
    }

    /**
     * ```
     * 跳转参数
     * ```
     *
     * `.bilibili.app.view.v1.BizJumpLinkParam jump = 11;`
     */
    public var jump: bilibili.app.view.v1.BizJumpLinkParam
      @JvmName("getJump")
      get() = _builder.getJump()
      @JvmName("setJump")
      set(value) {
        _builder.setJump(value)
      }
    /**
     * ```
     * 跳转参数
     * ```
     *
     * `.bilibili.app.view.v1.BizJumpLinkParam jump = 11;`
     */
    public fun clearJump() {
      _builder.clearJump()
    }
    /**
     * ```
     * 跳转参数
     * ```
     *
     * `.bilibili.app.view.v1.BizJumpLinkParam jump = 11;`
     * @return Whether the jump field is set.
     */
    public fun hasJump(): kotlin.Boolean {
      return _builder.hasJump()
    }

    /**
     * ```
     * 预约游戏参数
     * ```
     *
     * `.bilibili.app.view.v1.BizReserveGameParam game = 12;`
     */
    public var game: bilibili.app.view.v1.BizReserveGameParam
      @JvmName("getGame")
      get() = _builder.getGame()
      @JvmName("setGame")
      set(value) {
        _builder.setGame(value)
      }
    /**
     * ```
     * 预约游戏参数
     * ```
     *
     * `.bilibili.app.view.v1.BizReserveGameParam game = 12;`
     */
    public fun clearGame() {
      _builder.clearGame()
    }
    /**
     * ```
     * 预约游戏参数
     * ```
     *
     * `.bilibili.app.view.v1.BizReserveGameParam game = 12;`
     * @return Whether the game field is set.
     */
    public fun hasGame(): kotlin.Boolean {
      return _builder.hasGame()
    }
    public val renderCase: bilibili.app.view.v1.OperationCardNew.RenderCase
      @JvmName("getRenderCase")
      get() = _builder.getRenderCase()

    public fun clearRender() {
      _builder.clearRender()
    }
    public val paramCase: bilibili.app.view.v1.OperationCardNew.ParamCase
      @JvmName("getParamCase")
      get() = _builder.getParamCase()

    public fun clearParam() {
      _builder.clearParam()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.view.v1.OperationCardNew.copy(block: `bilibili.app.view.v1`.OperationCardNewKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.OperationCardNew =
  `bilibili.app.view.v1`.OperationCardNewKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.view.v1.OperationCardNewOrBuilder.standardOrNull: bilibili.app.view.v1.StandardCard?
  get() = if (hasStandard()) getStandard() else null

public val bilibili.app.view.v1.OperationCardNewOrBuilder.skipOrNull: bilibili.app.view.v1.OperationCard?
  get() = if (hasSkip()) getSkip() else null

public val bilibili.app.view.v1.OperationCardNewOrBuilder.followOrNull: bilibili.app.view.v1.BizFollowVideoParam?
  get() = if (hasFollow()) getFollow() else null

public val bilibili.app.view.v1.OperationCardNewOrBuilder.reserveOrNull: bilibili.app.view.v1.BizReserveActivityParam?
  get() = if (hasReserve()) getReserve() else null

public val bilibili.app.view.v1.OperationCardNewOrBuilder.jumpOrNull: bilibili.app.view.v1.BizJumpLinkParam?
  get() = if (hasJump()) getJump() else null

public val bilibili.app.view.v1.OperationCardNewOrBuilder.gameOrNull: bilibili.app.view.v1.BizReserveGameParam?
  get() = if (hasGame()) getGame() else null

