// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/view/v1/view.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.view.v1;

@kotlin.jvm.JvmName("-initializeseasonWidgetExposeReq")
public inline fun seasonWidgetExposeReq(block: bilibili.app.view.v1.SeasonWidgetExposeReqKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.SeasonWidgetExposeReq =
  bilibili.app.view.v1.SeasonWidgetExposeReqKt.Dsl._create(bilibili.app.view.v1.SeasonWidgetExposeReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.view.v1.SeasonWidgetExposeReq`
 */
public object SeasonWidgetExposeReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.view.v1.SeasonWidgetExposeReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.view.v1.SeasonWidgetExposeReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.view.v1.SeasonWidgetExposeReq = _builder.build()

    /**
     * ```
     * ```
     *
     * `int64 mid = 1;`
     */
    public var mid: kotlin.Long
      @JvmName("getMid")
      get() = _builder.getMid()
      @JvmName("setMid")
      set(value) {
        _builder.setMid(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 mid = 1;`
     */
    public fun clearMid() {
      _builder.clearMid()
    }

    /**
     * ```
     * ```
     *
     * `int32 type = 2;`
     */
    public var type: kotlin.Int
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 type = 2;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * ```
     * ```
     *
     * `int64 season_id = 3;`
     */
    public var seasonId: kotlin.Long
      @JvmName("getSeasonId")
      get() = _builder.getSeasonId()
      @JvmName("setSeasonId")
      set(value) {
        _builder.setSeasonId(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 season_id = 3;`
     */
    public fun clearSeasonId() {
      _builder.clearSeasonId()
    }

    /**
     * ```
     * ```
     *
     * `int64 activity_id = 4;`
     */
    public var activityId: kotlin.Long
      @JvmName("getActivityId")
      get() = _builder.getActivityId()
      @JvmName("setActivityId")
      set(value) {
        _builder.setActivityId(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 activity_id = 4;`
     */
    public fun clearActivityId() {
      _builder.clearActivityId()
    }

    /**
     * ```
     * ```
     *
     * `int64 aid = 5;`
     */
    public var aid: kotlin.Long
      @JvmName("getAid")
      get() = _builder.getAid()
      @JvmName("setAid")
      set(value) {
        _builder.setAid(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 aid = 5;`
     */
    public fun clearAid() {
      _builder.clearAid()
    }

    /**
     * ```
     * ```
     *
     * `int64 cid = 6;`
     */
    public var cid: kotlin.Long
      @JvmName("getCid")
      get() = _builder.getCid()
      @JvmName("setCid")
      set(value) {
        _builder.setCid(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 cid = 6;`
     */
    public fun clearCid() {
      _builder.clearCid()
    }

    /**
     * ```
     * ```
     *
     * `int64 scene = 7;`
     */
    public var scene: kotlin.Long
      @JvmName("getScene")
      get() = _builder.getScene()
      @JvmName("setScene")
      set(value) {
        _builder.setScene(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 scene = 7;`
     */
    public fun clearScene() {
      _builder.clearScene()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.view.v1.SeasonWidgetExposeReq.copy(block: `bilibili.app.view.v1`.SeasonWidgetExposeReqKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.SeasonWidgetExposeReq =
  `bilibili.app.view.v1`.SeasonWidgetExposeReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

