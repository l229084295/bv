// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/view/v1/view.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.view.v1;

@kotlin.jvm.JvmName("-initializecM")
public inline fun cM(block: bilibili.app.view.v1.CMKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.CM =
  bilibili.app.view.v1.CMKt.Dsl._create(bilibili.app.view.v1.CM.newBuilder()).apply { block() }._build()
/**
 * ```
 * 广告
 * ```
 *
 * Protobuf type `bilibili.app.view.v1.CM`
 */
public object CMKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.view.v1.CM.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.view.v1.CM.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.view.v1.CM = _builder.build()

    /**
     * ```
     * 广告数据(需解包)
     * ```
     *
     * `.google.protobuf.Any source_content = 1;`
     */
    public var sourceContent: com.google.protobuf.Any
      @JvmName("getSourceContent")
      get() = _builder.getSourceContent()
      @JvmName("setSourceContent")
      set(value) {
        _builder.setSourceContent(value)
      }
    /**
     * ```
     * 广告数据(需解包)
     * ```
     *
     * `.google.protobuf.Any source_content = 1;`
     */
    public fun clearSourceContent() {
      _builder.clearSourceContent()
    }
    /**
     * ```
     * 广告数据(需解包)
     * ```
     *
     * `.google.protobuf.Any source_content = 1;`
     * @return Whether the sourceContent field is set.
     */
    public fun hasSourceContent(): kotlin.Boolean {
      return _builder.hasSourceContent()
    }
    public val CMKt.Dsl.sourceContentOrNull: com.google.protobuf.Any?
      get() = _builder.sourceContentOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.view.v1.CM.copy(block: `bilibili.app.view.v1`.CMKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.CM =
  `bilibili.app.view.v1`.CMKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.view.v1.CMOrBuilder.sourceContentOrNull: com.google.protobuf.Any?
  get() = if (hasSourceContent()) getSourceContent() else null

