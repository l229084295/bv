// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/view/v1/view.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.view.v1;

@kotlin.jvm.JvmName("-initializeshortFormVideoDownloadReply")
public inline fun shortFormVideoDownloadReply(block: bilibili.app.view.v1.ShortFormVideoDownloadReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.ShortFormVideoDownloadReply =
  bilibili.app.view.v1.ShortFormVideoDownloadReplyKt.Dsl._create(bilibili.app.view.v1.ShortFormVideoDownloadReply.newBuilder()).apply { block() }._build()
/**
 * ```
 * 短视频下载-响应
 * ```
 *
 * Protobuf type `bilibili.app.view.v1.ShortFormVideoDownloadReply`
 */
public object ShortFormVideoDownloadReplyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.view.v1.ShortFormVideoDownloadReply.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.view.v1.ShortFormVideoDownloadReply.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.view.v1.ShortFormVideoDownloadReply = _builder.build()

    /**
     * ```
     * 是否有下载分享按钮
     * ```
     *
     * `bool has_download_url = 1;`
     */
    public var hasDownloadUrl: kotlin.Boolean
      @JvmName("getHasDownloadUrl")
      get() = _builder.getHasDownloadUrl()
      @JvmName("setHasDownloadUrl")
      set(value) {
        _builder.setHasDownloadUrl(value)
      }
    /**
     * ```
     * 是否有下载分享按钮
     * ```
     *
     * `bool has_download_url = 1;`
     */
    public fun clearHasDownloadUrl() {
      _builder.clearHasDownloadUrl()
    }

    /**
     * ```
     * 下载url
     * ```
     *
     * `string download_url = 2;`
     */
    public var downloadUrl: kotlin.String
      @JvmName("getDownloadUrl")
      get() = _builder.getDownloadUrl()
      @JvmName("setDownloadUrl")
      set(value) {
        _builder.setDownloadUrl(value)
      }
    /**
     * ```
     * 下载url
     * ```
     *
     * `string download_url = 2;`
     */
    public fun clearDownloadUrl() {
      _builder.clearDownloadUrl()
    }

    /**
     * ```
     * 文件md5
     * ```
     *
     * `string md5 = 3;`
     */
    public var md5: kotlin.String
      @JvmName("getMd5")
      get() = _builder.getMd5()
      @JvmName("setMd5")
      set(value) {
        _builder.setMd5(value)
      }
    /**
     * ```
     * 文件md5
     * ```
     *
     * `string md5 = 3;`
     */
    public fun clearMd5() {
      _builder.clearMd5()
    }

    /**
     * ```
     * 文件大小(单位为Byte)
     * ```
     *
     * `int64 size = 4;`
     */
    public var size: kotlin.Long
      @JvmName("getSize")
      get() = _builder.getSize()
      @JvmName("setSize")
      set(value) {
        _builder.setSize(value)
      }
    /**
     * ```
     * 文件大小(单位为Byte)
     * ```
     *
     * `int64 size = 4;`
     */
    public fun clearSize() {
      _builder.clearSize()
    }

    /**
     * ```
     * ```
     *
     * `string backup_download_url = 5;`
     */
    public var backupDownloadUrl: kotlin.String
      @JvmName("getBackupDownloadUrl")
      get() = _builder.getBackupDownloadUrl()
      @JvmName("setBackupDownloadUrl")
      set(value) {
        _builder.setBackupDownloadUrl(value)
      }
    /**
     * ```
     * ```
     *
     * `string backup_download_url = 5;`
     */
    public fun clearBackupDownloadUrl() {
      _builder.clearBackupDownloadUrl()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.view.v1.ShortFormVideoDownloadReply.copy(block: `bilibili.app.view.v1`.ShortFormVideoDownloadReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.ShortFormVideoDownloadReply =
  `bilibili.app.view.v1`.ShortFormVideoDownloadReplyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

