// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/view/v1/view.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.view.v1;

@kotlin.jvm.JvmName("-initializedislikeReasons")
public inline fun dislikeReasons(block: bilibili.app.view.v1.DislikeReasonsKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.DislikeReasons =
  bilibili.app.view.v1.DislikeReasonsKt.Dsl._create(bilibili.app.view.v1.DislikeReasons.newBuilder()).apply { block() }._build()
/**
 * ```
 * 不喜欢原因项
 * ```
 *
 * Protobuf type `bilibili.app.view.v1.DislikeReasons`
 */
public object DislikeReasonsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.view.v1.DislikeReasons.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.view.v1.DislikeReasons.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.view.v1.DislikeReasons = _builder.build()

    /**
     * ```
     * 类型
     * 1:全部类型 3:TAG 4:UP主
     * ```
     *
     * `int64 id = 1;`
     */
    public var id: kotlin.Long
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * ```
     * 类型
     * 1:全部类型 3:TAG 4:UP主
     * ```
     *
     * `int64 id = 1;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * ```
     * 相关UP主mid
     * ```
     *
     * `int64 mid = 2;`
     */
    public var mid: kotlin.Long
      @JvmName("getMid")
      get() = _builder.getMid()
      @JvmName("setMid")
      set(value) {
        _builder.setMid(value)
      }
    /**
     * ```
     * 相关UP主mid
     * ```
     *
     * `int64 mid = 2;`
     */
    public fun clearMid() {
      _builder.clearMid()
    }

    /**
     * ```
     * 相关分区tid
     * ```
     *
     * `int32 rid = 3;`
     */
    public var rid: kotlin.Int
      @JvmName("getRid")
      get() = _builder.getRid()
      @JvmName("setRid")
      set(value) {
        _builder.setRid(value)
      }
    /**
     * ```
     * 相关分区tid
     * ```
     *
     * `int32 rid = 3;`
     */
    public fun clearRid() {
      _builder.clearRid()
    }

    /**
     * ```
     * 相关TAG id
     * ```
     *
     * `int64 tag_id = 4;`
     */
    public var tagId: kotlin.Long
      @JvmName("getTagId")
      get() = _builder.getTagId()
      @JvmName("setTagId")
      set(value) {
        _builder.setTagId(value)
      }
    /**
     * ```
     * 相关TAG id
     * ```
     *
     * `int64 tag_id = 4;`
     */
    public fun clearTagId() {
      _builder.clearTagId()
    }

    /**
     * ```
     * 相关名称
     * ```
     *
     * `string name = 5;`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * ```
     * 相关名称
     * ```
     *
     * `string name = 5;`
     */
    public fun clearName() {
      _builder.clearName()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.view.v1.DislikeReasons.copy(block: `bilibili.app.view.v1`.DislikeReasonsKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.DislikeReasons =
  `bilibili.app.view.v1`.DislikeReasonsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

