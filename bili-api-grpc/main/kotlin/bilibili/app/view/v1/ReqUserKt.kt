// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/view/v1/view.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.view.v1;

@kotlin.jvm.JvmName("-initializereqUser")
public inline fun reqUser(block: bilibili.app.view.v1.ReqUserKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.ReqUser =
  bilibili.app.view.v1.ReqUserKt.Dsl._create(bilibili.app.view.v1.ReqUser.newBuilder()).apply { block() }._build()
/**
 * ```
 * 用户操作状态
 * ```
 *
 * Protobuf type `bilibili.app.view.v1.ReqUser`
 */
public object ReqUserKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.view.v1.ReqUser.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.view.v1.ReqUser.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.view.v1.ReqUser = _builder.build()

    /**
     * ```
     * 用户是否关注UP
     * ```
     *
     * `int32 attention = 1;`
     */
    public var attention: kotlin.Int
      @JvmName("getAttention")
      get() = _builder.getAttention()
      @JvmName("setAttention")
      set(value) {
        _builder.setAttention(value)
      }
    /**
     * ```
     * 用户是否关注UP
     * ```
     *
     * `int32 attention = 1;`
     */
    public fun clearAttention() {
      _builder.clearAttention()
    }

    /**
     * ```
     * UP是否关注用户
     * ```
     *
     * `int32 guest_attention = 2;`
     */
    public var guestAttention: kotlin.Int
      @JvmName("getGuestAttention")
      get() = _builder.getGuestAttention()
      @JvmName("setGuestAttention")
      set(value) {
        _builder.setGuestAttention(value)
      }
    /**
     * ```
     * UP是否关注用户
     * ```
     *
     * `int32 guest_attention = 2;`
     */
    public fun clearGuestAttention() {
      _builder.clearGuestAttention()
    }

    /**
     * ```
     * 是否收藏
     * ```
     *
     * `int32 favorite = 3;`
     */
    public var favorite: kotlin.Int
      @JvmName("getFavorite")
      get() = _builder.getFavorite()
      @JvmName("setFavorite")
      set(value) {
        _builder.setFavorite(value)
      }
    /**
     * ```
     * 是否收藏
     * ```
     *
     * `int32 favorite = 3;`
     */
    public fun clearFavorite() {
      _builder.clearFavorite()
    }

    /**
     * ```
     * 是否点赞
     * ```
     *
     * `int32 like = 4;`
     */
    public var like: kotlin.Int
      @JvmName("getLike")
      get() = _builder.getLike()
      @JvmName("setLike")
      set(value) {
        _builder.setLike(value)
      }
    /**
     * ```
     * 是否点赞
     * ```
     *
     * `int32 like = 4;`
     */
    public fun clearLike() {
      _builder.clearLike()
    }

    /**
     * ```
     * 是否点踩
     * ```
     *
     * `int32 dislike = 5;`
     */
    public var dislike: kotlin.Int
      @JvmName("getDislike")
      get() = _builder.getDislike()
      @JvmName("setDislike")
      set(value) {
        _builder.setDislike(value)
      }
    /**
     * ```
     * 是否点踩
     * ```
     *
     * `int32 dislike = 5;`
     */
    public fun clearDislike() {
      _builder.clearDislike()
    }

    /**
     * ```
     * 是否投币
     * ```
     *
     * `int32 coin = 6;`
     */
    public var coin: kotlin.Int
      @JvmName("getCoin")
      get() = _builder.getCoin()
      @JvmName("setCoin")
      set(value) {
        _builder.setCoin(value)
      }
    /**
     * ```
     * 是否投币
     * ```
     *
     * `int32 coin = 6;`
     */
    public fun clearCoin() {
      _builder.clearCoin()
    }

    /**
     * ```
     * 关注等级
     * ```
     *
     * `int32 attention_level = 7;`
     */
    public var attentionLevel: kotlin.Int
      @JvmName("getAttentionLevel")
      get() = _builder.getAttentionLevel()
      @JvmName("setAttentionLevel")
      set(value) {
        _builder.setAttentionLevel(value)
      }
    /**
     * ```
     * 关注等级
     * ```
     *
     * `int32 attention_level = 7;`
     */
    public fun clearAttentionLevel() {
      _builder.clearAttentionLevel()
    }

    /**
     * ```
     * 是否收藏合集
     * ```
     *
     * `int32 fav_season = 8;`
     */
    public var favSeason: kotlin.Int
      @JvmName("getFavSeason")
      get() = _builder.getFavSeason()
      @JvmName("setFavSeason")
      set(value) {
        _builder.setFavSeason(value)
      }
    /**
     * ```
     * 是否收藏合集
     * ```
     *
     * `int32 fav_season = 8;`
     */
    public fun clearFavSeason() {
      _builder.clearFavSeason()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.view.v1.Button elec_plus_btn = 9;`
     */
    public var elecPlusBtn: bilibili.app.view.v1.Button
      @JvmName("getElecPlusBtn")
      get() = _builder.getElecPlusBtn()
      @JvmName("setElecPlusBtn")
      set(value) {
        _builder.setElecPlusBtn(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.view.v1.Button elec_plus_btn = 9;`
     */
    public fun clearElecPlusBtn() {
      _builder.clearElecPlusBtn()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.view.v1.Button elec_plus_btn = 9;`
     * @return Whether the elecPlusBtn field is set.
     */
    public fun hasElecPlusBtn(): kotlin.Boolean {
      return _builder.hasElecPlusBtn()
    }
    public val ReqUserKt.Dsl.elecPlusBtnOrNull: bilibili.app.view.v1.Button?
      get() = _builder.elecPlusBtnOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.view.v1.ReqUser.copy(block: `bilibili.app.view.v1`.ReqUserKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.ReqUser =
  `bilibili.app.view.v1`.ReqUserKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.view.v1.ReqUserOrBuilder.elecPlusBtnOrNull: bilibili.app.view.v1.Button?
  get() = if (hasElecPlusBtn()) getElecPlusBtn() else null

