// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/view/v1/view.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.view.v1;

@kotlin.jvm.JvmName("-initializeactivityResource")
public inline fun activityResource(block: bilibili.app.view.v1.ActivityResourceKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.ActivityResource =
  bilibili.app.view.v1.ActivityResourceKt.Dsl._create(bilibili.app.view.v1.ActivityResource.newBuilder()).apply { block() }._build()
/**
 * ```
 * 活动页资源包
 * ```
 *
 * Protobuf type `bilibili.app.view.v1.ActivityResource`
 */
public object ActivityResourceKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.view.v1.ActivityResource.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.view.v1.ActivityResource.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.view.v1.ActivityResource = _builder.build()

    /**
     * ```
     * mod资源池名称
     * ```
     *
     * `string mod_pool_name = 1;`
     */
    public var modPoolName: kotlin.String
      @JvmName("getModPoolName")
      get() = _builder.getModPoolName()
      @JvmName("setModPoolName")
      set(value) {
        _builder.setModPoolName(value)
      }
    /**
     * ```
     * mod资源池名称
     * ```
     *
     * `string mod_pool_name = 1;`
     */
    public fun clearModPoolName() {
      _builder.clearModPoolName()
    }

    /**
     * ```
     * mod资源名称
     * ```
     *
     * `string mod_resource_name = 2;`
     */
    public var modResourceName: kotlin.String
      @JvmName("getModResourceName")
      get() = _builder.getModResourceName()
      @JvmName("setModResourceName")
      set(value) {
        _builder.setModResourceName(value)
      }
    /**
     * ```
     * mod资源名称
     * ```
     *
     * `string mod_resource_name = 2;`
     */
    public fun clearModResourceName() {
      _builder.clearModResourceName()
    }

    /**
     * ```
     * 背景色
     * ```
     *
     * `string bg_color = 3;`
     */
    public var bgColor: kotlin.String
      @JvmName("getBgColor")
      get() = _builder.getBgColor()
      @JvmName("setBgColor")
      set(value) {
        _builder.setBgColor(value)
      }
    /**
     * ```
     * 背景色
     * ```
     *
     * `string bg_color = 3;`
     */
    public fun clearBgColor() {
      _builder.clearBgColor()
    }

    /**
     * ```
     * 选中背景色
     * ```
     *
     * `string selected_bg_color = 4;`
     */
    public var selectedBgColor: kotlin.String
      @JvmName("getSelectedBgColor")
      get() = _builder.getSelectedBgColor()
      @JvmName("setSelectedBgColor")
      set(value) {
        _builder.setSelectedBgColor(value)
      }
    /**
     * ```
     * 选中背景色
     * ```
     *
     * `string selected_bg_color = 4;`
     */
    public fun clearSelectedBgColor() {
      _builder.clearSelectedBgColor()
    }

    /**
     * ```
     * 文字颜色
     * ```
     *
     * `string text_color = 5;`
     */
    public var textColor: kotlin.String
      @JvmName("getTextColor")
      get() = _builder.getTextColor()
      @JvmName("setTextColor")
      set(value) {
        _builder.setTextColor(value)
      }
    /**
     * ```
     * 文字颜色
     * ```
     *
     * `string text_color = 5;`
     */
    public fun clearTextColor() {
      _builder.clearTextColor()
    }

    /**
     * ```
     * 浅字色
     * ```
     *
     * `string light_text_color = 6;`
     */
    public var lightTextColor: kotlin.String
      @JvmName("getLightTextColor")
      get() = _builder.getLightTextColor()
      @JvmName("setLightTextColor")
      set(value) {
        _builder.setLightTextColor(value)
      }
    /**
     * ```
     * 浅字色
     * ```
     *
     * `string light_text_color = 6;`
     */
    public fun clearLightTextColor() {
      _builder.clearLightTextColor()
    }

    /**
     * ```
     * 深字色
     * ```
     *
     * `string dark_text_color = 7;`
     */
    public var darkTextColor: kotlin.String
      @JvmName("getDarkTextColor")
      get() = _builder.getDarkTextColor()
      @JvmName("setDarkTextColor")
      set(value) {
        _builder.setDarkTextColor(value)
      }
    /**
     * ```
     * 深字色
     * ```
     *
     * `string dark_text_color = 7;`
     */
    public fun clearDarkTextColor() {
      _builder.clearDarkTextColor()
    }

    /**
     * ```
     * 分割线色
     * ```
     *
     * `string divider_color = 8;`
     */
    public var dividerColor: kotlin.String
      @JvmName("getDividerColor")
      get() = _builder.getDividerColor()
      @JvmName("setDividerColor")
      set(value) {
        _builder.setDividerColor(value)
      }
    /**
     * ```
     * 分割线色
     * ```
     *
     * `string divider_color = 8;`
     */
    public fun clearDividerColor() {
      _builder.clearDividerColor()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.view.v1.ActivityResource.copy(block: `bilibili.app.view.v1`.ActivityResourceKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.ActivityResource =
  `bilibili.app.view.v1`.ActivityResourceKt.Dsl._create(this.toBuilder()).apply { block() }._build()

