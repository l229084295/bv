// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/view/v1/view.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.view.v1;

@kotlin.jvm.JvmName("-initializearcsPlayer")
public inline fun arcsPlayer(block: bilibili.app.view.v1.ArcsPlayerKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.ArcsPlayer =
  bilibili.app.view.v1.ArcsPlayerKt.Dsl._create(bilibili.app.view.v1.ArcsPlayer.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.view.v1.ArcsPlayer`
 */
public object ArcsPlayerKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.view.v1.ArcsPlayer.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.view.v1.ArcsPlayer.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.view.v1.ArcsPlayer = _builder.build()

    /**
     * ```
     * ```
     *
     * `int64 aid = 1;`
     */
    public var aid: kotlin.Long
      @JvmName("getAid")
      get() = _builder.getAid()
      @JvmName("setAid")
      set(value) {
        _builder.setAid(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 aid = 1;`
     */
    public fun clearAid() {
      _builder.clearAid()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PlayerInfoProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * ```
     *
     * `map<int64, string> player_info = 2;`
     */
     public val playerInfo: com.google.protobuf.kotlin.DslMap<kotlin.Long, kotlin.String, PlayerInfoProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getPlayerInfoMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getPlayerInfoMap()
      )
    /**
     * ```
     * ```
     *
     * `map<int64, string> player_info = 2;`
     */
    @JvmName("putPlayerInfo")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, kotlin.String, PlayerInfoProxy>
      .put(key: kotlin.Long, value: kotlin.String) {
         _builder.putPlayerInfo(key, value)
       }
    /**
     * ```
     * ```
     *
     * `map<int64, string> player_info = 2;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setPlayerInfo")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.Long, kotlin.String, PlayerInfoProxy>
      .set(key: kotlin.Long, value: kotlin.String) {
         put(key, value)
       }
    /**
     * ```
     * ```
     *
     * `map<int64, string> player_info = 2;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removePlayerInfo")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, kotlin.String, PlayerInfoProxy>
      .remove(key: kotlin.Long) {
         _builder.removePlayerInfo(key)
       }
    /**
     * ```
     * ```
     *
     * `map<int64, string> player_info = 2;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllPlayerInfo")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, kotlin.String, PlayerInfoProxy>
      .putAll(map: kotlin.collections.Map<kotlin.Long, kotlin.String>) {
         _builder.putAllPlayerInfo(map)
       }
    /**
     * ```
     * ```
     *
     * `map<int64, string> player_info = 2;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearPlayerInfo")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, kotlin.String, PlayerInfoProxy>
      .clear() {
         _builder.clearPlayerInfo()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.view.v1.ArcsPlayer.copy(block: `bilibili.app.view.v1`.ArcsPlayerKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.ArcsPlayer =
  `bilibili.app.view.v1`.ArcsPlayerKt.Dsl._create(this.toBuilder()).apply { block() }._build()

