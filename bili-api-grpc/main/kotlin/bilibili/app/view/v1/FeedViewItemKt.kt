// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/view/v1/view.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.view.v1;

@kotlin.jvm.JvmName("-initializefeedViewItem")
public inline fun feedViewItem(block: bilibili.app.view.v1.FeedViewItemKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.FeedViewItem =
  bilibili.app.view.v1.FeedViewItemKt.Dsl._create(bilibili.app.view.v1.FeedViewItem.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.view.v1.FeedViewItem`
 */
public object FeedViewItemKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.view.v1.FeedViewItem.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.view.v1.FeedViewItem.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.view.v1.FeedViewItem = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.app.view.v1.ViewReply view = 1;`
     */
    public var view: bilibili.app.view.v1.ViewReply
      @JvmName("getView")
      get() = _builder.getView()
      @JvmName("setView")
      set(value) {
        _builder.setView(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.view.v1.ViewReply view = 1;`
     */
    public fun clearView() {
      _builder.clearView()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.view.v1.ViewReply view = 1;`
     * @return Whether the view field is set.
     */
    public fun hasView(): kotlin.Boolean {
      return _builder.hasView()
    }
    public val FeedViewItemKt.Dsl.viewOrNull: bilibili.app.view.v1.ViewReply?
      get() = _builder.viewOrNull

    /**
     * ```
     * ```
     *
     * `string goto = 2;`
     */
    public var goto: kotlin.String
      @JvmName("getGoto")
      get() = _builder.getGoto()
      @JvmName("setGoto")
      set(value) {
        _builder.setGoto(value)
      }
    /**
     * ```
     * ```
     *
     * `string goto = 2;`
     */
    public fun clearGoto() {
      _builder.clearGoto()
    }

    /**
     * ```
     * ```
     *
     * `string uri = 3;`
     */
    public var uri: kotlin.String
      @JvmName("getUri")
      get() = _builder.getUri()
      @JvmName("setUri")
      set(value) {
        _builder.setUri(value)
      }
    /**
     * ```
     * ```
     *
     * `string uri = 3;`
     */
    public fun clearUri() {
      _builder.clearUri()
    }

    /**
     * ```
     * ```
     *
     * `string track_id = 4;`
     */
    public var trackId: kotlin.String
      @JvmName("getTrackId")
      get() = _builder.getTrackId()
      @JvmName("setTrackId")
      set(value) {
        _builder.setTrackId(value)
      }
    /**
     * ```
     * ```
     *
     * `string track_id = 4;`
     */
    public fun clearTrackId() {
      _builder.clearTrackId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.view.v1.FeedViewItem.copy(block: `bilibili.app.view.v1`.FeedViewItemKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.FeedViewItem =
  `bilibili.app.view.v1`.FeedViewItemKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.view.v1.FeedViewItemOrBuilder.viewOrNull: bilibili.app.view.v1.ViewReply?
  get() = if (hasView()) getView() else null

