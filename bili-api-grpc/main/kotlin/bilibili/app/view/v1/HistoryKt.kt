// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/view/v1/view.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.view.v1;

@kotlin.jvm.JvmName("-initializehistory")
public inline fun history(block: bilibili.app.view.v1.HistoryKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.History =
  bilibili.app.view.v1.HistoryKt.Dsl._create(bilibili.app.view.v1.History.newBuilder()).apply { block() }._build()
/**
 * ```
 * 稿件观看进度
 * ```
 *
 * Protobuf type `bilibili.app.view.v1.History`
 */
public object HistoryKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.view.v1.History.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.view.v1.History.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.view.v1.History = _builder.build()

    /**
     * ```
     * 播放进度分P cid
     * ```
     *
     * `int64 cid = 1;`
     */
    public var cid: kotlin.Long
      @JvmName("getCid")
      get() = _builder.getCid()
      @JvmName("setCid")
      set(value) {
        _builder.setCid(value)
      }
    /**
     * ```
     * 播放进度分P cid
     * ```
     *
     * `int64 cid = 1;`
     */
    public fun clearCid() {
      _builder.clearCid()
    }

    /**
     * ```
     * 播放进度时间
     * 0:未观看 -1:已看完 正整数:播放时间进度
     * ```
     *
     * `int64 progress = 2;`
     */
    public var progress: kotlin.Long
      @JvmName("getProgress")
      get() = _builder.getProgress()
      @JvmName("setProgress")
      set(value) {
        _builder.setProgress(value)
      }
    /**
     * ```
     * 播放进度时间
     * 0:未观看 -1:已看完 正整数:播放时间进度
     * ```
     *
     * `int64 progress = 2;`
     */
    public fun clearProgress() {
      _builder.clearProgress()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.view.v1.History.copy(block: `bilibili.app.view.v1`.HistoryKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.History =
  `bilibili.app.view.v1`.HistoryKt.Dsl._create(this.toBuilder()).apply { block() }._build()

