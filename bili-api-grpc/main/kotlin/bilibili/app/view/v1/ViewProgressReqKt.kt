// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/view/v1/view.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.view.v1;

@kotlin.jvm.JvmName("-initializeviewProgressReq")
public inline fun viewProgressReq(block: bilibili.app.view.v1.ViewProgressReqKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.ViewProgressReq =
  bilibili.app.view.v1.ViewProgressReqKt.Dsl._create(bilibili.app.view.v1.ViewProgressReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * 稿件播放中数据-请求
 * ```
 *
 * Protobuf type `bilibili.app.view.v1.ViewProgressReq`
 */
public object ViewProgressReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.view.v1.ViewProgressReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.view.v1.ViewProgressReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.view.v1.ViewProgressReq = _builder.build()

    /**
     * ```
     * 稿件avid
     * ```
     *
     * `int64 aid = 1;`
     */
    public var aid: kotlin.Long
      @JvmName("getAid")
      get() = _builder.getAid()
      @JvmName("setAid")
      set(value) {
        _builder.setAid(value)
      }
    /**
     * ```
     * 稿件avid
     * ```
     *
     * `int64 aid = 1;`
     */
    public fun clearAid() {
      _builder.clearAid()
    }

    /**
     * ```
     * 视频cid
     * ```
     *
     * `int64 cid = 2;`
     */
    public var cid: kotlin.Long
      @JvmName("getCid")
      get() = _builder.getCid()
      @JvmName("setCid")
      set(value) {
        _builder.setCid(value)
      }
    /**
     * ```
     * 视频cid
     * ```
     *
     * `int64 cid = 2;`
     */
    public fun clearCid() {
      _builder.clearCid()
    }

    /**
     * ```
     * UP主mid
     * ```
     *
     * `int64 up_mid = 3;`
     */
    public var upMid: kotlin.Long
      @JvmName("getUpMid")
      get() = _builder.getUpMid()
      @JvmName("setUpMid")
      set(value) {
        _builder.setUpMid(value)
      }
    /**
     * ```
     * UP主mid
     * ```
     *
     * `int64 up_mid = 3;`
     */
    public fun clearUpMid() {
      _builder.clearUpMid()
    }

    /**
     * ```
     * ```
     *
     * `string engine_version = 4;`
     */
    public var engineVersion: kotlin.String
      @JvmName("getEngineVersion")
      get() = _builder.getEngineVersion()
      @JvmName("setEngineVersion")
      set(value) {
        _builder.setEngineVersion(value)
      }
    /**
     * ```
     * ```
     *
     * `string engine_version = 4;`
     */
    public fun clearEngineVersion() {
      _builder.clearEngineVersion()
    }

    /**
     * ```
     * ```
     *
     * `string message_protocol = 5;`
     */
    public var messageProtocol: kotlin.String
      @JvmName("getMessageProtocol")
      get() = _builder.getMessageProtocol()
      @JvmName("setMessageProtocol")
      set(value) {
        _builder.setMessageProtocol(value)
      }
    /**
     * ```
     * ```
     *
     * `string message_protocol = 5;`
     */
    public fun clearMessageProtocol() {
      _builder.clearMessageProtocol()
    }

    /**
     * ```
     * ```
     *
     * `string service_key = 6;`
     */
    public var serviceKey: kotlin.String
      @JvmName("getServiceKey")
      get() = _builder.getServiceKey()
      @JvmName("setServiceKey")
      set(value) {
        _builder.setServiceKey(value)
      }
    /**
     * ```
     * ```
     *
     * `string service_key = 6;`
     */
    public fun clearServiceKey() {
      _builder.clearServiceKey()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.view.v1.ViewProgressReq.copy(block: `bilibili.app.view.v1`.ViewProgressReqKt.Dsl.() -> kotlin.Unit): bilibili.app.view.v1.ViewProgressReq =
  `bilibili.app.view.v1`.ViewProgressReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

