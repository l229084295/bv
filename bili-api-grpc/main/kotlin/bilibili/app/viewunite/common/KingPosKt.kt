// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/viewunite/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.viewunite.common;

@kotlin.jvm.JvmName("-initializekingPos")
public inline fun kingPos(block: bilibili.app.viewunite.common.KingPosKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.KingPos =
  bilibili.app.viewunite.common.KingPosKt.Dsl._create(bilibili.app.viewunite.common.KingPos.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.viewunite.common.KingPos`
 */
public object KingPosKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.viewunite.common.KingPos.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.viewunite.common.KingPos.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.viewunite.common.KingPos = _builder.build()

    /**
     * ```
     * ```
     *
     * `bool disable = 1;`
     */
    public var disable: kotlin.Boolean
      @JvmName("getDisable")
      get() = _builder.getDisable()
      @JvmName("setDisable")
      set(value) {
        _builder.setDisable(value)
      }
    /**
     * ```
     * ```
     *
     * `bool disable = 1;`
     */
    public fun clearDisable() {
      _builder.clearDisable()
    }

    /**
     * ```
     * ```
     *
     * `string icon = 2;`
     */
    public var icon: kotlin.String
      @JvmName("getIcon")
      get() = _builder.getIcon()
      @JvmName("setIcon")
      set(value) {
        _builder.setIcon(value)
      }
    /**
     * ```
     * ```
     *
     * `string icon = 2;`
     */
    public fun clearIcon() {
      _builder.clearIcon()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.KingPositionType type = 3;`
     */
    public var type: bilibili.app.viewunite.common.KingPositionType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    public var typeValue: kotlin.Int
      @JvmName("getTypeValue")
      get() = _builder.getTypeValue()
      @JvmName("setTypeValue")
      set(value) {
        _builder.setTypeValue(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.KingPositionType type = 3;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * ```
     * ```
     *
     * `string disable_toast = 4;`
     */
    public var disableToast: kotlin.String
      @JvmName("getDisableToast")
      get() = _builder.getDisableToast()
      @JvmName("setDisableToast")
      set(value) {
        _builder.setDisableToast(value)
      }
    /**
     * ```
     * ```
     *
     * `string disable_toast = 4;`
     */
    public fun clearDisableToast() {
      _builder.clearDisableToast()
    }

    /**
     * ```
     * ```
     *
     * `string checked_post = 5;`
     */
    public var checkedPost: kotlin.String
      @JvmName("getCheckedPost")
      get() = _builder.getCheckedPost()
      @JvmName("setCheckedPost")
      set(value) {
        _builder.setCheckedPost(value)
      }
    /**
     * ```
     * ```
     *
     * `string checked_post = 5;`
     */
    public fun clearCheckedPost() {
      _builder.clearCheckedPost()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.LikeExtend like = 6;`
     */
    public var like: bilibili.app.viewunite.common.LikeExtend
      @JvmName("getLike")
      get() = _builder.getLike()
      @JvmName("setLike")
      set(value) {
        _builder.setLike(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.LikeExtend like = 6;`
     */
    public fun clearLike() {
      _builder.clearLike()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.LikeExtend like = 6;`
     * @return Whether the like field is set.
     */
    public fun hasLike(): kotlin.Boolean {
      return _builder.hasLike()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.CoinExtend coin = 7;`
     */
    public var coin: bilibili.app.viewunite.common.CoinExtend
      @JvmName("getCoin")
      get() = _builder.getCoin()
      @JvmName("setCoin")
      set(value) {
        _builder.setCoin(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.CoinExtend coin = 7;`
     */
    public fun clearCoin() {
      _builder.clearCoin()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.CoinExtend coin = 7;`
     * @return Whether the coin field is set.
     */
    public fun hasCoin(): kotlin.Boolean {
      return _builder.hasCoin()
    }
    public val extendCase: bilibili.app.viewunite.common.KingPos.ExtendCase
      @JvmName("getExtendCase")
      get() = _builder.getExtendCase()

    public fun clearExtend() {
      _builder.clearExtend()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.viewunite.common.KingPos.copy(block: `bilibili.app.viewunite.common`.KingPosKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.KingPos =
  `bilibili.app.viewunite.common`.KingPosKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.viewunite.common.KingPosOrBuilder.likeOrNull: bilibili.app.viewunite.common.LikeExtend?
  get() = if (hasLike()) getLike() else null

public val bilibili.app.viewunite.common.KingPosOrBuilder.coinOrNull: bilibili.app.viewunite.common.CoinExtend?
  get() = if (hasCoin()) getCoin() else null

