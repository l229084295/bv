// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/viewunite/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.viewunite.common;

@kotlin.jvm.JvmName("-initializestat")
public inline fun stat(block: bilibili.app.viewunite.common.StatKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.Stat =
  bilibili.app.viewunite.common.StatKt.Dsl._create(bilibili.app.viewunite.common.Stat.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.viewunite.common.Stat`
 */
public object StatKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.viewunite.common.Stat.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.viewunite.common.Stat.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.viewunite.common.Stat = _builder.build()

    /**
     * ```
     * 视频观看时长
     * ```
     *
     * `.bilibili.app.viewunite.common.StatInfo vt = 1;`
     */
    public var vt: bilibili.app.viewunite.common.StatInfo
      @JvmName("getVt")
      get() = _builder.getVt()
      @JvmName("setVt")
      set(value) {
        _builder.setVt(value)
      }
    /**
     * ```
     * 视频观看时长
     * ```
     *
     * `.bilibili.app.viewunite.common.StatInfo vt = 1;`
     */
    public fun clearVt() {
      _builder.clearVt()
    }
    /**
     * ```
     * 视频观看时长
     * ```
     *
     * `.bilibili.app.viewunite.common.StatInfo vt = 1;`
     * @return Whether the vt field is set.
     */
    public fun hasVt(): kotlin.Boolean {
      return _builder.hasVt()
    }
    public val StatKt.Dsl.vtOrNull: bilibili.app.viewunite.common.StatInfo?
      get() = _builder.vtOrNull

    /**
     * ```
     * 弹幕
     * ```
     *
     * `.bilibili.app.viewunite.common.StatInfo danmaku = 2;`
     */
    public var danmaku: bilibili.app.viewunite.common.StatInfo
      @JvmName("getDanmaku")
      get() = _builder.getDanmaku()
      @JvmName("setDanmaku")
      set(value) {
        _builder.setDanmaku(value)
      }
    /**
     * ```
     * 弹幕
     * ```
     *
     * `.bilibili.app.viewunite.common.StatInfo danmaku = 2;`
     */
    public fun clearDanmaku() {
      _builder.clearDanmaku()
    }
    /**
     * ```
     * 弹幕
     * ```
     *
     * `.bilibili.app.viewunite.common.StatInfo danmaku = 2;`
     * @return Whether the danmaku field is set.
     */
    public fun hasDanmaku(): kotlin.Boolean {
      return _builder.hasDanmaku()
    }
    public val StatKt.Dsl.danmakuOrNull: bilibili.app.viewunite.common.StatInfo?
      get() = _builder.danmakuOrNull

    /**
     * ```
     * 回复数
     * ```
     *
     * `int64 reply = 3;`
     */
    public var reply: kotlin.Long
      @JvmName("getReply")
      get() = _builder.getReply()
      @JvmName("setReply")
      set(value) {
        _builder.setReply(value)
      }
    /**
     * ```
     * 回复数
     * ```
     *
     * `int64 reply = 3;`
     */
    public fun clearReply() {
      _builder.clearReply()
    }

    /**
     * ```
     * 收藏数
     * ```
     *
     * `int64 fav = 4;`
     */
    public var fav: kotlin.Long
      @JvmName("getFav")
      get() = _builder.getFav()
      @JvmName("setFav")
      set(value) {
        _builder.setFav(value)
      }
    /**
     * ```
     * 收藏数
     * ```
     *
     * `int64 fav = 4;`
     */
    public fun clearFav() {
      _builder.clearFav()
    }

    /**
     * ```
     * 硬币数
     * ```
     *
     * `int64 coin = 5;`
     */
    public var coin: kotlin.Long
      @JvmName("getCoin")
      get() = _builder.getCoin()
      @JvmName("setCoin")
      set(value) {
        _builder.setCoin(value)
      }
    /**
     * ```
     * 硬币数
     * ```
     *
     * `int64 coin = 5;`
     */
    public fun clearCoin() {
      _builder.clearCoin()
    }

    /**
     * ```
     * 分享数
     * ```
     *
     * `int64 share = 6;`
     */
    public var share: kotlin.Long
      @JvmName("getShare")
      get() = _builder.getShare()
      @JvmName("setShare")
      set(value) {
        _builder.setShare(value)
      }
    /**
     * ```
     * 分享数
     * ```
     *
     * `int64 share = 6;`
     */
    public fun clearShare() {
      _builder.clearShare()
    }

    /**
     * ```
     * 点赞数
     * ```
     *
     * `int64 like = 7;`
     */
    public var like: kotlin.Long
      @JvmName("getLike")
      get() = _builder.getLike()
      @JvmName("setLike")
      set(value) {
        _builder.setLike(value)
      }
    /**
     * ```
     * 点赞数
     * ```
     *
     * `int64 like = 7;`
     */
    public fun clearLike() {
      _builder.clearLike()
    }

    /**
     * ```
     * 关注数
     * ```
     *
     * `int64 follow = 8;`
     */
    public var follow: kotlin.Long
      @JvmName("getFollow")
      get() = _builder.getFollow()
      @JvmName("setFollow")
      set(value) {
        _builder.setFollow(value)
      }
    /**
     * ```
     * 关注数
     * ```
     *
     * `int64 follow = 8;`
     */
    public fun clearFollow() {
      _builder.clearFollow()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.viewunite.common.Stat.copy(block: `bilibili.app.viewunite.common`.StatKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.Stat =
  `bilibili.app.viewunite.common`.StatKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.viewunite.common.StatOrBuilder.vtOrNull: bilibili.app.viewunite.common.StatInfo?
  get() = if (hasVt()) getVt() else null

public val bilibili.app.viewunite.common.StatOrBuilder.danmakuOrNull: bilibili.app.viewunite.common.StatInfo?
  get() = if (hasDanmaku()) getDanmaku() else null

