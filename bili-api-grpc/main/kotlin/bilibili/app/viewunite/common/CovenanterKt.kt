// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/viewunite/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.viewunite.common;

@kotlin.jvm.JvmName("-initializecovenanter")
public inline fun covenanter(block: bilibili.app.viewunite.common.CovenanterKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.Covenanter =
  bilibili.app.viewunite.common.CovenanterKt.Dsl._create(bilibili.app.viewunite.common.Covenanter.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.viewunite.common.Covenanter`
 */
public object CovenanterKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.viewunite.common.Covenanter.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.viewunite.common.Covenanter.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.viewunite.common.Covenanter = _builder.build()
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.viewunite.common.Covenanter.copy(block: `bilibili.app.viewunite.common`.CovenanterKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.Covenanter =
  `bilibili.app.viewunite.common`.CovenanterKt.Dsl._create(this.toBuilder()).apply { block() }._build()

