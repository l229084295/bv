// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/viewunite/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.viewunite.common;

@kotlin.jvm.JvmName("-initializeserialSeason")
public inline fun serialSeason(block: bilibili.app.viewunite.common.SerialSeasonKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.SerialSeason =
  bilibili.app.viewunite.common.SerialSeasonKt.Dsl._create(bilibili.app.viewunite.common.SerialSeason.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.viewunite.common.SerialSeason`
 */
public object SerialSeasonKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.viewunite.common.SerialSeason.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.viewunite.common.SerialSeason.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.viewunite.common.SerialSeason = _builder.build()

    /**
     * ```
     * ```
     *
     * `int32 season_id = 1;`
     */
    public var seasonId: kotlin.Int
      @JvmName("getSeasonId")
      get() = _builder.getSeasonId()
      @JvmName("setSeasonId")
      set(value) {
        _builder.setSeasonId(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 season_id = 1;`
     */
    public fun clearSeasonId() {
      _builder.clearSeasonId()
    }

    /**
     * ```
     * ```
     *
     * `string title = 2;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * ```
     *
     * `string title = 2;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * ```
     *
     * `string season_title = 3;`
     */
    public var seasonTitle: kotlin.String
      @JvmName("getSeasonTitle")
      get() = _builder.getSeasonTitle()
      @JvmName("setSeasonTitle")
      set(value) {
        _builder.setSeasonTitle(value)
      }
    /**
     * ```
     * ```
     *
     * `string season_title = 3;`
     */
    public fun clearSeasonTitle() {
      _builder.clearSeasonTitle()
    }

    /**
     * ```
     * ```
     *
     * `int32 is_new = 4;`
     */
    public var isNew: kotlin.Int
      @JvmName("getIsNew")
      get() = _builder.getIsNew()
      @JvmName("setIsNew")
      set(value) {
        _builder.setIsNew(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 is_new = 4;`
     */
    public fun clearIsNew() {
      _builder.clearIsNew()
    }

    /**
     * ```
     * ```
     *
     * `string cover = 5;`
     */
    public var cover: kotlin.String
      @JvmName("getCover")
      get() = _builder.getCover()
      @JvmName("setCover")
      set(value) {
        _builder.setCover(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover = 5;`
     */
    public fun clearCover() {
      _builder.clearCover()
    }

    /**
     * ```
     * ```
     *
     * `string badge = 6;`
     */
    public var badge: kotlin.String
      @JvmName("getBadge")
      get() = _builder.getBadge()
      @JvmName("setBadge")
      set(value) {
        _builder.setBadge(value)
      }
    /**
     * ```
     * ```
     *
     * `string badge = 6;`
     */
    public fun clearBadge() {
      _builder.clearBadge()
    }

    /**
     * ```
     * ```
     *
     * `int32 badge_type = 7;`
     */
    public var badgeType: kotlin.Int
      @JvmName("getBadgeType")
      get() = _builder.getBadgeType()
      @JvmName("setBadgeType")
      set(value) {
        _builder.setBadgeType(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 badge_type = 7;`
     */
    public fun clearBadgeType() {
      _builder.clearBadgeType()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.BadgeInfo badge_info = 8;`
     */
    public var badgeInfo: bilibili.app.viewunite.common.BadgeInfo
      @JvmName("getBadgeInfo")
      get() = _builder.getBadgeInfo()
      @JvmName("setBadgeInfo")
      set(value) {
        _builder.setBadgeInfo(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.BadgeInfo badge_info = 8;`
     */
    public fun clearBadgeInfo() {
      _builder.clearBadgeInfo()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.BadgeInfo badge_info = 8;`
     * @return Whether the badgeInfo field is set.
     */
    public fun hasBadgeInfo(): kotlin.Boolean {
      return _builder.hasBadgeInfo()
    }
    public val SerialSeasonKt.Dsl.badgeInfoOrNull: bilibili.app.viewunite.common.BadgeInfo?
      get() = _builder.badgeInfoOrNull

    /**
     * ```
     * ```
     *
     * `string link = 9;`
     */
    public var link: kotlin.String
      @JvmName("getLink")
      get() = _builder.getLink()
      @JvmName("setLink")
      set(value) {
        _builder.setLink(value)
      }
    /**
     * ```
     * ```
     *
     * `string link = 9;`
     */
    public fun clearLink() {
      _builder.clearLink()
    }

    /**
     * ```
     * ```
     *
     * `string resource = 10;`
     */
    public var resource: kotlin.String
      @JvmName("getResource")
      get() = _builder.getResource()
      @JvmName("setResource")
      set(value) {
        _builder.setResource(value)
      }
    /**
     * ```
     * ```
     *
     * `string resource = 10;`
     */
    public fun clearResource() {
      _builder.clearResource()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.NewEp new_ep = 11;`
     */
    public var newEp: bilibili.app.viewunite.common.NewEp
      @JvmName("getNewEp")
      get() = _builder.getNewEp()
      @JvmName("setNewEp")
      set(value) {
        _builder.setNewEp(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.NewEp new_ep = 11;`
     */
    public fun clearNewEp() {
      _builder.clearNewEp()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.NewEp new_ep = 11;`
     * @return Whether the newEp field is set.
     */
    public fun hasNewEp(): kotlin.Boolean {
      return _builder.hasNewEp()
    }
    public val SerialSeasonKt.Dsl.newEpOrNull: bilibili.app.viewunite.common.NewEp?
      get() = _builder.newEpOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.viewunite.common.SerialSeason.copy(block: `bilibili.app.viewunite.common`.SerialSeasonKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.SerialSeason =
  `bilibili.app.viewunite.common`.SerialSeasonKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.viewunite.common.SerialSeasonOrBuilder.badgeInfoOrNull: bilibili.app.viewunite.common.BadgeInfo?
  get() = if (hasBadgeInfo()) getBadgeInfo() else null

public val bilibili.app.viewunite.common.SerialSeasonOrBuilder.newEpOrNull: bilibili.app.viewunite.common.NewEp?
  get() = if (hasNewEp()) getNewEp() else null

