// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/viewunite/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.viewunite.common;

@kotlin.jvm.JvmName("-initializerelateSpecial")
public inline fun relateSpecial(block: bilibili.app.viewunite.common.RelateSpecialKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.RelateSpecial =
  bilibili.app.viewunite.common.RelateSpecialKt.Dsl._create(bilibili.app.viewunite.common.RelateSpecial.newBuilder()).apply { block() }._build()
/**
 * ```
 * 视频详情下方推荐卡子类型: 其他特殊
 * ```
 *
 * Protobuf type `bilibili.app.viewunite.common.RelateSpecial`
 */
public object RelateSpecialKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.viewunite.common.RelateSpecial.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.viewunite.common.RelateSpecial.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.viewunite.common.RelateSpecial = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.BadgeInfo badge = 1;`
     */
    public var badge: bilibili.app.viewunite.common.BadgeInfo
      @JvmName("getBadge")
      get() = _builder.getBadge()
      @JvmName("setBadge")
      set(value) {
        _builder.setBadge(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.BadgeInfo badge = 1;`
     */
    public fun clearBadge() {
      _builder.clearBadge()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.BadgeInfo badge = 1;`
     * @return Whether the badge field is set.
     */
    public fun hasBadge(): kotlin.Boolean {
      return _builder.hasBadge()
    }
    public val RelateSpecialKt.Dsl.badgeOrNull: bilibili.app.viewunite.common.BadgeInfo?
      get() = _builder.badgeOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.BadgeInfo rcmd_reason = 2;`
     */
    public var rcmdReason: bilibili.app.viewunite.common.BadgeInfo
      @JvmName("getRcmdReason")
      get() = _builder.getRcmdReason()
      @JvmName("setRcmdReason")
      set(value) {
        _builder.setRcmdReason(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.BadgeInfo rcmd_reason = 2;`
     */
    public fun clearRcmdReason() {
      _builder.clearRcmdReason()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.BadgeInfo rcmd_reason = 2;`
     * @return Whether the rcmdReason field is set.
     */
    public fun hasRcmdReason(): kotlin.Boolean {
      return _builder.hasRcmdReason()
    }
    public val RelateSpecialKt.Dsl.rcmdReasonOrNull: bilibili.app.viewunite.common.BadgeInfo?
      get() = _builder.rcmdReasonOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.viewunite.common.RelateSpecial.copy(block: `bilibili.app.viewunite.common`.RelateSpecialKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.RelateSpecial =
  `bilibili.app.viewunite.common`.RelateSpecialKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.viewunite.common.RelateSpecialOrBuilder.badgeOrNull: bilibili.app.viewunite.common.BadgeInfo?
  get() = if (hasBadge()) getBadge() else null

public val bilibili.app.viewunite.common.RelateSpecialOrBuilder.rcmdReasonOrNull: bilibili.app.viewunite.common.BadgeInfo?
  get() = if (hasRcmdReason()) getRcmdReason() else null

