// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/viewunite/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.viewunite.common;

@kotlin.jvm.JvmName("-initializecardBasicInfo")
public inline fun cardBasicInfo(block: bilibili.app.viewunite.common.CardBasicInfoKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.CardBasicInfo =
  bilibili.app.viewunite.common.CardBasicInfoKt.Dsl._create(bilibili.app.viewunite.common.CardBasicInfo.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.viewunite.common.CardBasicInfo`
 */
public object CardBasicInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.viewunite.common.CardBasicInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.viewunite.common.CardBasicInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.viewunite.common.CardBasicInfo = _builder.build()

    /**
     * ```
     * ```
     *
     * `string title = 1;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * ```
     *
     * `string title = 1;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * ```
     *
     * `string desc = 2;`
     */
    public var desc: kotlin.String
      @JvmName("getDesc")
      get() = _builder.getDesc()
      @JvmName("setDesc")
      set(value) {
        _builder.setDesc(value)
      }
    /**
     * ```
     * ```
     *
     * `string desc = 2;`
     */
    public fun clearDesc() {
      _builder.clearDesc()
    }

    /**
     * ```
     * ```
     *
     * `string cover = 3;`
     */
    public var cover: kotlin.String
      @JvmName("getCover")
      get() = _builder.getCover()
      @JvmName("setCover")
      set(value) {
        _builder.setCover(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover = 3;`
     */
    public fun clearCover() {
      _builder.clearCover()
    }

    /**
     * ```
     * ```
     *
     * `string uri = 4;`
     */
    public var uri: kotlin.String
      @JvmName("getUri")
      get() = _builder.getUri()
      @JvmName("setUri")
      set(value) {
        _builder.setUri(value)
      }
    /**
     * ```
     * ```
     *
     * `string uri = 4;`
     */
    public fun clearUri() {
      _builder.clearUri()
    }

    /**
     * ```
     * ```
     *
     * `string track_id = 5;`
     */
    public var trackId: kotlin.String
      @JvmName("getTrackId")
      get() = _builder.getTrackId()
      @JvmName("setTrackId")
      set(value) {
        _builder.setTrackId(value)
      }
    /**
     * ```
     * ```
     *
     * `string track_id = 5;`
     */
    public fun clearTrackId() {
      _builder.clearTrackId()
    }

    /**
     * ```
     * ```
     *
     * `string unique_id = 6;`
     */
    public var uniqueId: kotlin.String
      @JvmName("getUniqueId")
      get() = _builder.getUniqueId()
      @JvmName("setUniqueId")
      set(value) {
        _builder.setUniqueId(value)
      }
    /**
     * ```
     * ```
     *
     * `string unique_id = 6;`
     */
    public fun clearUniqueId() {
      _builder.clearUniqueId()
    }

    /**
     * ```
     * ```
     *
     * `int64 from_source_type = 7;`
     */
    public var fromSourceType: kotlin.Long
      @JvmName("getFromSourceType")
      get() = _builder.getFromSourceType()
      @JvmName("setFromSourceType")
      set(value) {
        _builder.setFromSourceType(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 from_source_type = 7;`
     */
    public fun clearFromSourceType() {
      _builder.clearFromSourceType()
    }

    /**
     * ```
     * ```
     *
     * `string from_source_id = 8;`
     */
    public var fromSourceId: kotlin.String
      @JvmName("getFromSourceId")
      get() = _builder.getFromSourceId()
      @JvmName("setFromSourceId")
      set(value) {
        _builder.setFromSourceId(value)
      }
    /**
     * ```
     * ```
     *
     * `string from_source_id = 8;`
     */
    public fun clearFromSourceId() {
      _builder.clearFromSourceId()
    }

    /**
     * ```
     * ```
     *
     * `int64 material_id = 9;`
     */
    public var materialId: kotlin.Long
      @JvmName("getMaterialId")
      get() = _builder.getMaterialId()
      @JvmName("setMaterialId")
      set(value) {
        _builder.setMaterialId(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 material_id = 9;`
     */
    public fun clearMaterialId() {
      _builder.clearMaterialId()
    }

    /**
     * ```
     * ```
     *
     * `string cover_gif = 10;`
     */
    public var coverGif: kotlin.String
      @JvmName("getCoverGif")
      get() = _builder.getCoverGif()
      @JvmName("setCoverGif")
      set(value) {
        _builder.setCoverGif(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_gif = 10;`
     */
    public fun clearCoverGif() {
      _builder.clearCoverGif()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.Owner author = 11;`
     */
    public var author: bilibili.app.viewunite.common.Owner
      @JvmName("getAuthor")
      get() = _builder.getAuthor()
      @JvmName("setAuthor")
      set(value) {
        _builder.setAuthor(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.Owner author = 11;`
     */
    public fun clearAuthor() {
      _builder.clearAuthor()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.Owner author = 11;`
     * @return Whether the author field is set.
     */
    public fun hasAuthor(): kotlin.Boolean {
      return _builder.hasAuthor()
    }
    public val CardBasicInfoKt.Dsl.authorOrNull: bilibili.app.viewunite.common.Owner?
      get() = _builder.authorOrNull

    /**
     * ```
     * ```
     *
     * `int64 id = 12;`
     */
    public var id: kotlin.Long
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 id = 12;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * ```
     * ```
     *
     * `string from = 13;`
     */
    public var from: kotlin.String
      @JvmName("getFrom")
      get() = _builder.getFrom()
      @JvmName("setFrom")
      set(value) {
        _builder.setFrom(value)
      }
    /**
     * ```
     * ```
     *
     * `string from = 13;`
     */
    public fun clearFrom() {
      _builder.clearFrom()
    }

    /**
     * ```
     * ```
     *
     * `string from_spmid_suffix = 14;`
     */
    public var fromSpmidSuffix: kotlin.String
      @JvmName("getFromSpmidSuffix")
      get() = _builder.getFromSpmidSuffix()
      @JvmName("setFromSpmidSuffix")
      set(value) {
        _builder.setFromSpmidSuffix(value)
      }
    /**
     * ```
     * ```
     *
     * `string from_spmid_suffix = 14;`
     */
    public fun clearFromSpmidSuffix() {
      _builder.clearFromSpmidSuffix()
    }

    /**
     * ```
     * ```
     *
     * `string report_flow_data = 15;`
     */
    public var reportFlowData: kotlin.String
      @JvmName("getReportFlowData")
      get() = _builder.getReportFlowData()
      @JvmName("setReportFlowData")
      set(value) {
        _builder.setReportFlowData(value)
      }
    /**
     * ```
     * ```
     *
     * `string report_flow_data = 15;`
     */
    public fun clearReportFlowData() {
      _builder.clearReportFlowData()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.viewunite.common.CardBasicInfo.copy(block: `bilibili.app.viewunite.common`.CardBasicInfoKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.CardBasicInfo =
  `bilibili.app.viewunite.common`.CardBasicInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.viewunite.common.CardBasicInfoOrBuilder.authorOrNull: bilibili.app.viewunite.common.Owner?
  get() = if (hasAuthor()) getAuthor() else null

