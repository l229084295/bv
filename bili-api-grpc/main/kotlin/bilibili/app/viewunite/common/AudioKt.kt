// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/viewunite/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.viewunite.common;

@kotlin.jvm.JvmName("-initializeaudio")
public inline fun audio(block: bilibili.app.viewunite.common.AudioKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.Audio =
  bilibili.app.viewunite.common.AudioKt.Dsl._create(bilibili.app.viewunite.common.Audio.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.viewunite.common.Audio`
 */
public object AudioKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.viewunite.common.Audio.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.viewunite.common.Audio.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.viewunite.common.Audio = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class AudioInfoProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * ```
     *
     * `map<int64, .bilibili.app.viewunite.common.AudioInfo> audio_info = 1;`
     */
     public val audioInfo: com.google.protobuf.kotlin.DslMap<kotlin.Long, bilibili.app.viewunite.common.AudioInfo, AudioInfoProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getAudioInfoMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getAudioInfoMap()
      )
    /**
     * ```
     * ```
     *
     * `map<int64, .bilibili.app.viewunite.common.AudioInfo> audio_info = 1;`
     */
    @JvmName("putAudioInfo")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, bilibili.app.viewunite.common.AudioInfo, AudioInfoProxy>
      .put(key: kotlin.Long, value: bilibili.app.viewunite.common.AudioInfo) {
         _builder.putAudioInfo(key, value)
       }
    /**
     * ```
     * ```
     *
     * `map<int64, .bilibili.app.viewunite.common.AudioInfo> audio_info = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setAudioInfo")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.Long, bilibili.app.viewunite.common.AudioInfo, AudioInfoProxy>
      .set(key: kotlin.Long, value: bilibili.app.viewunite.common.AudioInfo) {
         put(key, value)
       }
    /**
     * ```
     * ```
     *
     * `map<int64, .bilibili.app.viewunite.common.AudioInfo> audio_info = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeAudioInfo")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, bilibili.app.viewunite.common.AudioInfo, AudioInfoProxy>
      .remove(key: kotlin.Long) {
         _builder.removeAudioInfo(key)
       }
    /**
     * ```
     * ```
     *
     * `map<int64, .bilibili.app.viewunite.common.AudioInfo> audio_info = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllAudioInfo")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, bilibili.app.viewunite.common.AudioInfo, AudioInfoProxy>
      .putAll(map: kotlin.collections.Map<kotlin.Long, bilibili.app.viewunite.common.AudioInfo>) {
         _builder.putAllAudioInfo(map)
       }
    /**
     * ```
     * ```
     *
     * `map<int64, .bilibili.app.viewunite.common.AudioInfo> audio_info = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearAudioInfo")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, bilibili.app.viewunite.common.AudioInfo, AudioInfoProxy>
      .clear() {
         _builder.clearAudioInfo()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.viewunite.common.Audio.copy(block: `bilibili.app.viewunite.common`.AudioKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.Audio =
  `bilibili.app.viewunite.common`.AudioKt.Dsl._create(this.toBuilder()).apply { block() }._build()

