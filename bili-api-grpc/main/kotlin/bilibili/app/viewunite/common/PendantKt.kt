// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/viewunite/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.viewunite.common;

@kotlin.jvm.JvmName("-initializependant")
public inline fun pendant(block: bilibili.app.viewunite.common.PendantKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.Pendant =
  bilibili.app.viewunite.common.PendantKt.Dsl._create(bilibili.app.viewunite.common.Pendant.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.viewunite.common.Pendant`
 */
public object PendantKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.viewunite.common.Pendant.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.viewunite.common.Pendant.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.viewunite.common.Pendant = _builder.build()

    /**
     * ```
     * ```
     *
     * `int32 pid = 1;`
     */
    public var pid: kotlin.Int
      @JvmName("getPid")
      get() = _builder.getPid()
      @JvmName("setPid")
      set(value) {
        _builder.setPid(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 pid = 1;`
     */
    public fun clearPid() {
      _builder.clearPid()
    }

    /**
     * ```
     * ```
     *
     * `string name = 2;`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * ```
     * ```
     *
     * `string name = 2;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * ```
     * ```
     *
     * `string image = 3;`
     */
    public var image: kotlin.String
      @JvmName("getImage")
      get() = _builder.getImage()
      @JvmName("setImage")
      set(value) {
        _builder.setImage(value)
      }
    /**
     * ```
     * ```
     *
     * `string image = 3;`
     */
    public fun clearImage() {
      _builder.clearImage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.viewunite.common.Pendant.copy(block: `bilibili.app.viewunite.common`.PendantKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.Pendant =
  `bilibili.app.viewunite.common`.PendantKt.Dsl._create(this.toBuilder()).apply { block() }._build()

