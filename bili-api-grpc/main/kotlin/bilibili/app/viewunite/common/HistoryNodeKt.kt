// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/viewunite/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.viewunite.common;

@kotlin.jvm.JvmName("-initializehistoryNode")
public inline fun historyNode(block: bilibili.app.viewunite.common.HistoryNodeKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.HistoryNode =
  bilibili.app.viewunite.common.HistoryNodeKt.Dsl._create(bilibili.app.viewunite.common.HistoryNode.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.viewunite.common.HistoryNode`
 */
public object HistoryNodeKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.viewunite.common.HistoryNode.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.viewunite.common.HistoryNode.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.viewunite.common.HistoryNode = _builder.build()

    /**
     * ```
     * ```
     *
     * `int64 node_id = 1;`
     */
    public var nodeId: kotlin.Long
      @JvmName("getNodeId")
      get() = _builder.getNodeId()
      @JvmName("setNodeId")
      set(value) {
        _builder.setNodeId(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 node_id = 1;`
     */
    public fun clearNodeId() {
      _builder.clearNodeId()
    }

    /**
     * ```
     * ```
     *
     * `string title = 2;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * ```
     *
     * `string title = 2;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * ```
     *
     * `int64 cid = 3;`
     */
    public var cid: kotlin.Long
      @JvmName("getCid")
      get() = _builder.getCid()
      @JvmName("setCid")
      set(value) {
        _builder.setCid(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 cid = 3;`
     */
    public fun clearCid() {
      _builder.clearCid()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.viewunite.common.HistoryNode.copy(block: `bilibili.app.viewunite.common`.HistoryNodeKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.HistoryNode =
  `bilibili.app.viewunite.common`.HistoryNodeKt.Dsl._create(this.toBuilder()).apply { block() }._build()

