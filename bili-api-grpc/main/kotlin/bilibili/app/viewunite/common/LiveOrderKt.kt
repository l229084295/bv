// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/viewunite/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.viewunite.common;

@kotlin.jvm.JvmName("-initializeliveOrder")
public inline fun liveOrder(block: bilibili.app.viewunite.common.LiveOrderKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.LiveOrder =
  bilibili.app.viewunite.common.LiveOrderKt.Dsl._create(bilibili.app.viewunite.common.LiveOrder.newBuilder()).apply { block() }._build()
/**
 * ```
 * 直播预约信息
 * ```
 *
 * Protobuf type `bilibili.app.viewunite.common.LiveOrder`
 */
public object LiveOrderKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.viewunite.common.LiveOrder.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.viewunite.common.LiveOrder.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.viewunite.common.LiveOrder = _builder.build()

    /**
     * ```
     * ```
     *
     * `int64 sid = 1;`
     */
    public var sid: kotlin.Long
      @JvmName("getSid")
      get() = _builder.getSid()
      @JvmName("setSid")
      set(value) {
        _builder.setSid(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 sid = 1;`
     */
    public fun clearSid() {
      _builder.clearSid()
    }

    /**
     * ```
     * ```
     *
     * `string text = 2;`
     */
    public var text: kotlin.String
      @JvmName("getText")
      get() = _builder.getText()
      @JvmName("setText")
      set(value) {
        _builder.setText(value)
      }
    /**
     * ```
     * ```
     *
     * `string text = 2;`
     */
    public fun clearText() {
      _builder.clearText()
    }

    /**
     * ```
     * ```
     *
     * `int64 live_plan_start_time = 3;`
     */
    public var livePlanStartTime: kotlin.Long
      @JvmName("getLivePlanStartTime")
      get() = _builder.getLivePlanStartTime()
      @JvmName("setLivePlanStartTime")
      set(value) {
        _builder.setLivePlanStartTime(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 live_plan_start_time = 3;`
     */
    public fun clearLivePlanStartTime() {
      _builder.clearLivePlanStartTime()
    }

    /**
     * ```
     * ```
     *
     * `bool is_follow = 4;`
     */
    public var isFollow: kotlin.Boolean
      @JvmName("getIsFollow")
      get() = _builder.getIsFollow()
      @JvmName("setIsFollow")
      set(value) {
        _builder.setIsFollow(value)
      }
    /**
     * ```
     * ```
     *
     * `bool is_follow = 4;`
     */
    public fun clearIsFollow() {
      _builder.clearIsFollow()
    }

    /**
     * ```
     * ```
     *
     * `int64 follow_count = 5;`
     */
    public var followCount: kotlin.Long
      @JvmName("getFollowCount")
      get() = _builder.getFollowCount()
      @JvmName("setFollowCount")
      set(value) {
        _builder.setFollowCount(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 follow_count = 5;`
     */
    public fun clearFollowCount() {
      _builder.clearFollowCount()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.viewunite.common.LiveOrder.copy(block: `bilibili.app.viewunite.common`.LiveOrderKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.LiveOrder =
  `bilibili.app.viewunite.common`.LiveOrderKt.Dsl._create(this.toBuilder()).apply { block() }._build()

