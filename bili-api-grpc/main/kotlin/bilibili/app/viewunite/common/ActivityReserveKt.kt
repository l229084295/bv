// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/viewunite/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.viewunite.common;

@kotlin.jvm.JvmName("-initializeactivityReserve")
public inline fun activityReserve(block: bilibili.app.viewunite.common.ActivityReserveKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.ActivityReserve =
  bilibili.app.viewunite.common.ActivityReserveKt.Dsl._create(bilibili.app.viewunite.common.ActivityReserve.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.viewunite.common.ActivityReserve`
 */
public object ActivityReserveKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.viewunite.common.ActivityReserve.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.viewunite.common.ActivityReserve.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.viewunite.common.ActivityReserve = _builder.build()

    /**
     * ```
     * ```
     *
     * `string title = 1;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * ```
     *
     * `string title = 1;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.StatInfo vt = 2;`
     */
    public var vt: bilibili.app.viewunite.common.StatInfo
      @JvmName("getVt")
      get() = _builder.getVt()
      @JvmName("setVt")
      set(value) {
        _builder.setVt(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.StatInfo vt = 2;`
     */
    public fun clearVt() {
      _builder.clearVt()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.StatInfo vt = 2;`
     * @return Whether the vt field is set.
     */
    public fun hasVt(): kotlin.Boolean {
      return _builder.hasVt()
    }
    public val ActivityReserveKt.Dsl.vtOrNull: bilibili.app.viewunite.common.StatInfo?
      get() = _builder.vtOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.StatInfo danmaku = 3;`
     */
    public var danmaku: bilibili.app.viewunite.common.StatInfo
      @JvmName("getDanmaku")
      get() = _builder.getDanmaku()
      @JvmName("setDanmaku")
      set(value) {
        _builder.setDanmaku(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.StatInfo danmaku = 3;`
     */
    public fun clearDanmaku() {
      _builder.clearDanmaku()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.StatInfo danmaku = 3;`
     * @return Whether the danmaku field is set.
     */
    public fun hasDanmaku(): kotlin.Boolean {
      return _builder.hasDanmaku()
    }
    public val ActivityReserveKt.Dsl.danmakuOrNull: bilibili.app.viewunite.common.StatInfo?
      get() = _builder.danmakuOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.ReserveButton button = 4;`
     */
    public var button: bilibili.app.viewunite.common.ReserveButton
      @JvmName("getButton")
      get() = _builder.getButton()
      @JvmName("setButton")
      set(value) {
        _builder.setButton(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.ReserveButton button = 4;`
     */
    public fun clearButton() {
      _builder.clearButton()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.ReserveButton button = 4;`
     * @return Whether the button field is set.
     */
    public fun hasButton(): kotlin.Boolean {
      return _builder.hasButton()
    }
    public val ActivityReserveKt.Dsl.buttonOrNull: bilibili.app.viewunite.common.ReserveButton?
      get() = _builder.buttonOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.viewunite.common.ActivityReserve.copy(block: `bilibili.app.viewunite.common`.ActivityReserveKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.ActivityReserve =
  `bilibili.app.viewunite.common`.ActivityReserveKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.viewunite.common.ActivityReserveOrBuilder.vtOrNull: bilibili.app.viewunite.common.StatInfo?
  get() = if (hasVt()) getVt() else null

public val bilibili.app.viewunite.common.ActivityReserveOrBuilder.danmakuOrNull: bilibili.app.viewunite.common.StatInfo?
  get() = if (hasDanmaku()) getDanmaku() else null

public val bilibili.app.viewunite.common.ActivityReserveOrBuilder.buttonOrNull: bilibili.app.viewunite.common.ReserveButton?
  get() = if (hasButton()) getButton() else null

