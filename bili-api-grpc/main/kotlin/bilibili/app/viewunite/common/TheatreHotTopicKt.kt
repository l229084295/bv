// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/viewunite/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.viewunite.common;

@kotlin.jvm.JvmName("-initializetheatreHotTopic")
public inline fun theatreHotTopic(block: bilibili.app.viewunite.common.TheatreHotTopicKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.TheatreHotTopic =
  bilibili.app.viewunite.common.TheatreHotTopicKt.Dsl._create(bilibili.app.viewunite.common.TheatreHotTopic.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.viewunite.common.TheatreHotTopic`
 */
public object TheatreHotTopicKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.viewunite.common.TheatreHotTopic.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.viewunite.common.TheatreHotTopic.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.viewunite.common.TheatreHotTopic = _builder.build()

    /**
     * ```
     * ```
     *
     * `int64 theatre_id = 1;`
     */
    public var theatreId: kotlin.Long
      @JvmName("getTheatreId")
      get() = _builder.getTheatreId()
      @JvmName("setTheatreId")
      set(value) {
        _builder.setTheatreId(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 theatre_id = 1;`
     */
    public fun clearTheatreId() {
      _builder.clearTheatreId()
    }

    /**
     * ```
     * ```
     *
     * `int64 theatre_set_id = 2;`
     */
    public var theatreSetId: kotlin.Long
      @JvmName("getTheatreSetId")
      get() = _builder.getTheatreSetId()
      @JvmName("setTheatreSetId")
      set(value) {
        _builder.setTheatreSetId(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 theatre_set_id = 2;`
     */
    public fun clearTheatreSetId() {
      _builder.clearTheatreSetId()
    }

    /**
     * ```
     * ```
     *
     * `string theatre_title = 3;`
     */
    public var theatreTitle: kotlin.String
      @JvmName("getTheatreTitle")
      get() = _builder.getTheatreTitle()
      @JvmName("setTheatreTitle")
      set(value) {
        _builder.setTheatreTitle(value)
      }
    /**
     * ```
     * ```
     *
     * `string theatre_title = 3;`
     */
    public fun clearTheatreTitle() {
      _builder.clearTheatreTitle()
    }

    /**
     * ```
     * ```
     *
     * `string background_image_url = 4;`
     */
    public var backgroundImageUrl: kotlin.String
      @JvmName("getBackgroundImageUrl")
      get() = _builder.getBackgroundImageUrl()
      @JvmName("setBackgroundImageUrl")
      set(value) {
        _builder.setBackgroundImageUrl(value)
      }
    /**
     * ```
     * ```
     *
     * `string background_image_url = 4;`
     */
    public fun clearBackgroundImageUrl() {
      _builder.clearBackgroundImageUrl()
    }

    /**
     * ```
     * ```
     *
     * `string theatre_url = 5;`
     */
    public var theatreUrl: kotlin.String
      @JvmName("getTheatreUrl")
      get() = _builder.getTheatreUrl()
      @JvmName("setTheatreUrl")
      set(value) {
        _builder.setTheatreUrl(value)
      }
    /**
     * ```
     * ```
     *
     * `string theatre_url = 5;`
     */
    public fun clearTheatreUrl() {
      _builder.clearTheatreUrl()
    }

    /**
     * ```
     * ```
     *
     * `int64 hot_topic_id = 6;`
     */
    public var hotTopicId: kotlin.Long
      @JvmName("getHotTopicId")
      get() = _builder.getHotTopicId()
      @JvmName("setHotTopicId")
      set(value) {
        _builder.setHotTopicId(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 hot_topic_id = 6;`
     */
    public fun clearHotTopicId() {
      _builder.clearHotTopicId()
    }

    /**
     * ```
     * Original one is hottopicsetid, here renamed
     * ```
     *
     * `int64 hot_topic_set_id = 7;`
     */
    public var hotTopicSetId: kotlin.Long
      @JvmName("getHotTopicSetId")
      get() = _builder.getHotTopicSetId()
      @JvmName("setHotTopicSetId")
      set(value) {
        _builder.setHotTopicSetId(value)
      }
    /**
     * ```
     * Original one is hottopicsetid, here renamed
     * ```
     *
     * `int64 hot_topic_set_id = 7;`
     */
    public fun clearHotTopicSetId() {
      _builder.clearHotTopicSetId()
    }

    /**
     * ```
     * Original one is hottopictitle, here renamed
     * ```
     *
     * `string hot_topic_title = 8;`
     */
    public var hotTopicTitle: kotlin.String
      @JvmName("getHotTopicTitle")
      get() = _builder.getHotTopicTitle()
      @JvmName("setHotTopicTitle")
      set(value) {
        _builder.setHotTopicTitle(value)
      }
    /**
     * ```
     * Original one is hottopictitle, here renamed
     * ```
     *
     * `string hot_topic_title = 8;`
     */
    public fun clearHotTopicTitle() {
      _builder.clearHotTopicTitle()
    }

    /**
     * ```
     * ```
     *
     * `string hot_topic_url = 9;`
     */
    public var hotTopicUrl: kotlin.String
      @JvmName("getHotTopicUrl")
      get() = _builder.getHotTopicUrl()
      @JvmName("setHotTopicUrl")
      set(value) {
        _builder.setHotTopicUrl(value)
      }
    /**
     * ```
     * ```
     *
     * `string hot_topic_url = 9;`
     */
    public fun clearHotTopicUrl() {
      _builder.clearHotTopicUrl()
    }

    /**
     * ```
     * ```
     *
     * `int32 is_subscribe = 10;`
     */
    public var isSubscribe: kotlin.Int
      @JvmName("getIsSubscribe")
      get() = _builder.getIsSubscribe()
      @JvmName("setIsSubscribe")
      set(value) {
        _builder.setIsSubscribe(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 is_subscribe = 10;`
     */
    public fun clearIsSubscribe() {
      _builder.clearIsSubscribe()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ReportProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * ```
     *
     * `map<string, string> report = 11;`
     */
     public val report: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ReportProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getReportMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getReportMap()
      )
    /**
     * ```
     * ```
     *
     * `map<string, string> report = 11;`
     */
    @JvmName("putReport")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ReportProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putReport(key, value)
       }
    /**
     * ```
     * ```
     *
     * `map<string, string> report = 11;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setReport")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ReportProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * ```
     * ```
     *
     * `map<string, string> report = 11;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeReport")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ReportProxy>
      .remove(key: kotlin.String) {
         _builder.removeReport(key)
       }
    /**
     * ```
     * ```
     *
     * `map<string, string> report = 11;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllReport")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ReportProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllReport(map)
       }
    /**
     * ```
     * ```
     *
     * `map<string, string> report = 11;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearReport")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ReportProxy>
      .clear() {
         _builder.clearReport()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.viewunite.common.TheatreHotTopic.copy(block: `bilibili.app.viewunite.common`.TheatreHotTopicKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.common.TheatreHotTopic =
  `bilibili.app.viewunite.common`.TheatreHotTopicKt.Dsl._create(this.toBuilder()).apply { block() }._build()

