// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/viewunite/pgcanymodel.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.viewunite.pgcanymodel;

@kotlin.jvm.JvmName("-initializemultiViewInfo")
public inline fun multiViewInfo(block: bilibili.app.viewunite.pgcanymodel.MultiViewInfoKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.pgcanymodel.MultiViewInfo =
  bilibili.app.viewunite.pgcanymodel.MultiViewInfoKt.Dsl._create(bilibili.app.viewunite.pgcanymodel.MultiViewInfo.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.viewunite.pgcanymodel.MultiViewInfo`
 */
public object MultiViewInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.viewunite.pgcanymodel.MultiViewInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.viewunite.pgcanymodel.MultiViewInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.viewunite.pgcanymodel.MultiViewInfo = _builder.build()

    /**
     * ```
     * ```
     *
     * `bool is_multi_view_season = 1;`
     */
    public var isMultiViewSeason: kotlin.Boolean
      @JvmName("getIsMultiViewSeason")
      get() = _builder.getIsMultiViewSeason()
      @JvmName("setIsMultiViewSeason")
      set(value) {
        _builder.setIsMultiViewSeason(value)
      }
    /**
     * ```
     * ```
     *
     * `bool is_multi_view_season = 1;`
     */
    public fun clearIsMultiViewSeason() {
      _builder.clearIsMultiViewSeason()
    }

    /**
     * ```
     * ```
     *
     * `string changing_dance = 2;`
     */
    public var changingDance: kotlin.String
      @JvmName("getChangingDance")
      get() = _builder.getChangingDance()
      @JvmName("setChangingDance")
      set(value) {
        _builder.setChangingDance(value)
      }
    /**
     * ```
     * ```
     *
     * `string changing_dance = 2;`
     */
    public fun clearChangingDance() {
      _builder.clearChangingDance()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.viewunite.pgcanymodel.MultiViewInfo.copy(block: `bilibili.app.viewunite.pgcanymodel`.MultiViewInfoKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.pgcanymodel.MultiViewInfo =
  `bilibili.app.viewunite.pgcanymodel`.MultiViewInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

