// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/viewunite/v1/viewunite.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.viewunite.v1;

@kotlin.jvm.JvmName("-initializeplayerIcon")
public inline fun playerIcon(block: bilibili.app.viewunite.v1.PlayerIconKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.v1.PlayerIcon =
  bilibili.app.viewunite.v1.PlayerIconKt.Dsl._create(bilibili.app.viewunite.v1.PlayerIcon.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.viewunite.v1.PlayerIcon`
 */
public object PlayerIconKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.viewunite.v1.PlayerIcon.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.viewunite.v1.PlayerIcon.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.viewunite.v1.PlayerIcon = _builder.build()

    /**
     * ```
     * ```
     *
     * `string url1 = 1;`
     */
    public var url1: kotlin.String
      @JvmName("getUrl1")
      get() = _builder.getUrl1()
      @JvmName("setUrl1")
      set(value) {
        _builder.setUrl1(value)
      }
    /**
     * ```
     * ```
     *
     * `string url1 = 1;`
     */
    public fun clearUrl1() {
      _builder.clearUrl1()
    }

    /**
     * ```
     * ```
     *
     * `string hash1 = 2;`
     */
    public var hash1: kotlin.String
      @JvmName("getHash1")
      get() = _builder.getHash1()
      @JvmName("setHash1")
      set(value) {
        _builder.setHash1(value)
      }
    /**
     * ```
     * ```
     *
     * `string hash1 = 2;`
     */
    public fun clearHash1() {
      _builder.clearHash1()
    }

    /**
     * ```
     * ```
     *
     * `string url2 = 3;`
     */
    public var url2: kotlin.String
      @JvmName("getUrl2")
      get() = _builder.getUrl2()
      @JvmName("setUrl2")
      set(value) {
        _builder.setUrl2(value)
      }
    /**
     * ```
     * ```
     *
     * `string url2 = 3;`
     */
    public fun clearUrl2() {
      _builder.clearUrl2()
    }

    /**
     * ```
     * ```
     *
     * `string hash2 = 4;`
     */
    public var hash2: kotlin.String
      @JvmName("getHash2")
      get() = _builder.getHash2()
      @JvmName("setHash2")
      set(value) {
        _builder.setHash2(value)
      }
    /**
     * ```
     * ```
     *
     * `string hash2 = 4;`
     */
    public fun clearHash2() {
      _builder.clearHash2()
    }

    /**
     * ```
     * ```
     *
     * `string drag_left_png = 5;`
     */
    public var dragLeftPng: kotlin.String
      @JvmName("getDragLeftPng")
      get() = _builder.getDragLeftPng()
      @JvmName("setDragLeftPng")
      set(value) {
        _builder.setDragLeftPng(value)
      }
    /**
     * ```
     * ```
     *
     * `string drag_left_png = 5;`
     */
    public fun clearDragLeftPng() {
      _builder.clearDragLeftPng()
    }

    /**
     * ```
     * ```
     *
     * `string middle_png = 6;`
     */
    public var middlePng: kotlin.String
      @JvmName("getMiddlePng")
      get() = _builder.getMiddlePng()
      @JvmName("setMiddlePng")
      set(value) {
        _builder.setMiddlePng(value)
      }
    /**
     * ```
     * ```
     *
     * `string middle_png = 6;`
     */
    public fun clearMiddlePng() {
      _builder.clearMiddlePng()
    }

    /**
     * ```
     * ```
     *
     * `string drag_right_png = 7;`
     */
    public var dragRightPng: kotlin.String
      @JvmName("getDragRightPng")
      get() = _builder.getDragRightPng()
      @JvmName("setDragRightPng")
      set(value) {
        _builder.setDragRightPng(value)
      }
    /**
     * ```
     * ```
     *
     * `string drag_right_png = 7;`
     */
    public fun clearDragRightPng() {
      _builder.clearDragRightPng()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.IconData drag_data = 8;`
     */
    public var dragData: bilibili.app.viewunite.v1.IconData
      @JvmName("getDragData")
      get() = _builder.getDragData()
      @JvmName("setDragData")
      set(value) {
        _builder.setDragData(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.IconData drag_data = 8;`
     */
    public fun clearDragData() {
      _builder.clearDragData()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.IconData drag_data = 8;`
     * @return Whether the dragData field is set.
     */
    public fun hasDragData(): kotlin.Boolean {
      return _builder.hasDragData()
    }
    public val PlayerIconKt.Dsl.dragDataOrNull: bilibili.app.viewunite.v1.IconData?
      get() = _builder.dragDataOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.IconData nodrag_data = 9;`
     */
    public var nodragData: bilibili.app.viewunite.v1.IconData
      @JvmName("getNodragData")
      get() = _builder.getNodragData()
      @JvmName("setNodragData")
      set(value) {
        _builder.setNodragData(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.IconData nodrag_data = 9;`
     */
    public fun clearNodragData() {
      _builder.clearNodragData()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.IconData nodrag_data = 9;`
     * @return Whether the nodragData field is set.
     */
    public fun hasNodragData(): kotlin.Boolean {
      return _builder.hasNodragData()
    }
    public val PlayerIconKt.Dsl.nodragDataOrNull: bilibili.app.viewunite.v1.IconData?
      get() = _builder.nodragDataOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.viewunite.v1.PlayerIcon.copy(block: `bilibili.app.viewunite.v1`.PlayerIconKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.v1.PlayerIcon =
  `bilibili.app.viewunite.v1`.PlayerIconKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.viewunite.v1.PlayerIconOrBuilder.dragDataOrNull: bilibili.app.viewunite.v1.IconData?
  get() = if (hasDragData()) getDragData() else null

public val bilibili.app.viewunite.v1.PlayerIconOrBuilder.nodragDataOrNull: bilibili.app.viewunite.v1.IconData?
  get() = if (hasNodragData()) getNodragData() else null

