// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/viewunite/v1/viewunite.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.viewunite.v1;

@kotlin.jvm.JvmName("-initializeiconData")
public inline fun iconData(block: bilibili.app.viewunite.v1.IconDataKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.v1.IconData =
  bilibili.app.viewunite.v1.IconDataKt.Dsl._create(bilibili.app.viewunite.v1.IconData.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.viewunite.v1.IconData`
 */
public object IconDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.viewunite.v1.IconData.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.viewunite.v1.IconData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.viewunite.v1.IconData = _builder.build()

    /**
     * ```
     * ```
     *
     * `string meta_json = 1;`
     */
    public var metaJson: kotlin.String
      @JvmName("getMetaJson")
      get() = _builder.getMetaJson()
      @JvmName("setMetaJson")
      set(value) {
        _builder.setMetaJson(value)
      }
    /**
     * ```
     * ```
     *
     * `string meta_json = 1;`
     */
    public fun clearMetaJson() {
      _builder.clearMetaJson()
    }

    /**
     * ```
     * ```
     *
     * `string sprits_img = 2;`
     */
    public var spritsImg: kotlin.String
      @JvmName("getSpritsImg")
      get() = _builder.getSpritsImg()
      @JvmName("setSpritsImg")
      set(value) {
        _builder.setSpritsImg(value)
      }
    /**
     * ```
     * ```
     *
     * `string sprits_img = 2;`
     */
    public fun clearSpritsImg() {
      _builder.clearSpritsImg()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.viewunite.v1.IconData.copy(block: `bilibili.app.viewunite.v1`.IconDataKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.v1.IconData =
  `bilibili.app.viewunite.v1`.IconDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

