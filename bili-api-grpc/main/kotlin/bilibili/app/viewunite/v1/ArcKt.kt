// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/viewunite/v1/viewunite.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.viewunite.v1;

@kotlin.jvm.JvmName("-initializearc")
public inline fun arc(block: bilibili.app.viewunite.v1.ArcKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.v1.Arc =
  bilibili.app.viewunite.v1.ArcKt.Dsl._create(bilibili.app.viewunite.v1.Arc.newBuilder()).apply { block() }._build()
/**
 * ```
 * 业务信息
 * ```
 *
 * Protobuf type `bilibili.app.viewunite.v1.Arc`
 */
public object ArcKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.viewunite.v1.Arc.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.viewunite.v1.Arc.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.viewunite.v1.Arc = _builder.build()

    /**
     * ```
     * ```
     *
     * `int64 aid = 1;`
     */
    public var aid: kotlin.Long
      @JvmName("getAid")
      get() = _builder.getAid()
      @JvmName("setAid")
      set(value) {
        _builder.setAid(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 aid = 1;`
     */
    public fun clearAid() {
      _builder.clearAid()
    }

    /**
     * ```
     * ```
     *
     * `int64 cid = 2;`
     */
    public var cid: kotlin.Long
      @JvmName("getCid")
      get() = _builder.getCid()
      @JvmName("setCid")
      set(value) {
        _builder.setCid(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 cid = 2;`
     */
    public fun clearCid() {
      _builder.clearCid()
    }

    /**
     * ```
     * ```
     *
     * `int64 duration = 3;`
     */
    public var duration: kotlin.Long
      @JvmName("getDuration")
      get() = _builder.getDuration()
      @JvmName("setDuration")
      set(value) {
        _builder.setDuration(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 duration = 3;`
     */
    public fun clearDuration() {
      _builder.clearDuration()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.Stat stat = 4;`
     */
    public var stat: bilibili.app.viewunite.common.Stat
      @JvmName("getStat")
      get() = _builder.getStat()
      @JvmName("setStat")
      set(value) {
        _builder.setStat(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.Stat stat = 4;`
     */
    public fun clearStat() {
      _builder.clearStat()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.Stat stat = 4;`
     * @return Whether the stat field is set.
     */
    public fun hasStat(): kotlin.Boolean {
      return _builder.hasStat()
    }
    public val ArcKt.Dsl.statOrNull: bilibili.app.viewunite.common.Stat?
      get() = _builder.statOrNull

    /**
     * ```
     * ```
     *
     * `string bvid = 5;`
     */
    public var bvid: kotlin.String
      @JvmName("getBvid")
      get() = _builder.getBvid()
      @JvmName("setBvid")
      set(value) {
        _builder.setBvid(value)
      }
    /**
     * ```
     * ```
     *
     * `string bvid = 5;`
     */
    public fun clearBvid() {
      _builder.clearBvid()
    }

    /**
     * ```
     * ```
     *
     * `int32 copyright = 6;`
     */
    public var copyright: kotlin.Int
      @JvmName("getCopyright")
      get() = _builder.getCopyright()
      @JvmName("setCopyright")
      set(value) {
        _builder.setCopyright(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 copyright = 6;`
     */
    public fun clearCopyright() {
      _builder.clearCopyright()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.Rights right = 7;`
     */
    public var right: bilibili.app.viewunite.v1.Rights
      @JvmName("getRight")
      get() = _builder.getRight()
      @JvmName("setRight")
      set(value) {
        _builder.setRight(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.Rights right = 7;`
     */
    public fun clearRight() {
      _builder.clearRight()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.Rights right = 7;`
     * @return Whether the right field is set.
     */
    public fun hasRight(): kotlin.Boolean {
      return _builder.hasRight()
    }
    public val ArcKt.Dsl.rightOrNull: bilibili.app.viewunite.v1.Rights?
      get() = _builder.rightOrNull

    /**
     * ```
     * ```
     *
     * `string cover = 8;`
     */
    public var cover: kotlin.String
      @JvmName("getCover")
      get() = _builder.getCover()
      @JvmName("setCover")
      set(value) {
        _builder.setCover(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover = 8;`
     */
    public fun clearCover() {
      _builder.clearCover()
    }

    /**
     * ```
     * ```
     *
     * `int64 type_id = 9;`
     */
    public var typeId: kotlin.Long
      @JvmName("getTypeId")
      get() = _builder.getTypeId()
      @JvmName("setTypeId")
      set(value) {
        _builder.setTypeId(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 type_id = 9;`
     */
    public fun clearTypeId() {
      _builder.clearTypeId()
    }

    /**
     * ```
     * ```
     *
     * `string title = 10;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * ```
     *
     * `string title = 10;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.viewunite.v1.Arc.copy(block: `bilibili.app.viewunite.v1`.ArcKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.v1.Arc =
  `bilibili.app.viewunite.v1`.ArcKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.viewunite.v1.ArcOrBuilder.statOrNull: bilibili.app.viewunite.common.Stat?
  get() = if (hasStat()) getStat() else null

public val bilibili.app.viewunite.v1.ArcOrBuilder.rightOrNull: bilibili.app.viewunite.v1.Rights?
  get() = if (hasRight()) getRight() else null

