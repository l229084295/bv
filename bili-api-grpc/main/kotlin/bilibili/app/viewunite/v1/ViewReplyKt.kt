// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/viewunite/v1/viewunite.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.viewunite.v1;

@kotlin.jvm.JvmName("-initializeviewReply")
public inline fun viewReply(block: bilibili.app.viewunite.v1.ViewReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.v1.ViewReply =
  bilibili.app.viewunite.v1.ViewReplyKt.Dsl._create(bilibili.app.viewunite.v1.ViewReply.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.viewunite.v1.ViewReply`
 */
public object ViewReplyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.viewunite.v1.ViewReply.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.viewunite.v1.ViewReply.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.viewunite.v1.ViewReply = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.ViewBase view_base = 1;`
     */
    public var viewBase: bilibili.app.viewunite.v1.ViewBase
      @JvmName("getViewBase")
      get() = _builder.getViewBase()
      @JvmName("setViewBase")
      set(value) {
        _builder.setViewBase(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.ViewBase view_base = 1;`
     */
    public fun clearViewBase() {
      _builder.clearViewBase()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.ViewBase view_base = 1;`
     * @return Whether the viewBase field is set.
     */
    public fun hasViewBase(): kotlin.Boolean {
      return _builder.hasViewBase()
    }
    public val ViewReplyKt.Dsl.viewBaseOrNull: bilibili.app.viewunite.v1.ViewBase?
      get() = _builder.viewBaseOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.Arc arc = 2;`
     */
    public var arc: bilibili.app.viewunite.v1.Arc
      @JvmName("getArc")
      get() = _builder.getArc()
      @JvmName("setArc")
      set(value) {
        _builder.setArc(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.Arc arc = 2;`
     */
    public fun clearArc() {
      _builder.clearArc()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.Arc arc = 2;`
     * @return Whether the arc field is set.
     */
    public fun hasArc(): kotlin.Boolean {
      return _builder.hasArc()
    }
    public val ViewReplyKt.Dsl.arcOrNull: bilibili.app.viewunite.v1.Arc?
      get() = _builder.arcOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.ReqUser req_user = 3;`
     */
    public var reqUser: bilibili.app.viewunite.v1.ReqUser
      @JvmName("getReqUser")
      get() = _builder.getReqUser()
      @JvmName("setReqUser")
      set(value) {
        _builder.setReqUser(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.ReqUser req_user = 3;`
     */
    public fun clearReqUser() {
      _builder.clearReqUser()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.ReqUser req_user = 3;`
     * @return Whether the reqUser field is set.
     */
    public fun hasReqUser(): kotlin.Boolean {
      return _builder.hasReqUser()
    }
    public val ViewReplyKt.Dsl.reqUserOrNull: bilibili.app.viewunite.v1.ReqUser?
      get() = _builder.reqUserOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.Owner owner = 4;`
     */
    public var owner: bilibili.app.viewunite.common.Owner
      @JvmName("getOwner")
      get() = _builder.getOwner()
      @JvmName("setOwner")
      set(value) {
        _builder.setOwner(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.Owner owner = 4;`
     */
    public fun clearOwner() {
      _builder.clearOwner()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.common.Owner owner = 4;`
     * @return Whether the owner field is set.
     */
    public fun hasOwner(): kotlin.Boolean {
      return _builder.hasOwner()
    }
    public val ViewReplyKt.Dsl.ownerOrNull: bilibili.app.viewunite.common.Owner?
      get() = _builder.ownerOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.Tab tab = 5;`
     */
    public var tab: bilibili.app.viewunite.v1.Tab
      @JvmName("getTab")
      get() = _builder.getTab()
      @JvmName("setTab")
      set(value) {
        _builder.setTab(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.Tab tab = 5;`
     */
    public fun clearTab() {
      _builder.clearTab()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.Tab tab = 5;`
     * @return Whether the tab field is set.
     */
    public fun hasTab(): kotlin.Boolean {
      return _builder.hasTab()
    }
    public val ViewReplyKt.Dsl.tabOrNull: bilibili.app.viewunite.v1.Tab?
      get() = _builder.tabOrNull

    /**
     * ```
     * ```
     *
     * `.google.protobuf.Any supplement = 6;`
     */
    public var supplement: com.google.protobuf.Any
      @JvmName("getSupplement")
      get() = _builder.getSupplement()
      @JvmName("setSupplement")
      set(value) {
        _builder.setSupplement(value)
      }
    /**
     * ```
     * ```
     *
     * `.google.protobuf.Any supplement = 6;`
     */
    public fun clearSupplement() {
      _builder.clearSupplement()
    }
    /**
     * ```
     * ```
     *
     * `.google.protobuf.Any supplement = 6;`
     * @return Whether the supplement field is set.
     */
    public fun hasSupplement(): kotlin.Boolean {
      return _builder.hasSupplement()
    }
    public val ViewReplyKt.Dsl.supplementOrNull: com.google.protobuf.Any?
      get() = _builder.supplementOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.CM cm = 7;`
     */
    public var cm: bilibili.app.viewunite.v1.CM
      @JvmName("getCm")
      get() = _builder.getCm()
      @JvmName("setCm")
      set(value) {
        _builder.setCm(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.CM cm = 7;`
     */
    public fun clearCm() {
      _builder.clearCm()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.CM cm = 7;`
     * @return Whether the cm field is set.
     */
    public fun hasCm(): kotlin.Boolean {
      return _builder.hasCm()
    }
    public val ViewReplyKt.Dsl.cmOrNull: bilibili.app.viewunite.v1.CM?
      get() = _builder.cmOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.ECode ecode = 8;`
     */
    public var ecode: bilibili.app.viewunite.v1.ECode
      @JvmName("getEcode")
      get() = _builder.getEcode()
      @JvmName("setEcode")
      set(value) {
        _builder.setEcode(value)
      }
    public var ecodeValue: kotlin.Int
      @JvmName("getEcodeValue")
      get() = _builder.getEcodeValue()
      @JvmName("setEcodeValue")
      set(value) {
        _builder.setEcodeValue(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.ECode ecode = 8;`
     */
    public fun clearEcode() {
      _builder.clearEcode()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.ECodeConfig ecode_config = 9;`
     */
    public var ecodeConfig: bilibili.app.viewunite.v1.ECodeConfig
      @JvmName("getEcodeConfig")
      get() = _builder.getEcodeConfig()
      @JvmName("setEcodeConfig")
      set(value) {
        _builder.setEcodeConfig(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.ECodeConfig ecode_config = 9;`
     */
    public fun clearEcodeConfig() {
      _builder.clearEcodeConfig()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.viewunite.v1.ECodeConfig ecode_config = 9;`
     * @return Whether the ecodeConfig field is set.
     */
    public fun hasEcodeConfig(): kotlin.Boolean {
      return _builder.hasEcodeConfig()
    }
    public val ViewReplyKt.Dsl.ecodeConfigOrNull: bilibili.app.viewunite.v1.ECodeConfig?
      get() = _builder.ecodeConfigOrNull

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ReportProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * ```
     *
     * `map<string, string> report = 10;`
     */
     public val report: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ReportProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getReportMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getReportMap()
      )
    /**
     * ```
     * ```
     *
     * `map<string, string> report = 10;`
     */
    @JvmName("putReport")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ReportProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putReport(key, value)
       }
    /**
     * ```
     * ```
     *
     * `map<string, string> report = 10;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setReport")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ReportProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * ```
     * ```
     *
     * `map<string, string> report = 10;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeReport")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ReportProxy>
      .remove(key: kotlin.String) {
         _builder.removeReport(key)
       }
    /**
     * ```
     * ```
     *
     * `map<string, string> report = 10;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllReport")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ReportProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllReport(map)
       }
    /**
     * ```
     * ```
     *
     * `map<string, string> report = 10;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearReport")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ReportProxy>
      .clear() {
         _builder.clearReport()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.viewunite.v1.ViewReply.copy(block: `bilibili.app.viewunite.v1`.ViewReplyKt.Dsl.() -> kotlin.Unit): bilibili.app.viewunite.v1.ViewReply =
  `bilibili.app.viewunite.v1`.ViewReplyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.viewunite.v1.ViewReplyOrBuilder.viewBaseOrNull: bilibili.app.viewunite.v1.ViewBase?
  get() = if (hasViewBase()) getViewBase() else null

public val bilibili.app.viewunite.v1.ViewReplyOrBuilder.arcOrNull: bilibili.app.viewunite.v1.Arc?
  get() = if (hasArc()) getArc() else null

public val bilibili.app.viewunite.v1.ViewReplyOrBuilder.reqUserOrNull: bilibili.app.viewunite.v1.ReqUser?
  get() = if (hasReqUser()) getReqUser() else null

public val bilibili.app.viewunite.v1.ViewReplyOrBuilder.ownerOrNull: bilibili.app.viewunite.common.Owner?
  get() = if (hasOwner()) getOwner() else null

public val bilibili.app.viewunite.v1.ViewReplyOrBuilder.tabOrNull: bilibili.app.viewunite.v1.Tab?
  get() = if (hasTab()) getTab() else null

public val bilibili.app.viewunite.v1.ViewReplyOrBuilder.supplementOrNull: com.google.protobuf.Any?
  get() = if (hasSupplement()) getSupplement() else null

public val bilibili.app.viewunite.v1.ViewReplyOrBuilder.cmOrNull: bilibili.app.viewunite.v1.CM?
  get() = if (hasCm()) getCm() else null

public val bilibili.app.viewunite.v1.ViewReplyOrBuilder.ecodeConfigOrNull: bilibili.app.viewunite.v1.ECodeConfig?
  get() = if (hasEcodeConfig()) getEcodeConfig() else null

