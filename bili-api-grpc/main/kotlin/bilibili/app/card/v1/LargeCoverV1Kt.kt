// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/card/v1/single.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.card.v1;

@kotlin.jvm.JvmName("-initializelargeCoverV1")
public inline fun largeCoverV1(block: bilibili.app.card.v1.LargeCoverV1Kt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.LargeCoverV1 =
  bilibili.app.card.v1.LargeCoverV1Kt.Dsl._create(bilibili.app.card.v1.LargeCoverV1.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.card.v1.LargeCoverV1`
 */
public object LargeCoverV1Kt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.card.v1.LargeCoverV1.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.card.v1.LargeCoverV1.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.card.v1.LargeCoverV1 = _builder.build()

    /**
     * ```
     * 条目基本信息
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public var base: bilibili.app.card.v1.Base
      @JvmName("getBase")
      get() = _builder.getBase()
      @JvmName("setBase")
      set(value) {
        _builder.setBase(value)
      }
    /**
     * ```
     * 条目基本信息
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public fun clearBase() {
      _builder.clearBase()
    }
    /**
     * ```
     * 条目基本信息
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     * @return Whether the base field is set.
     */
    public fun hasBase(): kotlin.Boolean {
      return _builder.hasBase()
    }
    public val LargeCoverV1Kt.Dsl.baseOrNull: bilibili.app.card.v1.Base?
      get() = _builder.baseOrNull

    /**
     * ```
     * ```
     *
     * `string cover_gif = 2;`
     */
    public var coverGif: kotlin.String
      @JvmName("getCoverGif")
      get() = _builder.getCoverGif()
      @JvmName("setCoverGif")
      set(value) {
        _builder.setCoverGif(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_gif = 2;`
     */
    public fun clearCoverGif() {
      _builder.clearCoverGif()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Avatar avatar = 3;`
     */
    public var avatar: bilibili.app.card.v1.Avatar
      @JvmName("getAvatar")
      get() = _builder.getAvatar()
      @JvmName("setAvatar")
      set(value) {
        _builder.setAvatar(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Avatar avatar = 3;`
     */
    public fun clearAvatar() {
      _builder.clearAvatar()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Avatar avatar = 3;`
     * @return Whether the avatar field is set.
     */
    public fun hasAvatar(): kotlin.Boolean {
      return _builder.hasAvatar()
    }
    public val LargeCoverV1Kt.Dsl.avatarOrNull: bilibili.app.card.v1.Avatar?
      get() = _builder.avatarOrNull

    /**
     * ```
     * ```
     *
     * `string cover_left_text_1 = 4;`
     */
    public var coverLeftText1: kotlin.String
      @JvmName("getCoverLeftText1")
      get() = _builder.getCoverLeftText1()
      @JvmName("setCoverLeftText1")
      set(value) {
        _builder.setCoverLeftText1(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_left_text_1 = 4;`
     */
    public fun clearCoverLeftText1() {
      _builder.clearCoverLeftText1()
    }

    /**
     * ```
     * ```
     *
     * `string cover_left_text_2 = 5;`
     */
    public var coverLeftText2: kotlin.String
      @JvmName("getCoverLeftText2")
      get() = _builder.getCoverLeftText2()
      @JvmName("setCoverLeftText2")
      set(value) {
        _builder.setCoverLeftText2(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_left_text_2 = 5;`
     */
    public fun clearCoverLeftText2() {
      _builder.clearCoverLeftText2()
    }

    /**
     * ```
     * ```
     *
     * `string cover_left_text_3 = 6;`
     */
    public var coverLeftText3: kotlin.String
      @JvmName("getCoverLeftText3")
      get() = _builder.getCoverLeftText3()
      @JvmName("setCoverLeftText3")
      set(value) {
        _builder.setCoverLeftText3(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_left_text_3 = 6;`
     */
    public fun clearCoverLeftText3() {
      _builder.clearCoverLeftText3()
    }

    /**
     * ```
     * ```
     *
     * `string cover_badge = 7;`
     */
    public var coverBadge: kotlin.String
      @JvmName("getCoverBadge")
      get() = _builder.getCoverBadge()
      @JvmName("setCoverBadge")
      set(value) {
        _builder.setCoverBadge(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_badge = 7;`
     */
    public fun clearCoverBadge() {
      _builder.clearCoverBadge()
    }

    /**
     * ```
     * ```
     *
     * `string top_rcmd_reason = 8;`
     */
    public var topRcmdReason: kotlin.String
      @JvmName("getTopRcmdReason")
      get() = _builder.getTopRcmdReason()
      @JvmName("setTopRcmdReason")
      set(value) {
        _builder.setTopRcmdReason(value)
      }
    /**
     * ```
     * ```
     *
     * `string top_rcmd_reason = 8;`
     */
    public fun clearTopRcmdReason() {
      _builder.clearTopRcmdReason()
    }

    /**
     * ```
     * ```
     *
     * `string bottom_rcmd_reason = 9;`
     */
    public var bottomRcmdReason: kotlin.String
      @JvmName("getBottomRcmdReason")
      get() = _builder.getBottomRcmdReason()
      @JvmName("setBottomRcmdReason")
      set(value) {
        _builder.setBottomRcmdReason(value)
      }
    /**
     * ```
     * ```
     *
     * `string bottom_rcmd_reason = 9;`
     */
    public fun clearBottomRcmdReason() {
      _builder.clearBottomRcmdReason()
    }

    /**
     * ```
     * ```
     *
     * `string desc = 10;`
     */
    public var desc: kotlin.String
      @JvmName("getDesc")
      get() = _builder.getDesc()
      @JvmName("setDesc")
      set(value) {
        _builder.setDesc(value)
      }
    /**
     * ```
     * ```
     *
     * `string desc = 10;`
     */
    public fun clearDesc() {
      _builder.clearDesc()
    }

    /**
     * ```
     * ```
     *
     * `int32 official_icon = 11;`
     */
    public var officialIcon: kotlin.Int
      @JvmName("getOfficialIcon")
      get() = _builder.getOfficialIcon()
      @JvmName("setOfficialIcon")
      set(value) {
        _builder.setOfficialIcon(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 official_icon = 11;`
     */
    public fun clearOfficialIcon() {
      _builder.clearOfficialIcon()
    }

    /**
     * ```
     * ```
     *
     * `int32 can_play = 12;`
     */
    public var canPlay: kotlin.Int
      @JvmName("getCanPlay")
      get() = _builder.getCanPlay()
      @JvmName("setCanPlay")
      set(value) {
        _builder.setCanPlay(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 can_play = 12;`
     */
    public fun clearCanPlay() {
      _builder.clearCanPlay()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle top_rcmd_reason_style = 13;`
     */
    public var topRcmdReasonStyle: bilibili.app.card.v1.ReasonStyle
      @JvmName("getTopRcmdReasonStyle")
      get() = _builder.getTopRcmdReasonStyle()
      @JvmName("setTopRcmdReasonStyle")
      set(value) {
        _builder.setTopRcmdReasonStyle(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle top_rcmd_reason_style = 13;`
     */
    public fun clearTopRcmdReasonStyle() {
      _builder.clearTopRcmdReasonStyle()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle top_rcmd_reason_style = 13;`
     * @return Whether the topRcmdReasonStyle field is set.
     */
    public fun hasTopRcmdReasonStyle(): kotlin.Boolean {
      return _builder.hasTopRcmdReasonStyle()
    }
    public val LargeCoverV1Kt.Dsl.topRcmdReasonStyleOrNull: bilibili.app.card.v1.ReasonStyle?
      get() = _builder.topRcmdReasonStyleOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle bottom_rcmd_reason_style = 14;`
     */
    public var bottomRcmdReasonStyle: bilibili.app.card.v1.ReasonStyle
      @JvmName("getBottomRcmdReasonStyle")
      get() = _builder.getBottomRcmdReasonStyle()
      @JvmName("setBottomRcmdReasonStyle")
      set(value) {
        _builder.setBottomRcmdReasonStyle(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle bottom_rcmd_reason_style = 14;`
     */
    public fun clearBottomRcmdReasonStyle() {
      _builder.clearBottomRcmdReasonStyle()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle bottom_rcmd_reason_style = 14;`
     * @return Whether the bottomRcmdReasonStyle field is set.
     */
    public fun hasBottomRcmdReasonStyle(): kotlin.Boolean {
      return _builder.hasBottomRcmdReasonStyle()
    }
    public val LargeCoverV1Kt.Dsl.bottomRcmdReasonStyleOrNull: bilibili.app.card.v1.ReasonStyle?
      get() = _builder.bottomRcmdReasonStyleOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle rcmd_reason_style_v2 = 15;`
     */
    public var rcmdReasonStyleV2: bilibili.app.card.v1.ReasonStyle
      @JvmName("getRcmdReasonStyleV2")
      get() = _builder.getRcmdReasonStyleV2()
      @JvmName("setRcmdReasonStyleV2")
      set(value) {
        _builder.setRcmdReasonStyleV2(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle rcmd_reason_style_v2 = 15;`
     */
    public fun clearRcmdReasonStyleV2() {
      _builder.clearRcmdReasonStyleV2()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle rcmd_reason_style_v2 = 15;`
     * @return Whether the rcmdReasonStyleV2 field is set.
     */
    public fun hasRcmdReasonStyleV2(): kotlin.Boolean {
      return _builder.hasRcmdReasonStyleV2()
    }
    public val LargeCoverV1Kt.Dsl.rcmdReasonStyleV2OrNull: bilibili.app.card.v1.ReasonStyle?
      get() = _builder.rcmdReasonStyleV2OrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle left_cover_badge_style = 16;`
     */
    public var leftCoverBadgeStyle: bilibili.app.card.v1.ReasonStyle
      @JvmName("getLeftCoverBadgeStyle")
      get() = _builder.getLeftCoverBadgeStyle()
      @JvmName("setLeftCoverBadgeStyle")
      set(value) {
        _builder.setLeftCoverBadgeStyle(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle left_cover_badge_style = 16;`
     */
    public fun clearLeftCoverBadgeStyle() {
      _builder.clearLeftCoverBadgeStyle()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle left_cover_badge_style = 16;`
     * @return Whether the leftCoverBadgeStyle field is set.
     */
    public fun hasLeftCoverBadgeStyle(): kotlin.Boolean {
      return _builder.hasLeftCoverBadgeStyle()
    }
    public val LargeCoverV1Kt.Dsl.leftCoverBadgeStyleOrNull: bilibili.app.card.v1.ReasonStyle?
      get() = _builder.leftCoverBadgeStyleOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle right_cover_badge_style = 17;`
     */
    public var rightCoverBadgeStyle: bilibili.app.card.v1.ReasonStyle
      @JvmName("getRightCoverBadgeStyle")
      get() = _builder.getRightCoverBadgeStyle()
      @JvmName("setRightCoverBadgeStyle")
      set(value) {
        _builder.setRightCoverBadgeStyle(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle right_cover_badge_style = 17;`
     */
    public fun clearRightCoverBadgeStyle() {
      _builder.clearRightCoverBadgeStyle()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle right_cover_badge_style = 17;`
     * @return Whether the rightCoverBadgeStyle field is set.
     */
    public fun hasRightCoverBadgeStyle(): kotlin.Boolean {
      return _builder.hasRightCoverBadgeStyle()
    }
    public val LargeCoverV1Kt.Dsl.rightCoverBadgeStyleOrNull: bilibili.app.card.v1.ReasonStyle?
      get() = _builder.rightCoverBadgeStyleOrNull

    /**
     * ```
     * ```
     *
     * `string cover_badge_2 = 18;`
     */
    public var coverBadge2: kotlin.String
      @JvmName("getCoverBadge2")
      get() = _builder.getCoverBadge2()
      @JvmName("setCoverBadge2")
      set(value) {
        _builder.setCoverBadge2(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_badge_2 = 18;`
     */
    public fun clearCoverBadge2() {
      _builder.clearCoverBadge2()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.LikeButton like_button = 19;`
     */
    public var likeButton: bilibili.app.card.v1.LikeButton
      @JvmName("getLikeButton")
      get() = _builder.getLikeButton()
      @JvmName("setLikeButton")
      set(value) {
        _builder.setLikeButton(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.LikeButton like_button = 19;`
     */
    public fun clearLikeButton() {
      _builder.clearLikeButton()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.LikeButton like_button = 19;`
     * @return Whether the likeButton field is set.
     */
    public fun hasLikeButton(): kotlin.Boolean {
      return _builder.hasLikeButton()
    }
    public val LargeCoverV1Kt.Dsl.likeButtonOrNull: bilibili.app.card.v1.LikeButton?
      get() = _builder.likeButtonOrNull

    /**
     * ```
     * ```
     *
     * `int32 title_single_line = 20;`
     */
    public var titleSingleLine: kotlin.Int
      @JvmName("getTitleSingleLine")
      get() = _builder.getTitleSingleLine()
      @JvmName("setTitleSingleLine")
      set(value) {
        _builder.setTitleSingleLine(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 title_single_line = 20;`
     */
    public fun clearTitleSingleLine() {
      _builder.clearTitleSingleLine()
    }

    /**
     * ```
     * ```
     *
     * `string cover_right_text = 21;`
     */
    public var coverRightText: kotlin.String
      @JvmName("getCoverRightText")
      get() = _builder.getCoverRightText()
      @JvmName("setCoverRightText")
      set(value) {
        _builder.setCoverRightText(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_right_text = 21;`
     */
    public fun clearCoverRightText() {
      _builder.clearCoverRightText()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.card.v1.LargeCoverV1.copy(block: `bilibili.app.card.v1`.LargeCoverV1Kt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.LargeCoverV1 =
  `bilibili.app.card.v1`.LargeCoverV1Kt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.card.v1.LargeCoverV1OrBuilder.baseOrNull: bilibili.app.card.v1.Base?
  get() = if (hasBase()) getBase() else null

public val bilibili.app.card.v1.LargeCoverV1OrBuilder.avatarOrNull: bilibili.app.card.v1.Avatar?
  get() = if (hasAvatar()) getAvatar() else null

public val bilibili.app.card.v1.LargeCoverV1OrBuilder.topRcmdReasonStyleOrNull: bilibili.app.card.v1.ReasonStyle?
  get() = if (hasTopRcmdReasonStyle()) getTopRcmdReasonStyle() else null

public val bilibili.app.card.v1.LargeCoverV1OrBuilder.bottomRcmdReasonStyleOrNull: bilibili.app.card.v1.ReasonStyle?
  get() = if (hasBottomRcmdReasonStyle()) getBottomRcmdReasonStyle() else null

public val bilibili.app.card.v1.LargeCoverV1OrBuilder.rcmdReasonStyleV2OrNull: bilibili.app.card.v1.ReasonStyle?
  get() = if (hasRcmdReasonStyleV2()) getRcmdReasonStyleV2() else null

public val bilibili.app.card.v1.LargeCoverV1OrBuilder.leftCoverBadgeStyleOrNull: bilibili.app.card.v1.ReasonStyle?
  get() = if (hasLeftCoverBadgeStyle()) getLeftCoverBadgeStyle() else null

public val bilibili.app.card.v1.LargeCoverV1OrBuilder.rightCoverBadgeStyleOrNull: bilibili.app.card.v1.ReasonStyle?
  get() = if (hasRightCoverBadgeStyle()) getRightCoverBadgeStyle() else null

public val bilibili.app.card.v1.LargeCoverV1OrBuilder.likeButtonOrNull: bilibili.app.card.v1.LikeButton?
  get() = if (hasLikeButton()) getLikeButton() else null

