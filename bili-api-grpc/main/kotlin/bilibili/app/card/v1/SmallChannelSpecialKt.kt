// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/card/v1/double.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.card.v1;

@kotlin.jvm.JvmName("-initializesmallChannelSpecial")
public inline fun smallChannelSpecial(block: bilibili.app.card.v1.SmallChannelSpecialKt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.SmallChannelSpecial =
  bilibili.app.card.v1.SmallChannelSpecialKt.Dsl._create(bilibili.app.card.v1.SmallChannelSpecial.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.card.v1.SmallChannelSpecial`
 */
public object SmallChannelSpecialKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.card.v1.SmallChannelSpecial.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.card.v1.SmallChannelSpecial.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.card.v1.SmallChannelSpecial = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public var base: bilibili.app.card.v1.Base
      @JvmName("getBase")
      get() = _builder.getBase()
      @JvmName("setBase")
      set(value) {
        _builder.setBase(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public fun clearBase() {
      _builder.clearBase()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     * @return Whether the base field is set.
     */
    public fun hasBase(): kotlin.Boolean {
      return _builder.hasBase()
    }
    public val SmallChannelSpecialKt.Dsl.baseOrNull: bilibili.app.card.v1.Base?
      get() = _builder.baseOrNull

    /**
     * ```
     * ```
     *
     * `string bg_cover = 2;`
     */
    public var bgCover: kotlin.String
      @JvmName("getBgCover")
      get() = _builder.getBgCover()
      @JvmName("setBgCover")
      set(value) {
        _builder.setBgCover(value)
      }
    /**
     * ```
     * ```
     *
     * `string bg_cover = 2;`
     */
    public fun clearBgCover() {
      _builder.clearBgCover()
    }

    /**
     * ```
     * ```
     *
     * `string desc_1 = 3;`
     */
    public var desc1: kotlin.String
      @JvmName("getDesc1")
      get() = _builder.getDesc1()
      @JvmName("setDesc1")
      set(value) {
        _builder.setDesc1(value)
      }
    /**
     * ```
     * ```
     *
     * `string desc_1 = 3;`
     */
    public fun clearDesc1() {
      _builder.clearDesc1()
    }

    /**
     * ```
     * ```
     *
     * `string desc_2 = 4;`
     */
    public var desc2: kotlin.String
      @JvmName("getDesc2")
      get() = _builder.getDesc2()
      @JvmName("setDesc2")
      set(value) {
        _builder.setDesc2(value)
      }
    /**
     * ```
     * ```
     *
     * `string desc_2 = 4;`
     */
    public fun clearDesc2() {
      _builder.clearDesc2()
    }

    /**
     * ```
     * ```
     *
     * `string badge = 5;`
     */
    public var badge: kotlin.String
      @JvmName("getBadge")
      get() = _builder.getBadge()
      @JvmName("setBadge")
      set(value) {
        _builder.setBadge(value)
      }
    /**
     * ```
     * ```
     *
     * `string badge = 5;`
     */
    public fun clearBadge() {
      _builder.clearBadge()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle rcmd_reason_style_2 = 6;`
     */
    public var rcmdReasonStyle2: bilibili.app.card.v1.ReasonStyle
      @JvmName("getRcmdReasonStyle2")
      get() = _builder.getRcmdReasonStyle2()
      @JvmName("setRcmdReasonStyle2")
      set(value) {
        _builder.setRcmdReasonStyle2(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle rcmd_reason_style_2 = 6;`
     */
    public fun clearRcmdReasonStyle2() {
      _builder.clearRcmdReasonStyle2()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle rcmd_reason_style_2 = 6;`
     * @return Whether the rcmdReasonStyle2 field is set.
     */
    public fun hasRcmdReasonStyle2(): kotlin.Boolean {
      return _builder.hasRcmdReasonStyle2()
    }
    public val SmallChannelSpecialKt.Dsl.rcmdReasonStyle2OrNull: bilibili.app.card.v1.ReasonStyle?
      get() = _builder.rcmdReasonStyle2OrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.card.v1.SmallChannelSpecial.copy(block: `bilibili.app.card.v1`.SmallChannelSpecialKt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.SmallChannelSpecial =
  `bilibili.app.card.v1`.SmallChannelSpecialKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.card.v1.SmallChannelSpecialOrBuilder.baseOrNull: bilibili.app.card.v1.Base?
  get() = if (hasBase()) getBase() else null

public val bilibili.app.card.v1.SmallChannelSpecialOrBuilder.rcmdReasonStyle2OrNull: bilibili.app.card.v1.ReasonStyle?
  get() = if (hasRcmdReasonStyle2()) getRcmdReasonStyle2() else null

