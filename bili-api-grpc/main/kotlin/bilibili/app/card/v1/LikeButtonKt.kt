// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/card/v1/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.card.v1;

@kotlin.jvm.JvmName("-initializelikeButton")
public inline fun likeButton(block: bilibili.app.card.v1.LikeButtonKt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.LikeButton =
  bilibili.app.card.v1.LikeButtonKt.Dsl._create(bilibili.app.card.v1.LikeButton.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.card.v1.LikeButton`
 */
public object LikeButtonKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.card.v1.LikeButton.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.card.v1.LikeButton.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.card.v1.LikeButton = _builder.build()

    /**
     * ```
     * ```
     *
     * `int64 Aid = 1;`
     */
    public var aid: kotlin.Long
      @JvmName("getAid")
      get() = _builder.getAid()
      @JvmName("setAid")
      set(value) {
        _builder.setAid(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 Aid = 1;`
     */
    public fun clearAid() {
      _builder.clearAid()
    }

    /**
     * ```
     * ```
     *
     * `int32 count = 2;`
     */
    public var count: kotlin.Int
      @JvmName("getCount")
      get() = _builder.getCount()
      @JvmName("setCount")
      set(value) {
        _builder.setCount(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 count = 2;`
     */
    public fun clearCount() {
      _builder.clearCount()
    }

    /**
     * ```
     * ```
     *
     * `bool show_count = 3;`
     */
    public var showCount: kotlin.Boolean
      @JvmName("getShowCount")
      get() = _builder.getShowCount()
      @JvmName("setShowCount")
      set(value) {
        _builder.setShowCount(value)
      }
    /**
     * ```
     * ```
     *
     * `bool show_count = 3;`
     */
    public fun clearShowCount() {
      _builder.clearShowCount()
    }

    /**
     * ```
     * ```
     *
     * `string event = 4;`
     */
    public var event: kotlin.String
      @JvmName("getEvent")
      get() = _builder.getEvent()
      @JvmName("setEvent")
      set(value) {
        _builder.setEvent(value)
      }
    /**
     * ```
     * ```
     *
     * `string event = 4;`
     */
    public fun clearEvent() {
      _builder.clearEvent()
    }

    /**
     * ```
     * ```
     *
     * `int32 selected = 5;`
     */
    public var selected: kotlin.Int
      @JvmName("getSelected")
      get() = _builder.getSelected()
      @JvmName("setSelected")
      set(value) {
        _builder.setSelected(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 selected = 5;`
     */
    public fun clearSelected() {
      _builder.clearSelected()
    }

    /**
     * ```
     * ```
     *
     * `string event_v2 = 6;`
     */
    public var eventV2: kotlin.String
      @JvmName("getEventV2")
      get() = _builder.getEventV2()
      @JvmName("setEventV2")
      set(value) {
        _builder.setEventV2(value)
      }
    /**
     * ```
     * ```
     *
     * `string event_v2 = 6;`
     */
    public fun clearEventV2() {
      _builder.clearEventV2()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.card.v1.LikeButton.copy(block: `bilibili.app.card.v1`.LikeButtonKt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.LikeButton =
  `bilibili.app.card.v1`.LikeButtonKt.Dsl._create(this.toBuilder()).apply { block() }._build()

