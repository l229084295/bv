// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/card/v1/double.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.card.v1;

@kotlin.jvm.JvmName("-initializesmallCoverV9")
public inline fun smallCoverV9(block: bilibili.app.card.v1.SmallCoverV9Kt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.SmallCoverV9 =
  bilibili.app.card.v1.SmallCoverV9Kt.Dsl._create(bilibili.app.card.v1.SmallCoverV9.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.card.v1.SmallCoverV9`
 */
public object SmallCoverV9Kt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.card.v1.SmallCoverV9.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.card.v1.SmallCoverV9.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.card.v1.SmallCoverV9 = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public var base: bilibili.app.card.v1.Base
      @JvmName("getBase")
      get() = _builder.getBase()
      @JvmName("setBase")
      set(value) {
        _builder.setBase(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public fun clearBase() {
      _builder.clearBase()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     * @return Whether the base field is set.
     */
    public fun hasBase(): kotlin.Boolean {
      return _builder.hasBase()
    }
    public val SmallCoverV9Kt.Dsl.baseOrNull: bilibili.app.card.v1.Base?
      get() = _builder.baseOrNull

    /**
     * ```
     * ```
     *
     * `string cover_left_text_1 = 2;`
     */
    public var coverLeftText1: kotlin.String
      @JvmName("getCoverLeftText1")
      get() = _builder.getCoverLeftText1()
      @JvmName("setCoverLeftText1")
      set(value) {
        _builder.setCoverLeftText1(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_left_text_1 = 2;`
     */
    public fun clearCoverLeftText1() {
      _builder.clearCoverLeftText1()
    }

    /**
     * ```
     * ```
     *
     * `int32 cover_left_icon_1 = 3;`
     */
    public var coverLeftIcon1: kotlin.Int
      @JvmName("getCoverLeftIcon1")
      get() = _builder.getCoverLeftIcon1()
      @JvmName("setCoverLeftIcon1")
      set(value) {
        _builder.setCoverLeftIcon1(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 cover_left_icon_1 = 3;`
     */
    public fun clearCoverLeftIcon1() {
      _builder.clearCoverLeftIcon1()
    }

    /**
     * ```
     * ```
     *
     * `string cover_left_text_2 = 4;`
     */
    public var coverLeftText2: kotlin.String
      @JvmName("getCoverLeftText2")
      get() = _builder.getCoverLeftText2()
      @JvmName("setCoverLeftText2")
      set(value) {
        _builder.setCoverLeftText2(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_left_text_2 = 4;`
     */
    public fun clearCoverLeftText2() {
      _builder.clearCoverLeftText2()
    }

    /**
     * ```
     * ```
     *
     * `int32 cover_left_icon_2 = 5;`
     */
    public var coverLeftIcon2: kotlin.Int
      @JvmName("getCoverLeftIcon2")
      get() = _builder.getCoverLeftIcon2()
      @JvmName("setCoverLeftIcon2")
      set(value) {
        _builder.setCoverLeftIcon2(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 cover_left_icon_2 = 5;`
     */
    public fun clearCoverLeftIcon2() {
      _builder.clearCoverLeftIcon2()
    }

    /**
     * ```
     * ```
     *
     * `string cover_right_text = 6;`
     */
    public var coverRightText: kotlin.String
      @JvmName("getCoverRightText")
      get() = _builder.getCoverRightText()
      @JvmName("setCoverRightText")
      set(value) {
        _builder.setCoverRightText(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_right_text = 6;`
     */
    public fun clearCoverRightText() {
      _builder.clearCoverRightText()
    }

    /**
     * ```
     * ```
     *
     * `int32 cover_right_icon = 7;`
     */
    public var coverRightIcon: kotlin.Int
      @JvmName("getCoverRightIcon")
      get() = _builder.getCoverRightIcon()
      @JvmName("setCoverRightIcon")
      set(value) {
        _builder.setCoverRightIcon(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 cover_right_icon = 7;`
     */
    public fun clearCoverRightIcon() {
      _builder.clearCoverRightIcon()
    }

    /**
     * ```
     * ```
     *
     * `int32 can_play = 8;`
     */
    public var canPlay: kotlin.Int
      @JvmName("getCanPlay")
      get() = _builder.getCanPlay()
      @JvmName("setCanPlay")
      set(value) {
        _builder.setCanPlay(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 can_play = 8;`
     */
    public fun clearCanPlay() {
      _builder.clearCanPlay()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle rcmd_reason_style = 9;`
     */
    public var rcmdReasonStyle: bilibili.app.card.v1.ReasonStyle
      @JvmName("getRcmdReasonStyle")
      get() = _builder.getRcmdReasonStyle()
      @JvmName("setRcmdReasonStyle")
      set(value) {
        _builder.setRcmdReasonStyle(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle rcmd_reason_style = 9;`
     */
    public fun clearRcmdReasonStyle() {
      _builder.clearRcmdReasonStyle()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle rcmd_reason_style = 9;`
     * @return Whether the rcmdReasonStyle field is set.
     */
    public fun hasRcmdReasonStyle(): kotlin.Boolean {
      return _builder.hasRcmdReasonStyle()
    }
    public val SmallCoverV9Kt.Dsl.rcmdReasonStyleOrNull: bilibili.app.card.v1.ReasonStyle?
      get() = _builder.rcmdReasonStyleOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Up up = 10;`
     */
    public var up: bilibili.app.card.v1.Up
      @JvmName("getUp")
      get() = _builder.getUp()
      @JvmName("setUp")
      set(value) {
        _builder.setUp(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Up up = 10;`
     */
    public fun clearUp() {
      _builder.clearUp()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Up up = 10;`
     * @return Whether the up field is set.
     */
    public fun hasUp(): kotlin.Boolean {
      return _builder.hasUp()
    }
    public val SmallCoverV9Kt.Dsl.upOrNull: bilibili.app.card.v1.Up?
      get() = _builder.upOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle left_cover_badge_style = 11;`
     */
    public var leftCoverBadgeStyle: bilibili.app.card.v1.ReasonStyle
      @JvmName("getLeftCoverBadgeStyle")
      get() = _builder.getLeftCoverBadgeStyle()
      @JvmName("setLeftCoverBadgeStyle")
      set(value) {
        _builder.setLeftCoverBadgeStyle(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle left_cover_badge_style = 11;`
     */
    public fun clearLeftCoverBadgeStyle() {
      _builder.clearLeftCoverBadgeStyle()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle left_cover_badge_style = 11;`
     * @return Whether the leftCoverBadgeStyle field is set.
     */
    public fun hasLeftCoverBadgeStyle(): kotlin.Boolean {
      return _builder.hasLeftCoverBadgeStyle()
    }
    public val SmallCoverV9Kt.Dsl.leftCoverBadgeStyleOrNull: bilibili.app.card.v1.ReasonStyle?
      get() = _builder.leftCoverBadgeStyleOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle left_bottom_rcmd_reason_style = 12;`
     */
    public var leftBottomRcmdReasonStyle: bilibili.app.card.v1.ReasonStyle
      @JvmName("getLeftBottomRcmdReasonStyle")
      get() = _builder.getLeftBottomRcmdReasonStyle()
      @JvmName("setLeftBottomRcmdReasonStyle")
      set(value) {
        _builder.setLeftBottomRcmdReasonStyle(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle left_bottom_rcmd_reason_style = 12;`
     */
    public fun clearLeftBottomRcmdReasonStyle() {
      _builder.clearLeftBottomRcmdReasonStyle()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle left_bottom_rcmd_reason_style = 12;`
     * @return Whether the leftBottomRcmdReasonStyle field is set.
     */
    public fun hasLeftBottomRcmdReasonStyle(): kotlin.Boolean {
      return _builder.hasLeftBottomRcmdReasonStyle()
    }
    public val SmallCoverV9Kt.Dsl.leftBottomRcmdReasonStyleOrNull: bilibili.app.card.v1.ReasonStyle?
      get() = _builder.leftBottomRcmdReasonStyleOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.card.v1.SmallCoverV9.copy(block: `bilibili.app.card.v1`.SmallCoverV9Kt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.SmallCoverV9 =
  `bilibili.app.card.v1`.SmallCoverV9Kt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.card.v1.SmallCoverV9OrBuilder.baseOrNull: bilibili.app.card.v1.Base?
  get() = if (hasBase()) getBase() else null

public val bilibili.app.card.v1.SmallCoverV9OrBuilder.rcmdReasonStyleOrNull: bilibili.app.card.v1.ReasonStyle?
  get() = if (hasRcmdReasonStyle()) getRcmdReasonStyle() else null

public val bilibili.app.card.v1.SmallCoverV9OrBuilder.upOrNull: bilibili.app.card.v1.Up?
  get() = if (hasUp()) getUp() else null

public val bilibili.app.card.v1.SmallCoverV9OrBuilder.leftCoverBadgeStyleOrNull: bilibili.app.card.v1.ReasonStyle?
  get() = if (hasLeftCoverBadgeStyle()) getLeftCoverBadgeStyle() else null

public val bilibili.app.card.v1.SmallCoverV9OrBuilder.leftBottomRcmdReasonStyleOrNull: bilibili.app.card.v1.ReasonStyle?
  get() = if (hasLeftBottomRcmdReasonStyle()) getLeftBottomRcmdReasonStyle() else null

