// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/card/v1/single.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.card.v1;

@kotlin.jvm.JvmName("-initializemiddleCoverV3")
public inline fun middleCoverV3(block: bilibili.app.card.v1.MiddleCoverV3Kt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.MiddleCoverV3 =
  bilibili.app.card.v1.MiddleCoverV3Kt.Dsl._create(bilibili.app.card.v1.MiddleCoverV3.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.card.v1.MiddleCoverV3`
 */
public object MiddleCoverV3Kt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.card.v1.MiddleCoverV3.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.card.v1.MiddleCoverV3.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.card.v1.MiddleCoverV3 = _builder.build()

    /**
     * ```
     * 条目基本信息
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public var base: bilibili.app.card.v1.Base
      @JvmName("getBase")
      get() = _builder.getBase()
      @JvmName("setBase")
      set(value) {
        _builder.setBase(value)
      }
    /**
     * ```
     * 条目基本信息
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public fun clearBase() {
      _builder.clearBase()
    }
    /**
     * ```
     * 条目基本信息
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     * @return Whether the base field is set.
     */
    public fun hasBase(): kotlin.Boolean {
      return _builder.hasBase()
    }
    public val MiddleCoverV3Kt.Dsl.baseOrNull: bilibili.app.card.v1.Base?
      get() = _builder.baseOrNull

    /**
     * ```
     * ```
     *
     * `string desc1 = 2;`
     */
    public var desc1: kotlin.String
      @JvmName("getDesc1")
      get() = _builder.getDesc1()
      @JvmName("setDesc1")
      set(value) {
        _builder.setDesc1(value)
      }
    /**
     * ```
     * ```
     *
     * `string desc1 = 2;`
     */
    public fun clearDesc1() {
      _builder.clearDesc1()
    }

    /**
     * ```
     * ```
     *
     * `string desc2 = 3;`
     */
    public var desc2: kotlin.String
      @JvmName("getDesc2")
      get() = _builder.getDesc2()
      @JvmName("setDesc2")
      set(value) {
        _builder.setDesc2(value)
      }
    /**
     * ```
     * ```
     *
     * `string desc2 = 3;`
     */
    public fun clearDesc2() {
      _builder.clearDesc2()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle cover_badge_style = 4;`
     */
    public var coverBadgeStyle: bilibili.app.card.v1.ReasonStyle
      @JvmName("getCoverBadgeStyle")
      get() = _builder.getCoverBadgeStyle()
      @JvmName("setCoverBadgeStyle")
      set(value) {
        _builder.setCoverBadgeStyle(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle cover_badge_style = 4;`
     */
    public fun clearCoverBadgeStyle() {
      _builder.clearCoverBadgeStyle()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle cover_badge_style = 4;`
     * @return Whether the coverBadgeStyle field is set.
     */
    public fun hasCoverBadgeStyle(): kotlin.Boolean {
      return _builder.hasCoverBadgeStyle()
    }
    public val MiddleCoverV3Kt.Dsl.coverBadgeStyleOrNull: bilibili.app.card.v1.ReasonStyle?
      get() = _builder.coverBadgeStyleOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.card.v1.MiddleCoverV3.copy(block: `bilibili.app.card.v1`.MiddleCoverV3Kt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.MiddleCoverV3 =
  `bilibili.app.card.v1`.MiddleCoverV3Kt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.card.v1.MiddleCoverV3OrBuilder.baseOrNull: bilibili.app.card.v1.Base?
  get() = if (hasBase()) getBase() else null

public val bilibili.app.card.v1.MiddleCoverV3OrBuilder.coverBadgeStyleOrNull: bilibili.app.card.v1.ReasonStyle?
  get() = if (hasCoverBadgeStyle()) getCoverBadgeStyle() else null

