// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/card/v1/double.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.card.v1;

@kotlin.jvm.JvmName("-initializemiddleCoverV2")
public inline fun middleCoverV2(block: bilibili.app.card.v1.MiddleCoverV2Kt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.MiddleCoverV2 =
  bilibili.app.card.v1.MiddleCoverV2Kt.Dsl._create(bilibili.app.card.v1.MiddleCoverV2.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.card.v1.MiddleCoverV2`
 */
public object MiddleCoverV2Kt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.card.v1.MiddleCoverV2.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.card.v1.MiddleCoverV2.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.card.v1.MiddleCoverV2 = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public var base: bilibili.app.card.v1.Base
      @JvmName("getBase")
      get() = _builder.getBase()
      @JvmName("setBase")
      set(value) {
        _builder.setBase(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public fun clearBase() {
      _builder.clearBase()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     * @return Whether the base field is set.
     */
    public fun hasBase(): kotlin.Boolean {
      return _builder.hasBase()
    }
    public val MiddleCoverV2Kt.Dsl.baseOrNull: bilibili.app.card.v1.Base?
      get() = _builder.baseOrNull

    /**
     * ```
     * ```
     *
     * `int32 ratio = 2;`
     */
    public var ratio: kotlin.Int
      @JvmName("getRatio")
      get() = _builder.getRatio()
      @JvmName("setRatio")
      set(value) {
        _builder.setRatio(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 ratio = 2;`
     */
    public fun clearRatio() {
      _builder.clearRatio()
    }

    /**
     * ```
     * ```
     *
     * `string desc = 3;`
     */
    public var desc: kotlin.String
      @JvmName("getDesc")
      get() = _builder.getDesc()
      @JvmName("setDesc")
      set(value) {
        _builder.setDesc(value)
      }
    /**
     * ```
     * ```
     *
     * `string desc = 3;`
     */
    public fun clearDesc() {
      _builder.clearDesc()
    }

    /**
     * ```
     * ```
     *
     * `string badge = 4;`
     */
    public var badge: kotlin.String
      @JvmName("getBadge")
      get() = _builder.getBadge()
      @JvmName("setBadge")
      set(value) {
        _builder.setBadge(value)
      }
    /**
     * ```
     * ```
     *
     * `string badge = 4;`
     */
    public fun clearBadge() {
      _builder.clearBadge()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.card.v1.MiddleCoverV2.copy(block: `bilibili.app.card.v1`.MiddleCoverV2Kt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.MiddleCoverV2 =
  `bilibili.app.card.v1`.MiddleCoverV2Kt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.card.v1.MiddleCoverV2OrBuilder.baseOrNull: bilibili.app.card.v1.Base?
  get() = if (hasBase()) getBase() else null

