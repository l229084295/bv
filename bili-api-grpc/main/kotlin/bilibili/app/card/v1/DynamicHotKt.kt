// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/card/v1/single.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.card.v1;

@kotlin.jvm.JvmName("-initializedynamicHot")
public inline fun dynamicHot(block: bilibili.app.card.v1.DynamicHotKt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.DynamicHot =
  bilibili.app.card.v1.DynamicHotKt.Dsl._create(bilibili.app.card.v1.DynamicHot.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.card.v1.DynamicHot`
 */
public object DynamicHotKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.card.v1.DynamicHot.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.card.v1.DynamicHot.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.card.v1.DynamicHot = _builder.build()

    /**
     * ```
     * 条目基本信息
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public var base: bilibili.app.card.v1.Base
      @JvmName("getBase")
      get() = _builder.getBase()
      @JvmName("setBase")
      set(value) {
        _builder.setBase(value)
      }
    /**
     * ```
     * 条目基本信息
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public fun clearBase() {
      _builder.clearBase()
    }
    /**
     * ```
     * 条目基本信息
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     * @return Whether the base field is set.
     */
    public fun hasBase(): kotlin.Boolean {
      return _builder.hasBase()
    }
    public val DynamicHotKt.Dsl.baseOrNull: bilibili.app.card.v1.Base?
      get() = _builder.baseOrNull

    /**
     * ```
     * ```
     *
     * `string top_left_title = 2;`
     */
    public var topLeftTitle: kotlin.String
      @JvmName("getTopLeftTitle")
      get() = _builder.getTopLeftTitle()
      @JvmName("setTopLeftTitle")
      set(value) {
        _builder.setTopLeftTitle(value)
      }
    /**
     * ```
     * ```
     *
     * `string top_left_title = 2;`
     */
    public fun clearTopLeftTitle() {
      _builder.clearTopLeftTitle()
    }

    /**
     * ```
     * ```
     *
     * `string desc1 = 3;`
     */
    public var desc1: kotlin.String
      @JvmName("getDesc1")
      get() = _builder.getDesc1()
      @JvmName("setDesc1")
      set(value) {
        _builder.setDesc1(value)
      }
    /**
     * ```
     * ```
     *
     * `string desc1 = 3;`
     */
    public fun clearDesc1() {
      _builder.clearDesc1()
    }

    /**
     * ```
     * ```
     *
     * `string desc2 = 4;`
     */
    public var desc2: kotlin.String
      @JvmName("getDesc2")
      get() = _builder.getDesc2()
      @JvmName("setDesc2")
      set(value) {
        _builder.setDesc2(value)
      }
    /**
     * ```
     * ```
     *
     * `string desc2 = 4;`
     */
    public fun clearDesc2() {
      _builder.clearDesc2()
    }

    /**
     * ```
     * ```
     *
     * `string more_uri = 5;`
     */
    public var moreUri: kotlin.String
      @JvmName("getMoreUri")
      get() = _builder.getMoreUri()
      @JvmName("setMoreUri")
      set(value) {
        _builder.setMoreUri(value)
      }
    /**
     * ```
     * ```
     *
     * `string more_uri = 5;`
     */
    public fun clearMoreUri() {
      _builder.clearMoreUri()
    }

    /**
     * ```
     * ```
     *
     * `string more_text = 6;`
     */
    public var moreText: kotlin.String
      @JvmName("getMoreText")
      get() = _builder.getMoreText()
      @JvmName("setMoreText")
      set(value) {
        _builder.setMoreText(value)
      }
    /**
     * ```
     * ```
     *
     * `string more_text = 6;`
     */
    public fun clearMoreText() {
      _builder.clearMoreText()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class CoversProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * ```
     *
     * `repeated string covers = 7;`
     * @return A list containing the covers.
     */
    public val covers: com.google.protobuf.kotlin.DslList<kotlin.String, CoversProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getCoversList()
      )
    /**
     * ```
     * ```
     *
     * `repeated string covers = 7;`
     * @param value The covers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addCovers")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, CoversProxy>.add(value: kotlin.String) {
      _builder.addCovers(value)
    }
    /**
     * ```
     * ```
     *
     * `repeated string covers = 7;`
     * @param value The covers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignCovers")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, CoversProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * ```
     * ```
     *
     * `repeated string covers = 7;`
     * @param values The covers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllCovers")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, CoversProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllCovers(values)
    }
    /**
     * ```
     * ```
     *
     * `repeated string covers = 7;`
     * @param values The covers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllCovers")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, CoversProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * ```
     * ```
     *
     * `repeated string covers = 7;`
     * @param index The index to set the value at.
     * @param value The covers to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setCovers")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, CoversProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setCovers(index, value)
    }/**
     * ```
     * ```
     *
     * `repeated string covers = 7;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearCovers")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, CoversProxy>.clear() {
      _builder.clearCovers()
    }
    /**
     * ```
     * ```
     *
     * `string cover_right_text = 8;`
     */
    public var coverRightText: kotlin.String
      @JvmName("getCoverRightText")
      get() = _builder.getCoverRightText()
      @JvmName("setCoverRightText")
      set(value) {
        _builder.setCoverRightText(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_right_text = 8;`
     */
    public fun clearCoverRightText() {
      _builder.clearCoverRightText()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle top_rcmd_reason_style = 9;`
     */
    public var topRcmdReasonStyle: bilibili.app.card.v1.ReasonStyle
      @JvmName("getTopRcmdReasonStyle")
      get() = _builder.getTopRcmdReasonStyle()
      @JvmName("setTopRcmdReasonStyle")
      set(value) {
        _builder.setTopRcmdReasonStyle(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle top_rcmd_reason_style = 9;`
     */
    public fun clearTopRcmdReasonStyle() {
      _builder.clearTopRcmdReasonStyle()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle top_rcmd_reason_style = 9;`
     * @return Whether the topRcmdReasonStyle field is set.
     */
    public fun hasTopRcmdReasonStyle(): kotlin.Boolean {
      return _builder.hasTopRcmdReasonStyle()
    }
    public val DynamicHotKt.Dsl.topRcmdReasonStyleOrNull: bilibili.app.card.v1.ReasonStyle?
      get() = _builder.topRcmdReasonStyleOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.card.v1.DynamicHot.copy(block: `bilibili.app.card.v1`.DynamicHotKt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.DynamicHot =
  `bilibili.app.card.v1`.DynamicHotKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.card.v1.DynamicHotOrBuilder.baseOrNull: bilibili.app.card.v1.Base?
  get() = if (hasBase()) getBase() else null

public val bilibili.app.card.v1.DynamicHotOrBuilder.topRcmdReasonStyleOrNull: bilibili.app.card.v1.ReasonStyle?
  get() = if (hasTopRcmdReasonStyle()) getTopRcmdReasonStyle() else null

