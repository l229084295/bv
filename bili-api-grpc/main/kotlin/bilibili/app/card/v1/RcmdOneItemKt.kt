// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/card/v1/single.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.card.v1;

@kotlin.jvm.JvmName("-initializercmdOneItem")
public inline fun rcmdOneItem(block: bilibili.app.card.v1.RcmdOneItemKt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.RcmdOneItem =
  bilibili.app.card.v1.RcmdOneItemKt.Dsl._create(bilibili.app.card.v1.RcmdOneItem.newBuilder()).apply { block() }._build()
/**
 * ```
 * 推荐
 * ```
 *
 * Protobuf type `bilibili.app.card.v1.RcmdOneItem`
 */
public object RcmdOneItemKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.card.v1.RcmdOneItem.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.card.v1.RcmdOneItem.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.card.v1.RcmdOneItem = _builder.build()

    /**
     * ```
     * 条目基本信息
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public var base: bilibili.app.card.v1.Base
      @JvmName("getBase")
      get() = _builder.getBase()
      @JvmName("setBase")
      set(value) {
        _builder.setBase(value)
      }
    /**
     * ```
     * 条目基本信息
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public fun clearBase() {
      _builder.clearBase()
    }
    /**
     * ```
     * 条目基本信息
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     * @return Whether the base field is set.
     */
    public fun hasBase(): kotlin.Boolean {
      return _builder.hasBase()
    }
    public val RcmdOneItemKt.Dsl.baseOrNull: bilibili.app.card.v1.Base?
      get() = _builder.baseOrNull

    /**
     * ```
     * 标签框信息
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle topRcmdReasonStyle = 2;`
     */
    public var topRcmdReasonStyle: bilibili.app.card.v1.ReasonStyle
      @JvmName("getTopRcmdReasonStyle")
      get() = _builder.getTopRcmdReasonStyle()
      @JvmName("setTopRcmdReasonStyle")
      set(value) {
        _builder.setTopRcmdReasonStyle(value)
      }
    /**
     * ```
     * 标签框信息
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle topRcmdReasonStyle = 2;`
     */
    public fun clearTopRcmdReasonStyle() {
      _builder.clearTopRcmdReasonStyle()
    }
    /**
     * ```
     * 标签框信息
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle topRcmdReasonStyle = 2;`
     * @return Whether the topRcmdReasonStyle field is set.
     */
    public fun hasTopRcmdReasonStyle(): kotlin.Boolean {
      return _builder.hasTopRcmdReasonStyle()
    }
    public val RcmdOneItemKt.Dsl.topRcmdReasonStyleOrNull: bilibili.app.card.v1.ReasonStyle?
      get() = _builder.topRcmdReasonStyleOrNull

    /**
     * ```
     * 小封面推荐内容信息
     * ```
     *
     * `.bilibili.app.card.v1.SmallCoverRcmdItem item = 3;`
     */
    public var item: bilibili.app.card.v1.SmallCoverRcmdItem
      @JvmName("getItem")
      get() = _builder.getItem()
      @JvmName("setItem")
      set(value) {
        _builder.setItem(value)
      }
    /**
     * ```
     * 小封面推荐内容信息
     * ```
     *
     * `.bilibili.app.card.v1.SmallCoverRcmdItem item = 3;`
     */
    public fun clearItem() {
      _builder.clearItem()
    }
    /**
     * ```
     * 小封面推荐内容信息
     * ```
     *
     * `.bilibili.app.card.v1.SmallCoverRcmdItem item = 3;`
     * @return Whether the item field is set.
     */
    public fun hasItem(): kotlin.Boolean {
      return _builder.hasItem()
    }
    public val RcmdOneItemKt.Dsl.itemOrNull: bilibili.app.card.v1.SmallCoverRcmdItem?
      get() = _builder.itemOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.card.v1.RcmdOneItem.copy(block: `bilibili.app.card.v1`.RcmdOneItemKt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.RcmdOneItem =
  `bilibili.app.card.v1`.RcmdOneItemKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.card.v1.RcmdOneItemOrBuilder.baseOrNull: bilibili.app.card.v1.Base?
  get() = if (hasBase()) getBase() else null

public val bilibili.app.card.v1.RcmdOneItemOrBuilder.topRcmdReasonStyleOrNull: bilibili.app.card.v1.ReasonStyle?
  get() = if (hasTopRcmdReasonStyle()) getTopRcmdReasonStyle() else null

public val bilibili.app.card.v1.RcmdOneItemOrBuilder.itemOrNull: bilibili.app.card.v1.SmallCoverRcmdItem?
  get() = if (hasItem()) getItem() else null

