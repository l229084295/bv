// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/card/v1/double.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.card.v1;

@kotlin.jvm.JvmName("-initializethreePicV3")
public inline fun threePicV3(block: bilibili.app.card.v1.ThreePicV3Kt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.ThreePicV3 =
  bilibili.app.card.v1.ThreePicV3Kt.Dsl._create(bilibili.app.card.v1.ThreePicV3.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.card.v1.ThreePicV3`
 */
public object ThreePicV3Kt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.card.v1.ThreePicV3.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.card.v1.ThreePicV3.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.card.v1.ThreePicV3 = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public var base: bilibili.app.card.v1.Base
      @JvmName("getBase")
      get() = _builder.getBase()
      @JvmName("setBase")
      set(value) {
        _builder.setBase(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public fun clearBase() {
      _builder.clearBase()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     * @return Whether the base field is set.
     */
    public fun hasBase(): kotlin.Boolean {
      return _builder.hasBase()
    }
    public val ThreePicV3Kt.Dsl.baseOrNull: bilibili.app.card.v1.Base?
      get() = _builder.baseOrNull

    /**
     * ```
     * ```
     *
     * `string left_cover = 2;`
     */
    public var leftCover: kotlin.String
      @JvmName("getLeftCover")
      get() = _builder.getLeftCover()
      @JvmName("setLeftCover")
      set(value) {
        _builder.setLeftCover(value)
      }
    /**
     * ```
     * ```
     *
     * `string left_cover = 2;`
     */
    public fun clearLeftCover() {
      _builder.clearLeftCover()
    }

    /**
     * ```
     * ```
     *
     * `string right_cover_1 = 3;`
     */
    public var rightCover1: kotlin.String
      @JvmName("getRightCover1")
      get() = _builder.getRightCover1()
      @JvmName("setRightCover1")
      set(value) {
        _builder.setRightCover1(value)
      }
    /**
     * ```
     * ```
     *
     * `string right_cover_1 = 3;`
     */
    public fun clearRightCover1() {
      _builder.clearRightCover1()
    }

    /**
     * ```
     * ```
     *
     * `string right_cover_2 = 4;`
     */
    public var rightCover2: kotlin.String
      @JvmName("getRightCover2")
      get() = _builder.getRightCover2()
      @JvmName("setRightCover2")
      set(value) {
        _builder.setRightCover2(value)
      }
    /**
     * ```
     * ```
     *
     * `string right_cover_2 = 4;`
     */
    public fun clearRightCover2() {
      _builder.clearRightCover2()
    }

    /**
     * ```
     * ```
     *
     * `string cover_left_text_1 = 5;`
     */
    public var coverLeftText1: kotlin.String
      @JvmName("getCoverLeftText1")
      get() = _builder.getCoverLeftText1()
      @JvmName("setCoverLeftText1")
      set(value) {
        _builder.setCoverLeftText1(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_left_text_1 = 5;`
     */
    public fun clearCoverLeftText1() {
      _builder.clearCoverLeftText1()
    }

    /**
     * ```
     * ```
     *
     * `int32 cover_left_icon_1 = 6;`
     */
    public var coverLeftIcon1: kotlin.Int
      @JvmName("getCoverLeftIcon1")
      get() = _builder.getCoverLeftIcon1()
      @JvmName("setCoverLeftIcon1")
      set(value) {
        _builder.setCoverLeftIcon1(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 cover_left_icon_1 = 6;`
     */
    public fun clearCoverLeftIcon1() {
      _builder.clearCoverLeftIcon1()
    }

    /**
     * ```
     * ```
     *
     * `string cover_left_text_2 = 7;`
     */
    public var coverLeftText2: kotlin.String
      @JvmName("getCoverLeftText2")
      get() = _builder.getCoverLeftText2()
      @JvmName("setCoverLeftText2")
      set(value) {
        _builder.setCoverLeftText2(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_left_text_2 = 7;`
     */
    public fun clearCoverLeftText2() {
      _builder.clearCoverLeftText2()
    }

    /**
     * ```
     * ```
     *
     * `int32 cover_left_icon_2 = 8;`
     */
    public var coverLeftIcon2: kotlin.Int
      @JvmName("getCoverLeftIcon2")
      get() = _builder.getCoverLeftIcon2()
      @JvmName("setCoverLeftIcon2")
      set(value) {
        _builder.setCoverLeftIcon2(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 cover_left_icon_2 = 8;`
     */
    public fun clearCoverLeftIcon2() {
      _builder.clearCoverLeftIcon2()
    }

    /**
     * ```
     * ```
     *
     * `string cover_right_text = 9;`
     */
    public var coverRightText: kotlin.String
      @JvmName("getCoverRightText")
      get() = _builder.getCoverRightText()
      @JvmName("setCoverRightText")
      set(value) {
        _builder.setCoverRightText(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_right_text = 9;`
     */
    public fun clearCoverRightText() {
      _builder.clearCoverRightText()
    }

    /**
     * ```
     * ```
     *
     * `int32 cover_right_icon = 10;`
     */
    public var coverRightIcon: kotlin.Int
      @JvmName("getCoverRightIcon")
      get() = _builder.getCoverRightIcon()
      @JvmName("setCoverRightIcon")
      set(value) {
        _builder.setCoverRightIcon(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 cover_right_icon = 10;`
     */
    public fun clearCoverRightIcon() {
      _builder.clearCoverRightIcon()
    }

    /**
     * ```
     * ```
     *
     * `string cover_right_background_color = 11;`
     */
    public var coverRightBackgroundColor: kotlin.String
      @JvmName("getCoverRightBackgroundColor")
      get() = _builder.getCoverRightBackgroundColor()
      @JvmName("setCoverRightBackgroundColor")
      set(value) {
        _builder.setCoverRightBackgroundColor(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_right_background_color = 11;`
     */
    public fun clearCoverRightBackgroundColor() {
      _builder.clearCoverRightBackgroundColor()
    }

    /**
     * ```
     * ```
     *
     * `string badge = 12;`
     */
    public var badge: kotlin.String
      @JvmName("getBadge")
      get() = _builder.getBadge()
      @JvmName("setBadge")
      set(value) {
        _builder.setBadge(value)
      }
    /**
     * ```
     * ```
     *
     * `string badge = 12;`
     */
    public fun clearBadge() {
      _builder.clearBadge()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle rcmd_reason_style = 13;`
     */
    public var rcmdReasonStyle: bilibili.app.card.v1.ReasonStyle
      @JvmName("getRcmdReasonStyle")
      get() = _builder.getRcmdReasonStyle()
      @JvmName("setRcmdReasonStyle")
      set(value) {
        _builder.setRcmdReasonStyle(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle rcmd_reason_style = 13;`
     */
    public fun clearRcmdReasonStyle() {
      _builder.clearRcmdReasonStyle()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle rcmd_reason_style = 13;`
     * @return Whether the rcmdReasonStyle field is set.
     */
    public fun hasRcmdReasonStyle(): kotlin.Boolean {
      return _builder.hasRcmdReasonStyle()
    }
    public val ThreePicV3Kt.Dsl.rcmdReasonStyleOrNull: bilibili.app.card.v1.ReasonStyle?
      get() = _builder.rcmdReasonStyleOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.card.v1.ThreePicV3.copy(block: `bilibili.app.card.v1`.ThreePicV3Kt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.ThreePicV3 =
  `bilibili.app.card.v1`.ThreePicV3Kt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.card.v1.ThreePicV3OrBuilder.baseOrNull: bilibili.app.card.v1.Base?
  get() = if (hasBase()) getBase() else null

public val bilibili.app.card.v1.ThreePicV3OrBuilder.rcmdReasonStyleOrNull: bilibili.app.card.v1.ReasonStyle?
  get() = if (hasRcmdReasonStyle()) getRcmdReasonStyle() else null

