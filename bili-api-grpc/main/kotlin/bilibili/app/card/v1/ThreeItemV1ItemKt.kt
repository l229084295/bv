// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/card/v1/single.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.card.v1;

@kotlin.jvm.JvmName("-initializethreeItemV1Item")
public inline fun threeItemV1Item(block: bilibili.app.card.v1.ThreeItemV1ItemKt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.ThreeItemV1Item =
  bilibili.app.card.v1.ThreeItemV1ItemKt.Dsl._create(bilibili.app.card.v1.ThreeItemV1Item.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.card.v1.ThreeItemV1Item`
 */
public object ThreeItemV1ItemKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.card.v1.ThreeItemV1Item.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.card.v1.ThreeItemV1Item.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.card.v1.ThreeItemV1Item = _builder.build()

    /**
     * ```
     * 条目基本信息
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public var base: bilibili.app.card.v1.Base
      @JvmName("getBase")
      get() = _builder.getBase()
      @JvmName("setBase")
      set(value) {
        _builder.setBase(value)
      }
    /**
     * ```
     * 条目基本信息
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public fun clearBase() {
      _builder.clearBase()
    }
    /**
     * ```
     * 条目基本信息
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     * @return Whether the base field is set.
     */
    public fun hasBase(): kotlin.Boolean {
      return _builder.hasBase()
    }
    public val ThreeItemV1ItemKt.Dsl.baseOrNull: bilibili.app.card.v1.Base?
      get() = _builder.baseOrNull

    /**
     * ```
     * ```
     *
     * `string coverLeftText = 2;`
     */
    public var coverLeftText: kotlin.String
      @JvmName("getCoverLeftText")
      get() = _builder.getCoverLeftText()
      @JvmName("setCoverLeftText")
      set(value) {
        _builder.setCoverLeftText(value)
      }
    /**
     * ```
     * ```
     *
     * `string coverLeftText = 2;`
     */
    public fun clearCoverLeftText() {
      _builder.clearCoverLeftText()
    }

    /**
     * ```
     * ```
     *
     * `int32 coverLeftIcon = 3;`
     */
    public var coverLeftIcon: kotlin.Int
      @JvmName("getCoverLeftIcon")
      get() = _builder.getCoverLeftIcon()
      @JvmName("setCoverLeftIcon")
      set(value) {
        _builder.setCoverLeftIcon(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 coverLeftIcon = 3;`
     */
    public fun clearCoverLeftIcon() {
      _builder.clearCoverLeftIcon()
    }

    /**
     * ```
     * ```
     *
     * `string desc1 = 4;`
     */
    public var desc1: kotlin.String
      @JvmName("getDesc1")
      get() = _builder.getDesc1()
      @JvmName("setDesc1")
      set(value) {
        _builder.setDesc1(value)
      }
    /**
     * ```
     * ```
     *
     * `string desc1 = 4;`
     */
    public fun clearDesc1() {
      _builder.clearDesc1()
    }

    /**
     * ```
     * ```
     *
     * `string desc2 = 5;`
     */
    public var desc2: kotlin.String
      @JvmName("getDesc2")
      get() = _builder.getDesc2()
      @JvmName("setDesc2")
      set(value) {
        _builder.setDesc2(value)
      }
    /**
     * ```
     * ```
     *
     * `string desc2 = 5;`
     */
    public fun clearDesc2() {
      _builder.clearDesc2()
    }

    /**
     * ```
     * ```
     *
     * `string badge = 6;`
     */
    public var badge: kotlin.String
      @JvmName("getBadge")
      get() = _builder.getBadge()
      @JvmName("setBadge")
      set(value) {
        _builder.setBadge(value)
      }
    /**
     * ```
     * ```
     *
     * `string badge = 6;`
     */
    public fun clearBadge() {
      _builder.clearBadge()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.card.v1.ThreeItemV1Item.copy(block: `bilibili.app.card.v1`.ThreeItemV1ItemKt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.ThreeItemV1Item =
  `bilibili.app.card.v1`.ThreeItemV1ItemKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.card.v1.ThreeItemV1ItemOrBuilder.baseOrNull: bilibili.app.card.v1.Base?
  get() = if (hasBase()) getBase() else null

