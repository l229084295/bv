// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/card/v1/double.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.card.v1;

@kotlin.jvm.JvmName("-initializesmallCoverConvergeV2")
public inline fun smallCoverConvergeV2(block: bilibili.app.card.v1.SmallCoverConvergeV2Kt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.SmallCoverConvergeV2 =
  bilibili.app.card.v1.SmallCoverConvergeV2Kt.Dsl._create(bilibili.app.card.v1.SmallCoverConvergeV2.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.app.card.v1.SmallCoverConvergeV2`
 */
public object SmallCoverConvergeV2Kt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.card.v1.SmallCoverConvergeV2.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.card.v1.SmallCoverConvergeV2.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.card.v1.SmallCoverConvergeV2 = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public var base: bilibili.app.card.v1.Base
      @JvmName("getBase")
      get() = _builder.getBase()
      @JvmName("setBase")
      set(value) {
        _builder.setBase(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     */
    public fun clearBase() {
      _builder.clearBase()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.Base base = 1;`
     * @return Whether the base field is set.
     */
    public fun hasBase(): kotlin.Boolean {
      return _builder.hasBase()
    }
    public val SmallCoverConvergeV2Kt.Dsl.baseOrNull: bilibili.app.card.v1.Base?
      get() = _builder.baseOrNull

    /**
     * ```
     * ```
     *
     * `string cover_left_text_1 = 2;`
     */
    public var coverLeftText1: kotlin.String
      @JvmName("getCoverLeftText1")
      get() = _builder.getCoverLeftText1()
      @JvmName("setCoverLeftText1")
      set(value) {
        _builder.setCoverLeftText1(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_left_text_1 = 2;`
     */
    public fun clearCoverLeftText1() {
      _builder.clearCoverLeftText1()
    }

    /**
     * ```
     * ```
     *
     * `int32 cover_left_icon_1 = 3;`
     */
    public var coverLeftIcon1: kotlin.Int
      @JvmName("getCoverLeftIcon1")
      get() = _builder.getCoverLeftIcon1()
      @JvmName("setCoverLeftIcon1")
      set(value) {
        _builder.setCoverLeftIcon1(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 cover_left_icon_1 = 3;`
     */
    public fun clearCoverLeftIcon1() {
      _builder.clearCoverLeftIcon1()
    }

    /**
     * ```
     * ```
     *
     * `string cover_left_text_2 = 4;`
     */
    public var coverLeftText2: kotlin.String
      @JvmName("getCoverLeftText2")
      get() = _builder.getCoverLeftText2()
      @JvmName("setCoverLeftText2")
      set(value) {
        _builder.setCoverLeftText2(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_left_text_2 = 4;`
     */
    public fun clearCoverLeftText2() {
      _builder.clearCoverLeftText2()
    }

    /**
     * ```
     * ```
     *
     * `int32 cover_left_icon_2 = 5;`
     */
    public var coverLeftIcon2: kotlin.Int
      @JvmName("getCoverLeftIcon2")
      get() = _builder.getCoverLeftIcon2()
      @JvmName("setCoverLeftIcon2")
      set(value) {
        _builder.setCoverLeftIcon2(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 cover_left_icon_2 = 5;`
     */
    public fun clearCoverLeftIcon2() {
      _builder.clearCoverLeftIcon2()
    }

    /**
     * ```
     * ```
     *
     * `string cover_right_text = 6;`
     */
    public var coverRightText: kotlin.String
      @JvmName("getCoverRightText")
      get() = _builder.getCoverRightText()
      @JvmName("setCoverRightText")
      set(value) {
        _builder.setCoverRightText(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_right_text = 6;`
     */
    public fun clearCoverRightText() {
      _builder.clearCoverRightText()
    }

    /**
     * ```
     * ```
     *
     * `string cover_right_top_text = 7;`
     */
    public var coverRightTopText: kotlin.String
      @JvmName("getCoverRightTopText")
      get() = _builder.getCoverRightTopText()
      @JvmName("setCoverRightTopText")
      set(value) {
        _builder.setCoverRightTopText(value)
      }
    /**
     * ```
     * ```
     *
     * `string cover_right_top_text = 7;`
     */
    public fun clearCoverRightTopText() {
      _builder.clearCoverRightTopText()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle rcmd_reason_style = 8;`
     */
    public var rcmdReasonStyle: bilibili.app.card.v1.ReasonStyle
      @JvmName("getRcmdReasonStyle")
      get() = _builder.getRcmdReasonStyle()
      @JvmName("setRcmdReasonStyle")
      set(value) {
        _builder.setRcmdReasonStyle(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle rcmd_reason_style = 8;`
     */
    public fun clearRcmdReasonStyle() {
      _builder.clearRcmdReasonStyle()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle rcmd_reason_style = 8;`
     * @return Whether the rcmdReasonStyle field is set.
     */
    public fun hasRcmdReasonStyle(): kotlin.Boolean {
      return _builder.hasRcmdReasonStyle()
    }
    public val SmallCoverConvergeV2Kt.Dsl.rcmdReasonStyleOrNull: bilibili.app.card.v1.ReasonStyle?
      get() = _builder.rcmdReasonStyleOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle rcmd_reason_style_v2 = 9;`
     */
    public var rcmdReasonStyleV2: bilibili.app.card.v1.ReasonStyle
      @JvmName("getRcmdReasonStyleV2")
      get() = _builder.getRcmdReasonStyleV2()
      @JvmName("setRcmdReasonStyleV2")
      set(value) {
        _builder.setRcmdReasonStyleV2(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle rcmd_reason_style_v2 = 9;`
     */
    public fun clearRcmdReasonStyleV2() {
      _builder.clearRcmdReasonStyleV2()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.card.v1.ReasonStyle rcmd_reason_style_v2 = 9;`
     * @return Whether the rcmdReasonStyleV2 field is set.
     */
    public fun hasRcmdReasonStyleV2(): kotlin.Boolean {
      return _builder.hasRcmdReasonStyleV2()
    }
    public val SmallCoverConvergeV2Kt.Dsl.rcmdReasonStyleV2OrNull: bilibili.app.card.v1.ReasonStyle?
      get() = _builder.rcmdReasonStyleV2OrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.card.v1.SmallCoverConvergeV2.copy(block: `bilibili.app.card.v1`.SmallCoverConvergeV2Kt.Dsl.() -> kotlin.Unit): bilibili.app.card.v1.SmallCoverConvergeV2 =
  `bilibili.app.card.v1`.SmallCoverConvergeV2Kt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.card.v1.SmallCoverConvergeV2OrBuilder.baseOrNull: bilibili.app.card.v1.Base?
  get() = if (hasBase()) getBase() else null

public val bilibili.app.card.v1.SmallCoverConvergeV2OrBuilder.rcmdReasonStyleOrNull: bilibili.app.card.v1.ReasonStyle?
  get() = if (hasRcmdReasonStyle()) getRcmdReasonStyle() else null

public val bilibili.app.card.v1.SmallCoverConvergeV2OrBuilder.rcmdReasonStyleV2OrNull: bilibili.app.card.v1.ReasonStyle?
  get() = if (hasRcmdReasonStyleV2()) getRcmdReasonStyleV2() else null

