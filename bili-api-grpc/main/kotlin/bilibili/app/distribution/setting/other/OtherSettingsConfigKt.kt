// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/distribution/setting/other.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.distribution.setting.other;

@kotlin.jvm.JvmName("-initializeotherSettingsConfig")
public inline fun otherSettingsConfig(block: bilibili.app.distribution.setting.other.OtherSettingsConfigKt.Dsl.() -> kotlin.Unit): bilibili.app.distribution.setting.other.OtherSettingsConfig =
  bilibili.app.distribution.setting.other.OtherSettingsConfigKt.Dsl._create(bilibili.app.distribution.setting.other.OtherSettingsConfig.newBuilder()).apply { block() }._build()
/**
 * ```
 *
 * ```
 *
 * Protobuf type `bilibili.app.distribution.setting.other.OtherSettingsConfig`
 */
public object OtherSettingsConfigKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.distribution.setting.other.OtherSettingsConfig.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.distribution.setting.other.OtherSettingsConfig.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.distribution.setting.other.OtherSettingsConfig = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.app.distribution.v1.Int64Value watermark_type = 1;`
     */
    public var watermarkType: bilibili.app.distribution.v1.Int64Value
      @JvmName("getWatermarkType")
      get() = _builder.getWatermarkType()
      @JvmName("setWatermarkType")
      set(value) {
        _builder.setWatermarkType(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.distribution.v1.Int64Value watermark_type = 1;`
     */
    public fun clearWatermarkType() {
      _builder.clearWatermarkType()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.distribution.v1.Int64Value watermark_type = 1;`
     * @return Whether the watermarkType field is set.
     */
    public fun hasWatermarkType(): kotlin.Boolean {
      return _builder.hasWatermarkType()
    }
    public val OtherSettingsConfigKt.Dsl.watermarkTypeOrNull: bilibili.app.distribution.v1.Int64Value?
      get() = _builder.watermarkTypeOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.distribution.v1.Int64Value web_image_quality_type = 2;`
     */
    public var webImageQualityType: bilibili.app.distribution.v1.Int64Value
      @JvmName("getWebImageQualityType")
      get() = _builder.getWebImageQualityType()
      @JvmName("setWebImageQualityType")
      set(value) {
        _builder.setWebImageQualityType(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.distribution.v1.Int64Value web_image_quality_type = 2;`
     */
    public fun clearWebImageQualityType() {
      _builder.clearWebImageQualityType()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.distribution.v1.Int64Value web_image_quality_type = 2;`
     * @return Whether the webImageQualityType field is set.
     */
    public fun hasWebImageQualityType(): kotlin.Boolean {
      return _builder.hasWebImageQualityType()
    }
    public val OtherSettingsConfigKt.Dsl.webImageQualityTypeOrNull: bilibili.app.distribution.v1.Int64Value?
      get() = _builder.webImageQualityTypeOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue enable_read_pasteboard = 3;`
     */
    public var enableReadPasteboard: bilibili.app.distribution.v1.BoolValue
      @JvmName("getEnableReadPasteboard")
      get() = _builder.getEnableReadPasteboard()
      @JvmName("setEnableReadPasteboard")
      set(value) {
        _builder.setEnableReadPasteboard(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue enable_read_pasteboard = 3;`
     */
    public fun clearEnableReadPasteboard() {
      _builder.clearEnableReadPasteboard()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue enable_read_pasteboard = 3;`
     * @return Whether the enableReadPasteboard field is set.
     */
    public fun hasEnableReadPasteboard(): kotlin.Boolean {
      return _builder.hasEnableReadPasteboard()
    }
    public val OtherSettingsConfigKt.Dsl.enableReadPasteboardOrNull: bilibili.app.distribution.v1.BoolValue?
      get() = _builder.enableReadPasteboardOrNull

    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue paste_auto_jump = 4;`
     */
    public var pasteAutoJump: bilibili.app.distribution.v1.BoolValue
      @JvmName("getPasteAutoJump")
      get() = _builder.getPasteAutoJump()
      @JvmName("setPasteAutoJump")
      set(value) {
        _builder.setPasteAutoJump(value)
      }
    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue paste_auto_jump = 4;`
     */
    public fun clearPasteAutoJump() {
      _builder.clearPasteAutoJump()
    }
    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue paste_auto_jump = 4;`
     * @return Whether the pasteAutoJump field is set.
     */
    public fun hasPasteAutoJump(): kotlin.Boolean {
      return _builder.hasPasteAutoJump()
    }
    public val OtherSettingsConfigKt.Dsl.pasteAutoJumpOrNull: bilibili.app.distribution.v1.BoolValue?
      get() = _builder.pasteAutoJumpOrNull

    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue mini_screen_play_when_back = 5;`
     */
    public var miniScreenPlayWhenBack: bilibili.app.distribution.v1.BoolValue
      @JvmName("getMiniScreenPlayWhenBack")
      get() = _builder.getMiniScreenPlayWhenBack()
      @JvmName("setMiniScreenPlayWhenBack")
      set(value) {
        _builder.setMiniScreenPlayWhenBack(value)
      }
    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue mini_screen_play_when_back = 5;`
     */
    public fun clearMiniScreenPlayWhenBack() {
      _builder.clearMiniScreenPlayWhenBack()
    }
    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue mini_screen_play_when_back = 5;`
     * @return Whether the miniScreenPlayWhenBack field is set.
     */
    public fun hasMiniScreenPlayWhenBack(): kotlin.Boolean {
      return _builder.hasMiniScreenPlayWhenBack()
    }
    public val OtherSettingsConfigKt.Dsl.miniScreenPlayWhenBackOrNull: bilibili.app.distribution.v1.BoolValue?
      get() = _builder.miniScreenPlayWhenBackOrNull

    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue enable_resume_playing = 6;`
     */
    public var enableResumePlaying: bilibili.app.distribution.v1.BoolValue
      @JvmName("getEnableResumePlaying")
      get() = _builder.getEnableResumePlaying()
      @JvmName("setEnableResumePlaying")
      set(value) {
        _builder.setEnableResumePlaying(value)
      }
    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue enable_resume_playing = 6;`
     */
    public fun clearEnableResumePlaying() {
      _builder.clearEnableResumePlaying()
    }
    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue enable_resume_playing = 6;`
     * @return Whether the enableResumePlaying field is set.
     */
    public fun hasEnableResumePlaying(): kotlin.Boolean {
      return _builder.hasEnableResumePlaying()
    }
    public val OtherSettingsConfigKt.Dsl.enableResumePlayingOrNull: bilibili.app.distribution.v1.BoolValue?
      get() = _builder.enableResumePlayingOrNull

    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue enable_wifi_auto_update = 7;`
     */
    public var enableWifiAutoUpdate: bilibili.app.distribution.v1.BoolValue
      @JvmName("getEnableWifiAutoUpdate")
      get() = _builder.getEnableWifiAutoUpdate()
      @JvmName("setEnableWifiAutoUpdate")
      set(value) {
        _builder.setEnableWifiAutoUpdate(value)
      }
    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue enable_wifi_auto_update = 7;`
     */
    public fun clearEnableWifiAutoUpdate() {
      _builder.clearEnableWifiAutoUpdate()
    }
    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue enable_wifi_auto_update = 7;`
     * @return Whether the enableWifiAutoUpdate field is set.
     */
    public fun hasEnableWifiAutoUpdate(): kotlin.Boolean {
      return _builder.hasEnableWifiAutoUpdate()
    }
    public val OtherSettingsConfigKt.Dsl.enableWifiAutoUpdateOrNull: bilibili.app.distribution.v1.BoolValue?
      get() = _builder.enableWifiAutoUpdateOrNull

    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue enable_guide_screenshot_share = 8;`
     */
    public var enableGuideScreenshotShare: bilibili.app.distribution.v1.BoolValue
      @JvmName("getEnableGuideScreenshotShare")
      get() = _builder.getEnableGuideScreenshotShare()
      @JvmName("setEnableGuideScreenshotShare")
      set(value) {
        _builder.setEnableGuideScreenshotShare(value)
      }
    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue enable_guide_screenshot_share = 8;`
     */
    public fun clearEnableGuideScreenshotShare() {
      _builder.clearEnableGuideScreenshotShare()
    }
    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue enable_guide_screenshot_share = 8;`
     * @return Whether the enableGuideScreenshotShare field is set.
     */
    public fun hasEnableGuideScreenshotShare(): kotlin.Boolean {
      return _builder.hasEnableGuideScreenshotShare()
    }
    public val OtherSettingsConfigKt.Dsl.enableGuideScreenshotShareOrNull: bilibili.app.distribution.v1.BoolValue?
      get() = _builder.enableGuideScreenshotShareOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.distribution.setting.other.OtherSettingsConfig.copy(block: `bilibili.app.distribution.setting.other`.OtherSettingsConfigKt.Dsl.() -> kotlin.Unit): bilibili.app.distribution.setting.other.OtherSettingsConfig =
  `bilibili.app.distribution.setting.other`.OtherSettingsConfigKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.distribution.setting.other.OtherSettingsConfigOrBuilder.watermarkTypeOrNull: bilibili.app.distribution.v1.Int64Value?
  get() = if (hasWatermarkType()) getWatermarkType() else null

public val bilibili.app.distribution.setting.other.OtherSettingsConfigOrBuilder.webImageQualityTypeOrNull: bilibili.app.distribution.v1.Int64Value?
  get() = if (hasWebImageQualityType()) getWebImageQualityType() else null

public val bilibili.app.distribution.setting.other.OtherSettingsConfigOrBuilder.enableReadPasteboardOrNull: bilibili.app.distribution.v1.BoolValue?
  get() = if (hasEnableReadPasteboard()) getEnableReadPasteboard() else null

public val bilibili.app.distribution.setting.other.OtherSettingsConfigOrBuilder.pasteAutoJumpOrNull: bilibili.app.distribution.v1.BoolValue?
  get() = if (hasPasteAutoJump()) getPasteAutoJump() else null

public val bilibili.app.distribution.setting.other.OtherSettingsConfigOrBuilder.miniScreenPlayWhenBackOrNull: bilibili.app.distribution.v1.BoolValue?
  get() = if (hasMiniScreenPlayWhenBack()) getMiniScreenPlayWhenBack() else null

public val bilibili.app.distribution.setting.other.OtherSettingsConfigOrBuilder.enableResumePlayingOrNull: bilibili.app.distribution.v1.BoolValue?
  get() = if (hasEnableResumePlaying()) getEnableResumePlaying() else null

public val bilibili.app.distribution.setting.other.OtherSettingsConfigOrBuilder.enableWifiAutoUpdateOrNull: bilibili.app.distribution.v1.BoolValue?
  get() = if (hasEnableWifiAutoUpdate()) getEnableWifiAutoUpdate() else null

public val bilibili.app.distribution.setting.other.OtherSettingsConfigOrBuilder.enableGuideScreenshotShareOrNull: bilibili.app.distribution.v1.BoolValue?
  get() = if (hasEnableGuideScreenshotShare()) getEnableGuideScreenshotShare() else null

