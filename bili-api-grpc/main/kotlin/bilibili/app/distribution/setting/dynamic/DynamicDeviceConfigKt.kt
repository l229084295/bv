// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/distribution/setting/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.distribution.setting.dynamic;

@kotlin.jvm.JvmName("-initializedynamicDeviceConfig")
public inline fun dynamicDeviceConfig(block: bilibili.app.distribution.setting.dynamic.DynamicDeviceConfigKt.Dsl.() -> kotlin.Unit): bilibili.app.distribution.setting.dynamic.DynamicDeviceConfig =
  bilibili.app.distribution.setting.dynamic.DynamicDeviceConfigKt.Dsl._create(bilibili.app.distribution.setting.dynamic.DynamicDeviceConfig.newBuilder()).apply { block() }._build()
/**
 * ```
 *
 * ```
 *
 * Protobuf type `bilibili.app.distribution.setting.dynamic.DynamicDeviceConfig`
 */
public object DynamicDeviceConfigKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.distribution.setting.dynamic.DynamicDeviceConfig.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.distribution.setting.dynamic.DynamicDeviceConfig.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.distribution.setting.dynamic.DynamicDeviceConfig = _builder.build()

    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.setting.dynamic.DynamicAutoPlay auto_play = 1;`
     */
    public var autoPlay: bilibili.app.distribution.setting.dynamic.DynamicAutoPlay
      @JvmName("getAutoPlay")
      get() = _builder.getAutoPlay()
      @JvmName("setAutoPlay")
      set(value) {
        _builder.setAutoPlay(value)
      }
    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.setting.dynamic.DynamicAutoPlay auto_play = 1;`
     */
    public fun clearAutoPlay() {
      _builder.clearAutoPlay()
    }
    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.setting.dynamic.DynamicAutoPlay auto_play = 1;`
     * @return Whether the autoPlay field is set.
     */
    public fun hasAutoPlay(): kotlin.Boolean {
      return _builder.hasAutoPlay()
    }
    public val DynamicDeviceConfigKt.Dsl.autoPlayOrNull: bilibili.app.distribution.setting.dynamic.DynamicAutoPlay?
      get() = _builder.autoPlayOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.distribution.setting.dynamic.DynamicDeviceConfig.copy(block: `bilibili.app.distribution.setting.dynamic`.DynamicDeviceConfigKt.Dsl.() -> kotlin.Unit): bilibili.app.distribution.setting.dynamic.DynamicDeviceConfig =
  `bilibili.app.distribution.setting.dynamic`.DynamicDeviceConfigKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.distribution.setting.dynamic.DynamicDeviceConfigOrBuilder.autoPlayOrNull: bilibili.app.distribution.setting.dynamic.DynamicAutoPlay?
  get() = if (hasAutoPlay()) getAutoPlay() else null

