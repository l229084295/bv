// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/distribution/setting/experimental.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.distribution.setting.experimental;

@kotlin.jvm.JvmName("-initializedynamicSelect")
public inline fun dynamicSelect(block: bilibili.app.distribution.setting.experimental.DynamicSelectKt.Dsl.() -> kotlin.Unit): bilibili.app.distribution.setting.experimental.DynamicSelect =
  bilibili.app.distribution.setting.experimental.DynamicSelectKt.Dsl._create(bilibili.app.distribution.setting.experimental.DynamicSelect.newBuilder()).apply { block() }._build()
/**
 * ```
 *
 * ```
 *
 * Protobuf type `bilibili.app.distribution.setting.experimental.DynamicSelect`
 */
public object DynamicSelectKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.distribution.setting.experimental.DynamicSelect.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.distribution.setting.experimental.DynamicSelect.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.distribution.setting.experimental.DynamicSelect = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue fold = 1;`
     */
    public var fold: bilibili.app.distribution.v1.BoolValue
      @JvmName("getFold")
      get() = _builder.getFold()
      @JvmName("setFold")
      set(value) {
        _builder.setFold(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue fold = 1;`
     */
    public fun clearFold() {
      _builder.clearFold()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.app.distribution.v1.BoolValue fold = 1;`
     * @return Whether the fold field is set.
     */
    public fun hasFold(): kotlin.Boolean {
      return _builder.hasFold()
    }
    public val DynamicSelectKt.Dsl.foldOrNull: bilibili.app.distribution.v1.BoolValue?
      get() = _builder.foldOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.distribution.setting.experimental.DynamicSelect.copy(block: `bilibili.app.distribution.setting.experimental`.DynamicSelectKt.Dsl.() -> kotlin.Unit): bilibili.app.distribution.setting.experimental.DynamicSelect =
  `bilibili.app.distribution.setting.experimental`.DynamicSelectKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.distribution.setting.experimental.DynamicSelectOrBuilder.foldOrNull: bilibili.app.distribution.v1.BoolValue?
  get() = if (hasFold()) getFold() else null

