// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/app/distribution/setting/experimental.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.app.distribution.setting.experimental;

@kotlin.jvm.JvmName("-initializeexp")
public inline fun exp(block: bilibili.app.distribution.setting.experimental.ExpKt.Dsl.() -> kotlin.Unit): bilibili.app.distribution.setting.experimental.Exp =
  bilibili.app.distribution.setting.experimental.ExpKt.Dsl._create(bilibili.app.distribution.setting.experimental.Exp.newBuilder()).apply { block() }._build()
/**
 * ```
 *
 * ```
 *
 * Protobuf type `bilibili.app.distribution.setting.experimental.Exp`
 */
public object ExpKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.app.distribution.setting.experimental.Exp.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.app.distribution.setting.experimental.Exp.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.app.distribution.setting.experimental.Exp = _builder.build()

    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.Int64Value id = 1;`
     */
    public var id: bilibili.app.distribution.v1.Int64Value
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.Int64Value id = 1;`
     */
    public fun clearId() {
      _builder.clearId()
    }
    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.Int64Value id = 1;`
     * @return Whether the id field is set.
     */
    public fun hasId(): kotlin.Boolean {
      return _builder.hasId()
    }
    public val ExpKt.Dsl.idOrNull: bilibili.app.distribution.v1.Int64Value?
      get() = _builder.idOrNull

    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.Int32Value bucket = 2;`
     */
    public var bucket: bilibili.app.distribution.v1.Int32Value
      @JvmName("getBucket")
      get() = _builder.getBucket()
      @JvmName("setBucket")
      set(value) {
        _builder.setBucket(value)
      }
    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.Int32Value bucket = 2;`
     */
    public fun clearBucket() {
      _builder.clearBucket()
    }
    /**
     * ```
     *
     * ```
     *
     * `.bilibili.app.distribution.v1.Int32Value bucket = 2;`
     * @return Whether the bucket field is set.
     */
    public fun hasBucket(): kotlin.Boolean {
      return _builder.hasBucket()
    }
    public val ExpKt.Dsl.bucketOrNull: bilibili.app.distribution.v1.Int32Value?
      get() = _builder.bucketOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.app.distribution.setting.experimental.Exp.copy(block: `bilibili.app.distribution.setting.experimental`.ExpKt.Dsl.() -> kotlin.Unit): bilibili.app.distribution.setting.experimental.Exp =
  `bilibili.app.distribution.setting.experimental`.ExpKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.app.distribution.setting.experimental.ExpOrBuilder.idOrNull: bilibili.app.distribution.v1.Int64Value?
  get() = if (hasId()) getId() else null

public val bilibili.app.distribution.setting.experimental.ExpOrBuilder.bucketOrNull: bilibili.app.distribution.v1.Int32Value?
  get() = if (hasBucket()) getBucket() else null

