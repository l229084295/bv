// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/api/probe/v1/probe.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.api.probe.v1;

@kotlin.jvm.JvmName("-initializesimpleMessage")
public inline fun simpleMessage(block: bilibili.api.probe.v1.SimpleMessageKt.Dsl.() -> kotlin.Unit): bilibili.api.probe.v1.SimpleMessage =
  bilibili.api.probe.v1.SimpleMessageKt.Dsl._create(bilibili.api.probe.v1.SimpleMessage.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.api.probe.v1.SimpleMessage`
 */
public object SimpleMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.api.probe.v1.SimpleMessage.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.api.probe.v1.SimpleMessage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.api.probe.v1.SimpleMessage = _builder.build()

    /**
     * ```
     * ```
     *
     * `int32 id = 1;`
     */
    public var id: kotlin.Int
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 id = 1;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * ```
     * ```
     *
     * `int64 num = 2;`
     */
    public var num: kotlin.Long
      @JvmName("getNum")
      get() = _builder.getNum()
      @JvmName("setNum")
      set(value) {
        _builder.setNum(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 num = 2;`
     */
    public fun clearNum() {
      _builder.clearNum()
    }

    /**
     * ```
     * ```
     *
     * `string lang = 3;`
     */
    public var lang: kotlin.String
      @JvmName("getLang")
      get() = _builder.getLang()
      @JvmName("setLang")
      set(value) {
        _builder.setLang(value)
      }
    /**
     * ```
     * ```
     *
     * `string lang = 3;`
     */
    public fun clearLang() {
      _builder.clearLang()
    }

    /**
     * ```
     * ```
     *
     * `int32 cate = 4;`
     */
    public var cate: kotlin.Int
      @JvmName("getCate")
      get() = _builder.getCate()
      @JvmName("setCate")
      set(value) {
        _builder.setCate(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 cate = 4;`
     */
    public fun clearCate() {
      _builder.clearCate()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.api.probe.v1.Embedded embedded = 5;`
     */
    public var embedded: bilibili.api.probe.v1.Embedded
      @JvmName("getEmbedded")
      get() = _builder.getEmbedded()
      @JvmName("setEmbedded")
      set(value) {
        _builder.setEmbedded(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.api.probe.v1.Embedded embedded = 5;`
     */
    public fun clearEmbedded() {
      _builder.clearEmbedded()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.api.probe.v1.Embedded embedded = 5;`
     * @return Whether the embedded field is set.
     */
    public fun hasEmbedded(): kotlin.Boolean {
      return _builder.hasEmbedded()
    }
    public val SimpleMessageKt.Dsl.embeddedOrNull: bilibili.api.probe.v1.Embedded?
      get() = _builder.embeddedOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.api.probe.v1.SimpleMessage.copy(block: `bilibili.api.probe.v1`.SimpleMessageKt.Dsl.() -> kotlin.Unit): bilibili.api.probe.v1.SimpleMessage =
  `bilibili.api.probe.v1`.SimpleMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.api.probe.v1.SimpleMessageOrBuilder.embeddedOrNull: bilibili.api.probe.v1.Embedded?
  get() = if (hasEmbedded()) getEmbedded() else null

