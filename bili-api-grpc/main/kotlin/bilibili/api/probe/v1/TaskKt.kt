// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/api/probe/v1/probe.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.api.probe.v1;

@kotlin.jvm.JvmName("-initializetask")
public inline fun task(block: bilibili.api.probe.v1.TaskKt.Dsl.() -> kotlin.Unit): bilibili.api.probe.v1.Task =
  bilibili.api.probe.v1.TaskKt.Dsl._create(bilibili.api.probe.v1.Task.newBuilder()).apply { block() }._build()
/**
 * ```
 *
 * ```
 *
 * Protobuf type `bilibili.api.probe.v1.Task`
 */
public object TaskKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.api.probe.v1.Task.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.api.probe.v1.Task.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.api.probe.v1.Task = _builder.build()

    /**
     * ```
     *
     * ```
     *
     * `string name = 1;`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * ```
     *
     * ```
     *
     * `string name = 1;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * ```
     *
     * ```
     *
     * `string author = 2;`
     */
    public var author: kotlin.String
      @JvmName("getAuthor")
      get() = _builder.getAuthor()
      @JvmName("setAuthor")
      set(value) {
        _builder.setAuthor(value)
      }
    /**
     * ```
     *
     * ```
     *
     * `string author = 2;`
     */
    public fun clearAuthor() {
      _builder.clearAuthor()
    }

    /**
     * ```
     *
     * ```
     *
     * `bool cache = 3;`
     */
    public var cache: kotlin.Boolean
      @JvmName("getCache")
      get() = _builder.getCache()
      @JvmName("setCache")
      set(value) {
        _builder.setCache(value)
      }
    /**
     * ```
     *
     * ```
     *
     * `bool cache = 3;`
     */
    public fun clearCache() {
      _builder.clearCache()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.api.probe.v1.Task.copy(block: `bilibili.api.probe.v1`.TaskKt.Dsl.() -> kotlin.Unit): bilibili.api.probe.v1.Task =
  `bilibili.api.probe.v1`.TaskKt.Dsl._create(this.toBuilder()).apply { block() }._build()

