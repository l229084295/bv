// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/api/ticket/v1/ticket.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.api.ticket.v1;

@kotlin.jvm.JvmName("-initializegetTicketRequest")
public inline fun getTicketRequest(block: bilibili.api.ticket.v1.GetTicketRequestKt.Dsl.() -> kotlin.Unit): bilibili.api.ticket.v1.GetTicketRequest =
  bilibili.api.ticket.v1.GetTicketRequestKt.Dsl._create(bilibili.api.ticket.v1.GetTicketRequest.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.api.ticket.v1.GetTicketRequest`
 */
public object GetTicketRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.api.ticket.v1.GetTicketRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.api.ticket.v1.GetTicketRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.api.ticket.v1.GetTicketRequest = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ContextProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * 包含:
     * + x-fingerprint(包含手机各类信息, 使用 datacenter.hakase.protobuf.AndroidDeviceInfo 生成)
     * + x-exbadbasket(?)
     * ```
     *
     * `map<string, bytes> context = 1;`
     */
     public val context: com.google.protobuf.kotlin.DslMap<kotlin.String, com.google.protobuf.ByteString, ContextProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getContextMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getContextMap()
      )
    /**
     * ```
     * 包含:
     * + x-fingerprint(包含手机各类信息, 使用 datacenter.hakase.protobuf.AndroidDeviceInfo 生成)
     * + x-exbadbasket(?)
     * ```
     *
     * `map<string, bytes> context = 1;`
     */
    @JvmName("putContext")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.google.protobuf.ByteString, ContextProxy>
      .put(key: kotlin.String, value: com.google.protobuf.ByteString) {
         _builder.putContext(key, value)
       }
    /**
     * ```
     * 包含:
     * + x-fingerprint(包含手机各类信息, 使用 datacenter.hakase.protobuf.AndroidDeviceInfo 生成)
     * + x-exbadbasket(?)
     * ```
     *
     * `map<string, bytes> context = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setContext")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.google.protobuf.ByteString, ContextProxy>
      .set(key: kotlin.String, value: com.google.protobuf.ByteString) {
         put(key, value)
       }
    /**
     * ```
     * 包含:
     * + x-fingerprint(包含手机各类信息, 使用 datacenter.hakase.protobuf.AndroidDeviceInfo 生成)
     * + x-exbadbasket(?)
     * ```
     *
     * `map<string, bytes> context = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeContext")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.google.protobuf.ByteString, ContextProxy>
      .remove(key: kotlin.String) {
         _builder.removeContext(key)
       }
    /**
     * ```
     * 包含:
     * + x-fingerprint(包含手机各类信息, 使用 datacenter.hakase.protobuf.AndroidDeviceInfo 生成)
     * + x-exbadbasket(?)
     * ```
     *
     * `map<string, bytes> context = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllContext")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.google.protobuf.ByteString, ContextProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, com.google.protobuf.ByteString>) {
         _builder.putAllContext(map)
       }
    /**
     * ```
     * 包含:
     * + x-fingerprint(包含手机各类信息, 使用 datacenter.hakase.protobuf.AndroidDeviceInfo 生成)
     * + x-exbadbasket(?)
     * ```
     *
     * `map<string, bytes> context = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearContext")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.google.protobuf.ByteString, ContextProxy>
      .clear() {
         _builder.clearContext()
       }

    /**
     * ```
     * 暂时固定为 ec01
     * ```
     *
     * `string key_id = 2;`
     */
    public var keyId: kotlin.String
      @JvmName("getKeyId")
      get() = _builder.getKeyId()
      @JvmName("setKeyId")
      set(value) {
        _builder.setKeyId(value)
      }
    /**
     * ```
     * 暂时固定为 ec01
     * ```
     *
     * `string key_id = 2;`
     */
    public fun clearKeyId() {
      _builder.clearKeyId()
    }

    /**
     * ```
     * ```
     *
     * `bytes sign = 3;`
     */
    public var sign: com.google.protobuf.ByteString
      @JvmName("getSign")
      get() = _builder.getSign()
      @JvmName("setSign")
      set(value) {
        _builder.setSign(value)
      }
    /**
     * ```
     * ```
     *
     * `bytes sign = 3;`
     */
    public fun clearSign() {
      _builder.clearSign()
    }

    /**
     * ```
     * 暂时留空
     * ```
     *
     * `string token = 4;`
     */
    public var token: kotlin.String
      @JvmName("getToken")
      get() = _builder.getToken()
      @JvmName("setToken")
      set(value) {
        _builder.setToken(value)
      }
    /**
     * ```
     * 暂时留空
     * ```
     *
     * `string token = 4;`
     */
    public fun clearToken() {
      _builder.clearToken()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.api.ticket.v1.GetTicketRequest.copy(block: `bilibili.api.ticket.v1`.GetTicketRequestKt.Dsl.() -> kotlin.Unit): bilibili.api.ticket.v1.GetTicketRequest =
  `bilibili.api.ticket.v1`.GetTicketRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

