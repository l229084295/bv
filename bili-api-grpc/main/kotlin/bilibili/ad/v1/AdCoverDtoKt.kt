// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/ad/v1/ad.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.ad.v1;

@kotlin.jvm.JvmName("-initializeadCoverDto")
public inline fun adCoverDto(block: bilibili.ad.v1.AdCoverDtoKt.Dsl.() -> kotlin.Unit): bilibili.ad.v1.AdCoverDto =
  bilibili.ad.v1.AdCoverDtoKt.Dsl._create(bilibili.ad.v1.AdCoverDto.newBuilder()).apply { block() }._build()
/**
 * ```
 * 广告卡片封面数据
 * ```
 *
 * Protobuf type `bilibili.ad.v1.AdCoverDto`
 */
public object AdCoverDtoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.ad.v1.AdCoverDto.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.ad.v1.AdCoverDto.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.ad.v1.AdCoverDto = _builder.build()

    /**
     * ```
     * 图片链接
     * ```
     *
     * `string url = 1;`
     */
    public var url: kotlin.String
      @JvmName("getUrl")
      get() = _builder.getUrl()
      @JvmName("setUrl")
      set(value) {
        _builder.setUrl(value)
      }
    /**
     * ```
     * 图片链接
     * ```
     *
     * `string url = 1;`
     */
    public fun clearUrl() {
      _builder.clearUrl()
    }

    /**
     * ```
     * 动图循环次数
     * 0:无限循环
     * ```
     *
     * `int32 loop = 2;`
     */
    public var loop: kotlin.Int
      @JvmName("getLoop")
      get() = _builder.getLoop()
      @JvmName("setLoop")
      set(value) {
        _builder.setLoop(value)
      }
    /**
     * ```
     * 动图循环次数
     * 0:无限循环
     * ```
     *
     * `int32 loop = 2;`
     */
    public fun clearLoop() {
      _builder.clearLoop()
    }

    /**
     * ```
     * 图片点击跳转地址，截至目前为空
     * ```
     *
     * `string jump_url = 3;`
     */
    public var jumpUrl: kotlin.String
      @JvmName("getJumpUrl")
      get() = _builder.getJumpUrl()
      @JvmName("setJumpUrl")
      set(value) {
        _builder.setJumpUrl(value)
      }
    /**
     * ```
     * 图片点击跳转地址，截至目前为空
     * ```
     *
     * `string jump_url = 3;`
     */
    public fun clearJumpUrl() {
      _builder.clearJumpUrl()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ReportUrlsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * 跳转监测链接， 数组，单个图片的监控，出区别于click_urls，应前端要求。（此字段截至目前为空，使用时需再次确认）
     * ```
     *
     * `repeated string report_urls = 4;`
     * @return A list containing the reportUrls.
     */
    public val reportUrls: com.google.protobuf.kotlin.DslList<kotlin.String, ReportUrlsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getReportUrlsList()
      )
    /**
     * ```
     * 跳转监测链接， 数组，单个图片的监控，出区别于click_urls，应前端要求。（此字段截至目前为空，使用时需再次确认）
     * ```
     *
     * `repeated string report_urls = 4;`
     * @param value The reportUrls to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addReportUrls")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ReportUrlsProxy>.add(value: kotlin.String) {
      _builder.addReportUrls(value)
    }
    /**
     * ```
     * 跳转监测链接， 数组，单个图片的监控，出区别于click_urls，应前端要求。（此字段截至目前为空，使用时需再次确认）
     * ```
     *
     * `repeated string report_urls = 4;`
     * @param value The reportUrls to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignReportUrls")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ReportUrlsProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * ```
     * 跳转监测链接， 数组，单个图片的监控，出区别于click_urls，应前端要求。（此字段截至目前为空，使用时需再次确认）
     * ```
     *
     * `repeated string report_urls = 4;`
     * @param values The reportUrls to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllReportUrls")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ReportUrlsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllReportUrls(values)
    }
    /**
     * ```
     * 跳转监测链接， 数组，单个图片的监控，出区别于click_urls，应前端要求。（此字段截至目前为空，使用时需再次确认）
     * ```
     *
     * `repeated string report_urls = 4;`
     * @param values The reportUrls to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllReportUrls")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ReportUrlsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * ```
     * 跳转监测链接， 数组，单个图片的监控，出区别于click_urls，应前端要求。（此字段截至目前为空，使用时需再次确认）
     * ```
     *
     * `repeated string report_urls = 4;`
     * @param index The index to set the value at.
     * @param value The reportUrls to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setReportUrls")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ReportUrlsProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setReportUrls(index, value)
    }/**
     * ```
     * 跳转监测链接， 数组，单个图片的监控，出区别于click_urls，应前端要求。（此字段截至目前为空，使用时需再次确认）
     * ```
     *
     * `repeated string report_urls = 4;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearReportUrls")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ReportUrlsProxy>.clear() {
      _builder.clearReportUrls()
    }
    /**
     * ```
     * 图片高度
     * ```
     *
     * `int32 image_height = 5;`
     */
    public var imageHeight: kotlin.Int
      @JvmName("getImageHeight")
      get() = _builder.getImageHeight()
      @JvmName("setImageHeight")
      set(value) {
        _builder.setImageHeight(value)
      }
    /**
     * ```
     * 图片高度
     * ```
     *
     * `int32 image_height = 5;`
     */
    public fun clearImageHeight() {
      _builder.clearImageHeight()
    }

    /**
     * ```
     * 图片宽度
     * ```
     *
     * `int32 image_width = 6;`
     */
    public var imageWidth: kotlin.Int
      @JvmName("getImageWidth")
      get() = _builder.getImageWidth()
      @JvmName("setImageWidth")
      set(value) {
        _builder.setImageWidth(value)
      }
    /**
     * ```
     * 图片宽度
     * ```
     *
     * `int32 image_width = 6;`
     */
    public fun clearImageWidth() {
      _builder.clearImageWidth()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.ad.v1.AdCoverDto.copy(block: `bilibili.ad.v1`.AdCoverDtoKt.Dsl.() -> kotlin.Unit): bilibili.ad.v1.AdCoverDto =
  `bilibili.ad.v1`.AdCoverDtoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

