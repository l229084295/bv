// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/ad/v1/ad.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.ad.v1;

@kotlin.jvm.JvmName("-initializeadBusinessMarkDto")
public inline fun adBusinessMarkDto(block: bilibili.ad.v1.AdBusinessMarkDtoKt.Dsl.() -> kotlin.Unit): bilibili.ad.v1.AdBusinessMarkDto =
  bilibili.ad.v1.AdBusinessMarkDtoKt.Dsl._create(bilibili.ad.v1.AdBusinessMarkDto.newBuilder()).apply { block() }._build()
/**
 * ```
 * 商业标信息
 * ```
 *
 * Protobuf type `bilibili.ad.v1.AdBusinessMarkDto`
 */
public object AdBusinessMarkDtoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.ad.v1.AdBusinessMarkDto.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.ad.v1.AdBusinessMarkDto.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.ad.v1.AdBusinessMarkDto = _builder.build()

    /**
     * ```
     * 商业标样式
     * 0:不展示标 1:实心+文字 2:空心框+文字 3:纯文字标 4:纯图片标
     * ```
     *
     * `int32 type = 1;`
     */
    public var type: kotlin.Int
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * ```
     * 商业标样式
     * 0:不展示标 1:实心+文字 2:空心框+文字 3:纯文字标 4:纯图片标
     * ```
     *
     * `int32 type = 1;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * ```
     * 商业标文案
     * ```
     *
     * `string text = 2;`
     */
    public var text: kotlin.String
      @JvmName("getText")
      get() = _builder.getText()
      @JvmName("setText")
      set(value) {
        _builder.setText(value)
      }
    /**
     * ```
     * 商业标文案
     * ```
     *
     * `string text = 2;`
     */
    public fun clearText() {
      _builder.clearText()
    }

    /**
     * ```
     * 商业标文案颜色,如#80FFFFFF RGBA
     * ```
     *
     * `string text_color = 3;`
     */
    public var textColor: kotlin.String
      @JvmName("getTextColor")
      get() = _builder.getTextColor()
      @JvmName("setTextColor")
      set(value) {
        _builder.setTextColor(value)
      }
    /**
     * ```
     * 商业标文案颜色,如#80FFFFFF RGBA
     * ```
     *
     * `string text_color = 3;`
     */
    public fun clearTextColor() {
      _builder.clearTextColor()
    }

    /**
     * ```
     * 夜间模式文字色
     * ```
     *
     * `string text_color_night = 4;`
     */
    public var textColorNight: kotlin.String
      @JvmName("getTextColorNight")
      get() = _builder.getTextColorNight()
      @JvmName("setTextColorNight")
      set(value) {
        _builder.setTextColorNight(value)
      }
    /**
     * ```
     * 夜间模式文字色
     * ```
     *
     * `string text_color_night = 4;`
     */
    public fun clearTextColorNight() {
      _builder.clearTextColorNight()
    }

    /**
     * ```
     * 背景色
     * ```
     *
     * `string bg_color = 5;`
     */
    public var bgColor: kotlin.String
      @JvmName("getBgColor")
      get() = _builder.getBgColor()
      @JvmName("setBgColor")
      set(value) {
        _builder.setBgColor(value)
      }
    /**
     * ```
     * 背景色
     * ```
     *
     * `string bg_color = 5;`
     */
    public fun clearBgColor() {
      _builder.clearBgColor()
    }

    /**
     * ```
     * 夜间模式背景色
     * ```
     *
     * `string bg_color_night = 6;`
     */
    public var bgColorNight: kotlin.String
      @JvmName("getBgColorNight")
      get() = _builder.getBgColorNight()
      @JvmName("setBgColorNight")
      set(value) {
        _builder.setBgColorNight(value)
      }
    /**
     * ```
     * 夜间模式背景色
     * ```
     *
     * `string bg_color_night = 6;`
     */
    public fun clearBgColorNight() {
      _builder.clearBgColorNight()
    }

    /**
     * ```
     * 边框色
     * ```
     *
     * `string border_color = 7;`
     */
    public var borderColor: kotlin.String
      @JvmName("getBorderColor")
      get() = _builder.getBorderColor()
      @JvmName("setBorderColor")
      set(value) {
        _builder.setBorderColor(value)
      }
    /**
     * ```
     * 边框色
     * ```
     *
     * `string border_color = 7;`
     */
    public fun clearBorderColor() {
      _builder.clearBorderColor()
    }

    /**
     * ```
     * 夜间模式边框色
     * ```
     *
     * `string border_color_night = 8;`
     */
    public var borderColorNight: kotlin.String
      @JvmName("getBorderColorNight")
      get() = _builder.getBorderColorNight()
      @JvmName("setBorderColorNight")
      set(value) {
        _builder.setBorderColorNight(value)
      }
    /**
     * ```
     * 夜间模式边框色
     * ```
     *
     * `string border_color_night = 8;`
     */
    public fun clearBorderColorNight() {
      _builder.clearBorderColorNight()
    }

    /**
     * ```
     * 图片商业标
     * ```
     *
     * `string img_url = 9;`
     */
    public var imgUrl: kotlin.String
      @JvmName("getImgUrl")
      get() = _builder.getImgUrl()
      @JvmName("setImgUrl")
      set(value) {
        _builder.setImgUrl(value)
      }
    /**
     * ```
     * 图片商业标
     * ```
     *
     * `string img_url = 9;`
     */
    public fun clearImgUrl() {
      _builder.clearImgUrl()
    }

    /**
     * ```
     * 图片高度
     * ```
     *
     * `int32 img_height = 10;`
     */
    public var imgHeight: kotlin.Int
      @JvmName("getImgHeight")
      get() = _builder.getImgHeight()
      @JvmName("setImgHeight")
      set(value) {
        _builder.setImgHeight(value)
      }
    /**
     * ```
     * 图片高度
     * ```
     *
     * `int32 img_height = 10;`
     */
    public fun clearImgHeight() {
      _builder.clearImgHeight()
    }

    /**
     * ```
     * 图片宽度
     * ```
     *
     * `int32 img_width = 11;`
     */
    public var imgWidth: kotlin.Int
      @JvmName("getImgWidth")
      get() = _builder.getImgWidth()
      @JvmName("setImgWidth")
      set(value) {
        _builder.setImgWidth(value)
      }
    /**
     * ```
     * 图片宽度
     * ```
     *
     * `int32 img_width = 11;`
     */
    public fun clearImgWidth() {
      _builder.clearImgWidth()
    }

    /**
     * ```
     * ```
     *
     * `string bg_border_color = 12;`
     */
    public var bgBorderColor: kotlin.String
      @JvmName("getBgBorderColor")
      get() = _builder.getBgBorderColor()
      @JvmName("setBgBorderColor")
      set(value) {
        _builder.setBgBorderColor(value)
      }
    /**
     * ```
     * ```
     *
     * `string bg_border_color = 12;`
     */
    public fun clearBgBorderColor() {
      _builder.clearBgBorderColor()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.ad.v1.AdBusinessMarkDto.copy(block: `bilibili.ad.v1`.AdBusinessMarkDtoKt.Dsl.() -> kotlin.Unit): bilibili.ad.v1.AdBusinessMarkDto =
  `bilibili.ad.v1`.AdBusinessMarkDtoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

