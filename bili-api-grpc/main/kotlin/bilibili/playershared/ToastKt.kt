// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/playershared/playershared.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.playershared;

@kotlin.jvm.JvmName("-initializetoast")
public inline fun toast(block: bilibili.playershared.ToastKt.Dsl.() -> kotlin.Unit): bilibili.playershared.Toast =
  bilibili.playershared.ToastKt.Dsl._create(bilibili.playershared.Toast.newBuilder()).apply { block() }._build()
/**
 * ```
 * Toast信息
 * ```
 *
 * Protobuf type `bilibili.playershared.Toast`
 */
public object ToastKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.playershared.Toast.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.playershared.Toast.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.playershared.Toast = _builder.build()

    /**
     * ```
     * toast文案
     * ```
     *
     * `string text = 1;`
     */
    public var text: kotlin.String
      @JvmName("getText")
      get() = _builder.getText()
      @JvmName("setText")
      set(value) {
        _builder.setText(value)
      }
    /**
     * ```
     * toast文案
     * ```
     *
     * `string text = 1;`
     */
    public fun clearText() {
      _builder.clearText()
    }

    /**
     * ```
     * toast按钮
     * ```
     *
     * `.bilibili.playershared.Button button = 2;`
     */
    public var button: bilibili.playershared.Button
      @JvmName("getButton")
      get() = _builder.getButton()
      @JvmName("setButton")
      set(value) {
        _builder.setButton(value)
      }
    /**
     * ```
     * toast按钮
     * ```
     *
     * `.bilibili.playershared.Button button = 2;`
     */
    public fun clearButton() {
      _builder.clearButton()
    }
    /**
     * ```
     * toast按钮
     * ```
     *
     * `.bilibili.playershared.Button button = 2;`
     * @return Whether the button field is set.
     */
    public fun hasButton(): kotlin.Boolean {
      return _builder.hasButton()
    }
    public val ToastKt.Dsl.buttonOrNull: bilibili.playershared.Button?
      get() = _builder.buttonOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.playershared.Toast.copy(block: `bilibili.playershared`.ToastKt.Dsl.() -> kotlin.Unit): bilibili.playershared.Toast =
  `bilibili.playershared`.ToastKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.playershared.ToastOrBuilder.buttonOrNull: bilibili.playershared.Button?
  get() = if (hasButton()) getButton() else null

