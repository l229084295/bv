// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/playershared/playershared.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.playershared;

@kotlin.jvm.JvmName("-initializebutton")
public inline fun button(block: bilibili.playershared.ButtonKt.Dsl.() -> kotlin.Unit): bilibili.playershared.Button =
  bilibili.playershared.ButtonKt.Dsl._create(bilibili.playershared.Button.newBuilder()).apply { block() }._build()
/**
 * ```
 * 按钮组件
 * ```
 *
 * Protobuf type `bilibili.playershared.Button`
 */
public object ButtonKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.playershared.Button.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.playershared.Button.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.playershared.Button = _builder.build()

    /**
     * ```
     * 按钮文本
     * ```
     *
     * `string text = 1;`
     */
    public var text: kotlin.String
      @JvmName("getText")
      get() = _builder.getText()
      @JvmName("setText")
      set(value) {
        _builder.setText(value)
      }
    /**
     * ```
     * 按钮文本
     * ```
     *
     * `string text = 1;`
     */
    public fun clearText() {
      _builder.clearText()
    }

    /**
     * ```
     * 按钮跳转链接
     * ```
     *
     * `string link = 2;`
     */
    public var link: kotlin.String
      @JvmName("getLink")
      get() = _builder.getLink()
      @JvmName("setLink")
      set(value) {
        _builder.setLink(value)
      }
    /**
     * ```
     * 按钮跳转链接
     * ```
     *
     * `string link = 2;`
     */
    public fun clearLink() {
      _builder.clearLink()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ReportParamsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * 埋点上报相关
     * ```
     *
     * `map<string, string> report_params = 3;`
     */
     public val reportParams: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ReportParamsProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getReportParamsMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getReportParamsMap()
      )
    /**
     * ```
     * 埋点上报相关
     * ```
     *
     * `map<string, string> report_params = 3;`
     */
    @JvmName("putReportParams")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ReportParamsProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putReportParams(key, value)
       }
    /**
     * ```
     * 埋点上报相关
     * ```
     *
     * `map<string, string> report_params = 3;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setReportParams")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ReportParamsProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * ```
     * 埋点上报相关
     * ```
     *
     * `map<string, string> report_params = 3;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeReportParams")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ReportParamsProxy>
      .remove(key: kotlin.String) {
         _builder.removeReportParams(key)
       }
    /**
     * ```
     * 埋点上报相关
     * ```
     *
     * `map<string, string> report_params = 3;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllReportParams")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ReportParamsProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllReportParams(map)
       }
    /**
     * ```
     * 埋点上报相关
     * ```
     *
     * `map<string, string> report_params = 3;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearReportParams")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ReportParamsProxy>
      .clear() {
         _builder.clearReportParams()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.playershared.Button.copy(block: `bilibili.playershared`.ButtonKt.Dsl.() -> kotlin.Unit): bilibili.playershared.Button =
  `bilibili.playershared`.ButtonKt.Dsl._create(this.toBuilder()).apply { block() }._build()

