// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/playershared/playershared.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.playershared;

@kotlin.jvm.JvmName("-initializescheme")
public inline fun scheme(block: bilibili.playershared.SchemeKt.Dsl.() -> kotlin.Unit): bilibili.playershared.Scheme =
  bilibili.playershared.SchemeKt.Dsl._create(bilibili.playershared.Scheme.newBuilder()).apply { block() }._build()
/**
 * ```
 * 方案
 * ```
 *
 * Protobuf type `bilibili.playershared.Scheme`
 */
public object SchemeKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.playershared.Scheme.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.playershared.Scheme.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.playershared.Scheme = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.playershared.Scheme.ActionType action_type = 1;`
     */
    public var actionType: bilibili.playershared.Scheme.ActionType
      @JvmName("getActionType")
      get() = _builder.getActionType()
      @JvmName("setActionType")
      set(value) {
        _builder.setActionType(value)
      }
    public var actionTypeValue: kotlin.Int
      @JvmName("getActionTypeValue")
      get() = _builder.getActionTypeValue()
      @JvmName("setActionTypeValue")
      set(value) {
        _builder.setActionTypeValue(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.playershared.Scheme.ActionType action_type = 1;`
     */
    public fun clearActionType() {
      _builder.clearActionType()
    }

    /**
     * ```
     * ```
     *
     * `string toast = 2;`
     */
    public var toast: kotlin.String
      @JvmName("getToast")
      get() = _builder.getToast()
      @JvmName("setToast")
      set(value) {
        _builder.setToast(value)
      }
    /**
     * ```
     * ```
     *
     * `string toast = 2;`
     */
    public fun clearToast() {
      _builder.clearToast()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.playershared.Scheme.copy(block: `bilibili.playershared`.SchemeKt.Dsl.() -> kotlin.Unit): bilibili.playershared.Scheme =
  `bilibili.playershared`.SchemeKt.Dsl._create(this.toBuilder()).apply { block() }._build()

