// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/playershared/playershared.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.playershared;

@kotlin.jvm.JvmName("-initializeinteraction")
public inline fun interaction(block: bilibili.playershared.InteractionKt.Dsl.() -> kotlin.Unit): bilibili.playershared.Interaction =
  bilibili.playershared.InteractionKt.Dsl._create(bilibili.playershared.Interaction.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.playershared.Interaction`
 */
public object InteractionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.playershared.Interaction.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.playershared.Interaction.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.playershared.Interaction = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.playershared.Node history_node = 1;`
     */
    public var historyNode: bilibili.playershared.Node
      @JvmName("getHistoryNode")
      get() = _builder.getHistoryNode()
      @JvmName("setHistoryNode")
      set(value) {
        _builder.setHistoryNode(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.playershared.Node history_node = 1;`
     */
    public fun clearHistoryNode() {
      _builder.clearHistoryNode()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.playershared.Node history_node = 1;`
     * @return Whether the historyNode field is set.
     */
    public fun hasHistoryNode(): kotlin.Boolean {
      return _builder.hasHistoryNode()
    }
    public val InteractionKt.Dsl.historyNodeOrNull: bilibili.playershared.Node?
      get() = _builder.historyNodeOrNull

    /**
     * ```
     * ```
     *
     * `int64 graph_version = 2;`
     */
    public var graphVersion: kotlin.Long
      @JvmName("getGraphVersion")
      get() = _builder.getGraphVersion()
      @JvmName("setGraphVersion")
      set(value) {
        _builder.setGraphVersion(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 graph_version = 2;`
     */
    public fun clearGraphVersion() {
      _builder.clearGraphVersion()
    }

    /**
     * ```
     * ```
     *
     * `string msg = 3;`
     */
    public var msg: kotlin.String
      @JvmName("getMsg")
      get() = _builder.getMsg()
      @JvmName("setMsg")
      set(value) {
        _builder.setMsg(value)
      }
    /**
     * ```
     * ```
     *
     * `string msg = 3;`
     */
    public fun clearMsg() {
      _builder.clearMsg()
    }

    /**
     * ```
     * ```
     *
     * `int64 mark = 4;`
     */
    public var mark: kotlin.Long
      @JvmName("getMark")
      get() = _builder.getMark()
      @JvmName("setMark")
      set(value) {
        _builder.setMark(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 mark = 4;`
     */
    public fun clearMark() {
      _builder.clearMark()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.playershared.Interaction.copy(block: `bilibili.playershared`.InteractionKt.Dsl.() -> kotlin.Unit): bilibili.playershared.Interaction =
  `bilibili.playershared`.InteractionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.playershared.InteractionOrBuilder.historyNodeOrNull: bilibili.playershared.Node?
  get() = if (hasHistoryNode()) getHistoryNode() else null

