// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/playershared/playershared.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.playershared;

@kotlin.jvm.JvmName("-initializeplayArcConf")
public inline fun playArcConf(block: bilibili.playershared.PlayArcConfKt.Dsl.() -> kotlin.Unit): bilibili.playershared.PlayArcConf =
  bilibili.playershared.PlayArcConfKt.Dsl._create(bilibili.playershared.PlayArcConf.newBuilder()).apply { block() }._build()
/**
 * ```
 * 播放页信息-响应: PlayArcConf
 * ```
 *
 * Protobuf type `bilibili.playershared.PlayArcConf`
 */
public object PlayArcConfKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.playershared.PlayArcConf.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.playershared.PlayArcConf.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.playershared.PlayArcConf = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ArcConfsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `map<int32, .bilibili.playershared.ArcConf> arc_confs = 1;`
     */
     public val arcConfs: com.google.protobuf.kotlin.DslMap<kotlin.Int, bilibili.playershared.ArcConf, ArcConfsProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getArcConfsMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getArcConfsMap()
      )
    /**
     * `map<int32, .bilibili.playershared.ArcConf> arc_confs = 1;`
     */
    @JvmName("putArcConfs")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, bilibili.playershared.ArcConf, ArcConfsProxy>
      .put(key: kotlin.Int, value: bilibili.playershared.ArcConf) {
         _builder.putArcConfs(key, value)
       }
    /**
     * `map<int32, .bilibili.playershared.ArcConf> arc_confs = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setArcConfs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.Int, bilibili.playershared.ArcConf, ArcConfsProxy>
      .set(key: kotlin.Int, value: bilibili.playershared.ArcConf) {
         put(key, value)
       }
    /**
     * `map<int32, .bilibili.playershared.ArcConf> arc_confs = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeArcConfs")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, bilibili.playershared.ArcConf, ArcConfsProxy>
      .remove(key: kotlin.Int) {
         _builder.removeArcConfs(key)
       }
    /**
     * `map<int32, .bilibili.playershared.ArcConf> arc_confs = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllArcConfs")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, bilibili.playershared.ArcConf, ArcConfsProxy>
      .putAll(map: kotlin.collections.Map<kotlin.Int, bilibili.playershared.ArcConf>) {
         _builder.putAllArcConfs(map)
       }
    /**
     * `map<int32, .bilibili.playershared.ArcConf> arc_confs = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearArcConfs")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, bilibili.playershared.ArcConf, ArcConfsProxy>
      .clear() {
         _builder.clearArcConfs()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.playershared.PlayArcConf.copy(block: `bilibili.playershared`.PlayArcConfKt.Dsl.() -> kotlin.Unit): bilibili.playershared.PlayArcConf =
  `bilibili.playershared`.PlayArcConfKt.Dsl._create(this.toBuilder()).apply { block() }._build()

