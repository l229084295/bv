// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/playershared/playershared.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.playershared;

@kotlin.jvm.JvmName("-initializeconfValue")
public inline fun confValue(block: bilibili.playershared.ConfValueKt.Dsl.() -> kotlin.Unit): bilibili.playershared.ConfValue =
  bilibili.playershared.ConfValueKt.Dsl._create(bilibili.playershared.ConfValue.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.playershared.ConfValue`
 */
public object ConfValueKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.playershared.ConfValue.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.playershared.ConfValue.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.playershared.ConfValue = _builder.build()

    /**
     * ```
     * ```
     *
     * `int32 switch_val = 1;`
     */
    public var switchVal: kotlin.Int
      @JvmName("getSwitchVal")
      get() = _builder.getSwitchVal()
      @JvmName("setSwitchVal")
      set(value) {
        _builder.setSwitchVal(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 switch_val = 1;`
     */
    public fun clearSwitchVal() {
      _builder.clearSwitchVal()
    }
    /**
     * ```
     * ```
     *
     * `int32 switch_val = 1;`
     * @return Whether the switchVal field is set.
     */
    public fun hasSwitchVal(): kotlin.Boolean {
      return _builder.hasSwitchVal()
    }

    /**
     * ```
     * ```
     *
     * `int32 selected_val = 2;`
     */
    public var selectedVal: kotlin.Int
      @JvmName("getSelectedVal")
      get() = _builder.getSelectedVal()
      @JvmName("setSelectedVal")
      set(value) {
        _builder.setSelectedVal(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 selected_val = 2;`
     */
    public fun clearSelectedVal() {
      _builder.clearSelectedVal()
    }
    /**
     * ```
     * ```
     *
     * `int32 selected_val = 2;`
     * @return Whether the selectedVal field is set.
     */
    public fun hasSelectedVal(): kotlin.Boolean {
      return _builder.hasSelectedVal()
    }
    public val valueCase: bilibili.playershared.ConfValue.ValueCase
      @JvmName("getValueCase")
      get() = _builder.getValueCase()

    public fun clearValue() {
      _builder.clearValue()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.playershared.ConfValue.copy(block: `bilibili.playershared`.ConfValueKt.Dsl.() -> kotlin.Unit): bilibili.playershared.ConfValue =
  `bilibili.playershared`.ConfValueKt.Dsl._create(this.toBuilder()).apply { block() }._build()

