// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/playershared/playershared.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.playershared;

@kotlin.jvm.JvmName("-initializehistoryInfo")
public inline fun historyInfo(block: bilibili.playershared.HistoryInfoKt.Dsl.() -> kotlin.Unit): bilibili.playershared.HistoryInfo =
  bilibili.playershared.HistoryInfoKt.Dsl._create(bilibili.playershared.HistoryInfo.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.playershared.HistoryInfo`
 */
public object HistoryInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.playershared.HistoryInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.playershared.HistoryInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.playershared.HistoryInfo = _builder.build()

    /**
     * ```
     * ```
     *
     * `int64 progress = 1;`
     */
    public var progress: kotlin.Long
      @JvmName("getProgress")
      get() = _builder.getProgress()
      @JvmName("setProgress")
      set(value) {
        _builder.setProgress(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 progress = 1;`
     */
    public fun clearProgress() {
      _builder.clearProgress()
    }

    /**
     * ```
     * ```
     *
     * `int64 last_play_cid = 2;`
     */
    public var lastPlayCid: kotlin.Long
      @JvmName("getLastPlayCid")
      get() = _builder.getLastPlayCid()
      @JvmName("setLastPlayCid")
      set(value) {
        _builder.setLastPlayCid(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 last_play_cid = 2;`
     */
    public fun clearLastPlayCid() {
      _builder.clearLastPlayCid()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.playershared.Toast toast = 3;`
     */
    public var toast: bilibili.playershared.Toast
      @JvmName("getToast")
      get() = _builder.getToast()
      @JvmName("setToast")
      set(value) {
        _builder.setToast(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.playershared.Toast toast = 3;`
     */
    public fun clearToast() {
      _builder.clearToast()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.playershared.Toast toast = 3;`
     * @return Whether the toast field is set.
     */
    public fun hasToast(): kotlin.Boolean {
      return _builder.hasToast()
    }
    public val HistoryInfoKt.Dsl.toastOrNull: bilibili.playershared.Toast?
      get() = _builder.toastOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.playershared.Toast toast_without_time = 4;`
     */
    public var toastWithoutTime: bilibili.playershared.Toast
      @JvmName("getToastWithoutTime")
      get() = _builder.getToastWithoutTime()
      @JvmName("setToastWithoutTime")
      set(value) {
        _builder.setToastWithoutTime(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.playershared.Toast toast_without_time = 4;`
     */
    public fun clearToastWithoutTime() {
      _builder.clearToastWithoutTime()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.playershared.Toast toast_without_time = 4;`
     * @return Whether the toastWithoutTime field is set.
     */
    public fun hasToastWithoutTime(): kotlin.Boolean {
      return _builder.hasToastWithoutTime()
    }
    public val HistoryInfoKt.Dsl.toastWithoutTimeOrNull: bilibili.playershared.Toast?
      get() = _builder.toastWithoutTimeOrNull

    /**
     * ```
     * ```
     *
     * `int64 last_play_aid = 5;`
     */
    public var lastPlayAid: kotlin.Long
      @JvmName("getLastPlayAid")
      get() = _builder.getLastPlayAid()
      @JvmName("setLastPlayAid")
      set(value) {
        _builder.setLastPlayAid(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 last_play_aid = 5;`
     */
    public fun clearLastPlayAid() {
      _builder.clearLastPlayAid()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.playershared.HistoryInfo.copy(block: `bilibili.playershared`.HistoryInfoKt.Dsl.() -> kotlin.Unit): bilibili.playershared.HistoryInfo =
  `bilibili.playershared`.HistoryInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.playershared.HistoryInfoOrBuilder.toastOrNull: bilibili.playershared.Toast?
  get() = if (hasToast()) getToast() else null

public val bilibili.playershared.HistoryInfoOrBuilder.toastWithoutTimeOrNull: bilibili.playershared.Toast?
  get() = if (hasToastWithoutTime()) getToastWithoutTime() else null

