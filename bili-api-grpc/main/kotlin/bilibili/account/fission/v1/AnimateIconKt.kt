// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/account/fission/v1/fission.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.account.fission.v1;

@kotlin.jvm.JvmName("-initializeanimateIcon")
public inline fun animateIcon(block: bilibili.account.fission.v1.AnimateIconKt.Dsl.() -> kotlin.Unit): bilibili.account.fission.v1.AnimateIcon =
  bilibili.account.fission.v1.AnimateIconKt.Dsl._create(bilibili.account.fission.v1.AnimateIcon.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动画效果
 * ```
 *
 * Protobuf type `bilibili.account.fission.v1.AnimateIcon`
 */
public object AnimateIconKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.account.fission.v1.AnimateIcon.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.account.fission.v1.AnimateIcon.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.account.fission.v1.AnimateIcon = _builder.build()

    /**
     * ```
     * icon文件
     * ```
     *
     * `string icon = 1;`
     */
    public var icon: kotlin.String
      @JvmName("getIcon")
      get() = _builder.getIcon()
      @JvmName("setIcon")
      set(value) {
        _builder.setIcon(value)
      }
    /**
     * ```
     * icon文件
     * ```
     *
     * `string icon = 1;`
     */
    public fun clearIcon() {
      _builder.clearIcon()
    }

    /**
     * ```
     * 动效json文件
     * ```
     *
     * `string json = 2;`
     */
    public var json: kotlin.String
      @JvmName("getJson")
      get() = _builder.getJson()
      @JvmName("setJson")
      set(value) {
        _builder.setJson(value)
      }
    /**
     * ```
     * 动效json文件
     * ```
     *
     * `string json = 2;`
     */
    public fun clearJson() {
      _builder.clearJson()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.account.fission.v1.AnimateIcon.copy(block: `bilibili.account.fission.v1`.AnimateIconKt.Dsl.() -> kotlin.Unit): bilibili.account.fission.v1.AnimateIcon =
  `bilibili.account.fission.v1`.AnimateIconKt.Dsl._create(this.toBuilder()).apply { block() }._build()

