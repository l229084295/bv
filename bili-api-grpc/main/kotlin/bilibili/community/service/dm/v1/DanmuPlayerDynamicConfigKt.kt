// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/community/service/dm/v1/dm.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.community.service.dm.v1;

@kotlin.jvm.JvmName("-initializedanmuPlayerDynamicConfig")
public inline fun danmuPlayerDynamicConfig(block: bilibili.community.service.dm.v1.DanmuPlayerDynamicConfigKt.Dsl.() -> kotlin.Unit): bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig =
  bilibili.community.service.dm.v1.DanmuPlayerDynamicConfigKt.Dsl._create(bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig.newBuilder()).apply { block() }._build()
/**
 * ```
 * 弹幕显示区域自动配置
 * ```
 *
 * Protobuf type `bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig`
 */
public object DanmuPlayerDynamicConfigKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig = _builder.build()

    /**
     * ```
     * 时间
     * ```
     *
     * `int32 progress = 1;`
     */
    public var progress: kotlin.Int
      @JvmName("getProgress")
      get() = _builder.getProgress()
      @JvmName("setProgress")
      set(value) {
        _builder.setProgress(value)
      }
    /**
     * ```
     * 时间
     * ```
     *
     * `int32 progress = 1;`
     */
    public fun clearProgress() {
      _builder.clearProgress()
    }

    /**
     * ```
     * 弹幕显示区域
     * ```
     *
     * `float player_danmaku_domain = 14;`
     */
    public var playerDanmakuDomain: kotlin.Float
      @JvmName("getPlayerDanmakuDomain")
      get() = _builder.getPlayerDanmakuDomain()
      @JvmName("setPlayerDanmakuDomain")
      set(value) {
        _builder.setPlayerDanmakuDomain(value)
      }
    /**
     * ```
     * 弹幕显示区域
     * ```
     *
     * `float player_danmaku_domain = 14;`
     */
    public fun clearPlayerDanmakuDomain() {
      _builder.clearPlayerDanmakuDomain()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig.copy(block: `bilibili.community.service.dm.v1`.DanmuPlayerDynamicConfigKt.Dsl.() -> kotlin.Unit): bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig =
  `bilibili.community.service.dm.v1`.DanmuPlayerDynamicConfigKt.Dsl._create(this.toBuilder()).apply { block() }._build()

