// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/community/service/dm/v1/dm.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.community.service.dm.v1;

@kotlin.jvm.JvmName("-initializedmViewReq")
public inline fun dmViewReq(block: bilibili.community.service.dm.v1.DmViewReqKt.Dsl.() -> kotlin.Unit): bilibili.community.service.dm.v1.DmViewReq =
  bilibili.community.service.dm.v1.DmViewReqKt.Dsl._create(bilibili.community.service.dm.v1.DmViewReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * 客户端弹幕元数据-请求
 * ```
 *
 * Protobuf type `bilibili.community.service.dm.v1.DmViewReq`
 */
public object DmViewReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.community.service.dm.v1.DmViewReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.community.service.dm.v1.DmViewReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.community.service.dm.v1.DmViewReq = _builder.build()

    /**
     * ```
     * 稿件avid/漫画epid
     * ```
     *
     * `int64 pid = 1;`
     */
    public var pid: kotlin.Long
      @JvmName("getPid")
      get() = _builder.getPid()
      @JvmName("setPid")
      set(value) {
        _builder.setPid(value)
      }
    /**
     * ```
     * 稿件avid/漫画epid
     * ```
     *
     * `int64 pid = 1;`
     */
    public fun clearPid() {
      _builder.clearPid()
    }

    /**
     * ```
     * 视频cid/漫画cid
     * ```
     *
     * `int64 oid = 2;`
     */
    public var oid: kotlin.Long
      @JvmName("getOid")
      get() = _builder.getOid()
      @JvmName("setOid")
      set(value) {
        _builder.setOid(value)
      }
    /**
     * ```
     * 视频cid/漫画cid
     * ```
     *
     * `int64 oid = 2;`
     */
    public fun clearOid() {
      _builder.clearOid()
    }

    /**
     * ```
     * 弹幕类型
     * 1:视频 2:漫画
     * ```
     *
     * `int32 type = 3;`
     */
    public var type: kotlin.Int
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * ```
     * 弹幕类型
     * 1:视频 2:漫画
     * ```
     *
     * `int32 type = 3;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * ```
     * 页面spm
     * ```
     *
     * `string spmid = 4;`
     */
    public var spmid: kotlin.String
      @JvmName("getSpmid")
      get() = _builder.getSpmid()
      @JvmName("setSpmid")
      set(value) {
        _builder.setSpmid(value)
      }
    /**
     * ```
     * 页面spm
     * ```
     *
     * `string spmid = 4;`
     */
    public fun clearSpmid() {
      _builder.clearSpmid()
    }

    /**
     * ```
     * 是否冷启
     * ```
     *
     * `int32 is_hard_boot = 5;`
     */
    public var isHardBoot: kotlin.Int
      @JvmName("getIsHardBoot")
      get() = _builder.getIsHardBoot()
      @JvmName("setIsHardBoot")
      set(value) {
        _builder.setIsHardBoot(value)
      }
    /**
     * ```
     * 是否冷启
     * ```
     *
     * `int32 is_hard_boot = 5;`
     */
    public fun clearIsHardBoot() {
      _builder.clearIsHardBoot()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.community.service.dm.v1.DmViewReq.copy(block: `bilibili.community.service.dm.v1`.DmViewReqKt.Dsl.() -> kotlin.Unit): bilibili.community.service.dm.v1.DmViewReq =
  `bilibili.community.service.dm.v1`.DmViewReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

