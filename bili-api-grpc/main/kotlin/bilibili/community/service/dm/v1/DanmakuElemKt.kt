// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/community/service/dm/v1/dm.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.community.service.dm.v1;

@kotlin.jvm.JvmName("-initializedanmakuElem")
public inline fun danmakuElem(block: bilibili.community.service.dm.v1.DanmakuElemKt.Dsl.() -> kotlin.Unit): bilibili.community.service.dm.v1.DanmakuElem =
  bilibili.community.service.dm.v1.DanmakuElemKt.Dsl._create(bilibili.community.service.dm.v1.DanmakuElem.newBuilder()).apply { block() }._build()
/**
 * ```
 * 弹幕条目
 * ```
 *
 * Protobuf type `bilibili.community.service.dm.v1.DanmakuElem`
 */
public object DanmakuElemKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.community.service.dm.v1.DanmakuElem.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.community.service.dm.v1.DanmakuElem.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.community.service.dm.v1.DanmakuElem = _builder.build()

    /**
     * ```
     * 弹幕dmid
     * ```
     *
     * `int64 id = 1;`
     */
    public var id: kotlin.Long
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * ```
     * 弹幕dmid
     * ```
     *
     * `int64 id = 1;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * ```
     * 弹幕出现位置(单位ms)
     * ```
     *
     * `int32 progress = 2;`
     */
    public var progress: kotlin.Int
      @JvmName("getProgress")
      get() = _builder.getProgress()
      @JvmName("setProgress")
      set(value) {
        _builder.setProgress(value)
      }
    /**
     * ```
     * 弹幕出现位置(单位ms)
     * ```
     *
     * `int32 progress = 2;`
     */
    public fun clearProgress() {
      _builder.clearProgress()
    }

    /**
     * ```
     * 弹幕类型 1 2 3:普通弹幕 4:底部弹幕 5:顶部弹幕 6:逆向弹幕 7:高级弹幕 8:代码弹幕 9:BAS弹幕(pool必须为2)
     * ```
     *
     * `int32 mode = 3;`
     */
    public var mode: kotlin.Int
      @JvmName("getMode")
      get() = _builder.getMode()
      @JvmName("setMode")
      set(value) {
        _builder.setMode(value)
      }
    /**
     * ```
     * 弹幕类型 1 2 3:普通弹幕 4:底部弹幕 5:顶部弹幕 6:逆向弹幕 7:高级弹幕 8:代码弹幕 9:BAS弹幕(pool必须为2)
     * ```
     *
     * `int32 mode = 3;`
     */
    public fun clearMode() {
      _builder.clearMode()
    }

    /**
     * ```
     * 弹幕字号
     * ```
     *
     * `int32 fontsize = 4;`
     */
    public var fontsize: kotlin.Int
      @JvmName("getFontsize")
      get() = _builder.getFontsize()
      @JvmName("setFontsize")
      set(value) {
        _builder.setFontsize(value)
      }
    /**
     * ```
     * 弹幕字号
     * ```
     *
     * `int32 fontsize = 4;`
     */
    public fun clearFontsize() {
      _builder.clearFontsize()
    }

    /**
     * ```
     * 弹幕颜色
     * ```
     *
     * `uint32 color = 5;`
     */
    public var color: kotlin.Int
      @JvmName("getColor")
      get() = _builder.getColor()
      @JvmName("setColor")
      set(value) {
        _builder.setColor(value)
      }
    /**
     * ```
     * 弹幕颜色
     * ```
     *
     * `uint32 color = 5;`
     */
    public fun clearColor() {
      _builder.clearColor()
    }

    /**
     * ```
     * 发送者mid hash
     * ```
     *
     * `string midHash = 6;`
     */
    public var midHash: kotlin.String
      @JvmName("getMidHash")
      get() = _builder.getMidHash()
      @JvmName("setMidHash")
      set(value) {
        _builder.setMidHash(value)
      }
    /**
     * ```
     * 发送者mid hash
     * ```
     *
     * `string midHash = 6;`
     */
    public fun clearMidHash() {
      _builder.clearMidHash()
    }

    /**
     * ```
     * 弹幕正文
     * ```
     *
     * `string content = 7;`
     */
    public var content: kotlin.String
      @JvmName("getContent")
      get() = _builder.getContent()
      @JvmName("setContent")
      set(value) {
        _builder.setContent(value)
      }
    /**
     * ```
     * 弹幕正文
     * ```
     *
     * `string content = 7;`
     */
    public fun clearContent() {
      _builder.clearContent()
    }

    /**
     * ```
     * 发送时间
     * ```
     *
     * `int64 ctime = 8;`
     */
    public var ctime: kotlin.Long
      @JvmName("getCtime")
      get() = _builder.getCtime()
      @JvmName("setCtime")
      set(value) {
        _builder.setCtime(value)
      }
    /**
     * ```
     * 发送时间
     * ```
     *
     * `int64 ctime = 8;`
     */
    public fun clearCtime() {
      _builder.clearCtime()
    }

    /**
     * ```
     * 权重 用于屏蔽等级 区间:[1,10]
     * ```
     *
     * `int32 weight = 9;`
     */
    public var weight: kotlin.Int
      @JvmName("getWeight")
      get() = _builder.getWeight()
      @JvmName("setWeight")
      set(value) {
        _builder.setWeight(value)
      }
    /**
     * ```
     * 权重 用于屏蔽等级 区间:[1,10]
     * ```
     *
     * `int32 weight = 9;`
     */
    public fun clearWeight() {
      _builder.clearWeight()
    }

    /**
     * ```
     * 动作
     * ```
     *
     * `string action = 10;`
     */
    public var action: kotlin.String
      @JvmName("getAction")
      get() = _builder.getAction()
      @JvmName("setAction")
      set(value) {
        _builder.setAction(value)
      }
    /**
     * ```
     * 动作
     * ```
     *
     * `string action = 10;`
     */
    public fun clearAction() {
      _builder.clearAction()
    }

    /**
     * ```
     * 弹幕池 0:普通池 1:字幕池 2:特殊池(代码/BAS弹幕)
     * ```
     *
     * `int32 pool = 11;`
     */
    public var pool: kotlin.Int
      @JvmName("getPool")
      get() = _builder.getPool()
      @JvmName("setPool")
      set(value) {
        _builder.setPool(value)
      }
    /**
     * ```
     * 弹幕池 0:普通池 1:字幕池 2:特殊池(代码/BAS弹幕)
     * ```
     *
     * `int32 pool = 11;`
     */
    public fun clearPool() {
      _builder.clearPool()
    }

    /**
     * ```
     * 弹幕dmid str
     * ```
     *
     * `string idStr = 12;`
     */
    public var idStr: kotlin.String
      @JvmName("getIdStr")
      get() = _builder.getIdStr()
      @JvmName("setIdStr")
      set(value) {
        _builder.setIdStr(value)
      }
    /**
     * ```
     * 弹幕dmid str
     * ```
     *
     * `string idStr = 12;`
     */
    public fun clearIdStr() {
      _builder.clearIdStr()
    }

    /**
     * ```
     * 弹幕属性位(bin求AND)
     * bit0:保护 bit1:直播 bit2:高赞
     * ```
     *
     * `int32 attr = 13;`
     */
    public var attr: kotlin.Int
      @JvmName("getAttr")
      get() = _builder.getAttr()
      @JvmName("setAttr")
      set(value) {
        _builder.setAttr(value)
      }
    /**
     * ```
     * 弹幕属性位(bin求AND)
     * bit0:保护 bit1:直播 bit2:高赞
     * ```
     *
     * `int32 attr = 13;`
     */
    public fun clearAttr() {
      _builder.clearAttr()
    }

    /**
     * ```
     * ```
     *
     * `string animation = 22;`
     */
    public var animation: kotlin.String
      @JvmName("getAnimation")
      get() = _builder.getAnimation()
      @JvmName("setAnimation")
      set(value) {
        _builder.setAnimation(value)
      }
    /**
     * ```
     * ```
     *
     * `string animation = 22;`
     */
    public fun clearAnimation() {
      _builder.clearAnimation()
    }

    /**
     * ```
     * 大会员专属颜色
     * ```
     *
     * `.bilibili.community.service.dm.v1.DmColorfulType colorful = 24;`
     */
    public var colorful: bilibili.community.service.dm.v1.DmColorfulType
      @JvmName("getColorful")
      get() = _builder.getColorful()
      @JvmName("setColorful")
      set(value) {
        _builder.setColorful(value)
      }
    public var colorfulValue: kotlin.Int
      @JvmName("getColorfulValue")
      get() = _builder.getColorfulValue()
      @JvmName("setColorfulValue")
      set(value) {
        _builder.setColorfulValue(value)
      }
    /**
     * ```
     * 大会员专属颜色
     * ```
     *
     * `.bilibili.community.service.dm.v1.DmColorfulType colorful = 24;`
     */
    public fun clearColorful() {
      _builder.clearColorful()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.community.service.dm.v1.DanmakuElem.copy(block: `bilibili.community.service.dm.v1`.DanmakuElemKt.Dsl.() -> kotlin.Unit): bilibili.community.service.dm.v1.DanmakuElem =
  `bilibili.community.service.dm.v1`.DanmakuElemKt.Dsl._create(this.toBuilder()).apply { block() }._build()

