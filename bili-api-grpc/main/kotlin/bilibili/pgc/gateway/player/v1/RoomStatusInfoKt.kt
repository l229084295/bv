// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/pgc/gateway/player/v1/playurl.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.pgc.gateway.player.v1;

@kotlin.jvm.JvmName("-initializeroomStatusInfo")
public inline fun roomStatusInfo(block: bilibili.pgc.gateway.player.v1.RoomStatusInfoKt.Dsl.() -> kotlin.Unit): bilibili.pgc.gateway.player.v1.RoomStatusInfo =
  bilibili.pgc.gateway.player.v1.RoomStatusInfoKt.Dsl._create(bilibili.pgc.gateway.player.v1.RoomStatusInfo.newBuilder()).apply { block() }._build()
/**
 * ```
 * 房间信息-状态相关
 * ```
 *
 * Protobuf type `bilibili.pgc.gateway.player.v1.RoomStatusInfo`
 */
public object RoomStatusInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.pgc.gateway.player.v1.RoomStatusInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.pgc.gateway.player.v1.RoomStatusInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.pgc.gateway.player.v1.RoomStatusInfo = _builder.build()

    /**
     * ```
     * 直播间状态
     * 0:未开播 1:直播中 2:轮播中
     * ```
     *
     * `int64 live_status = 1;`
     */
    public var liveStatus: kotlin.Long
      @JvmName("getLiveStatus")
      get() = _builder.getLiveStatus()
      @JvmName("setLiveStatus")
      set(value) {
        _builder.setLiveStatus(value)
      }
    /**
     * ```
     * 直播间状态
     * 0:未开播 1:直播中 2:轮播中
     * ```
     *
     * `int64 live_status = 1;`
     */
    public fun clearLiveStatus() {
      _builder.clearLiveStatus()
    }

    /**
     * ```
     * 横竖屏方向
     * 0:横屏 1:竖屏
     * ```
     *
     * `int64 live_screen_type = 2;`
     */
    public var liveScreenType: kotlin.Long
      @JvmName("getLiveScreenType")
      get() = _builder.getLiveScreenType()
      @JvmName("setLiveScreenType")
      set(value) {
        _builder.setLiveScreenType(value)
      }
    /**
     * ```
     * 横竖屏方向
     * 0:横屏 1:竖屏
     * ```
     *
     * `int64 live_screen_type = 2;`
     */
    public fun clearLiveScreenType() {
      _builder.clearLiveScreenType()
    }

    /**
     * ```
     * 是否开播过标识
     * ```
     *
     * `int64 live_mark = 3;`
     */
    public var liveMark: kotlin.Long
      @JvmName("getLiveMark")
      get() = _builder.getLiveMark()
      @JvmName("setLiveMark")
      set(value) {
        _builder.setLiveMark(value)
      }
    /**
     * ```
     * 是否开播过标识
     * ```
     *
     * `int64 live_mark = 3;`
     */
    public fun clearLiveMark() {
      _builder.clearLiveMark()
    }

    /**
     * ```
     * 封禁状态
     * 0:未封禁 1:审核封禁 2:全网封禁
     * ```
     *
     * `int64 lock_status = 4;`
     */
    public var lockStatus: kotlin.Long
      @JvmName("getLockStatus")
      get() = _builder.getLockStatus()
      @JvmName("setLockStatus")
      set(value) {
        _builder.setLockStatus(value)
      }
    /**
     * ```
     * 封禁状态
     * 0:未封禁 1:审核封禁 2:全网封禁
     * ```
     *
     * `int64 lock_status = 4;`
     */
    public fun clearLockStatus() {
      _builder.clearLockStatus()
    }

    /**
     * ```
     * 封禁时间戳
     * ```
     *
     * `int64 lock_time = 5;`
     */
    public var lockTime: kotlin.Long
      @JvmName("getLockTime")
      get() = _builder.getLockTime()
      @JvmName("setLockTime")
      set(value) {
        _builder.setLockTime(value)
      }
    /**
     * ```
     * 封禁时间戳
     * ```
     *
     * `int64 lock_time = 5;`
     */
    public fun clearLockTime() {
      _builder.clearLockTime()
    }

    /**
     * ```
     * 隐藏状态
     * 0:不隐藏 1:隐藏
     * ```
     *
     * `int64 hidden_status = 6;`
     */
    public var hiddenStatus: kotlin.Long
      @JvmName("getHiddenStatus")
      get() = _builder.getHiddenStatus()
      @JvmName("setHiddenStatus")
      set(value) {
        _builder.setHiddenStatus(value)
      }
    /**
     * ```
     * 隐藏状态
     * 0:不隐藏 1:隐藏
     * ```
     *
     * `int64 hidden_status = 6;`
     */
    public fun clearHiddenStatus() {
      _builder.clearHiddenStatus()
    }

    /**
     * ```
     * 隐藏时间戳
     * ```
     *
     * `int64 hidden_time = 7;`
     */
    public var hiddenTime: kotlin.Long
      @JvmName("getHiddenTime")
      get() = _builder.getHiddenTime()
      @JvmName("setHiddenTime")
      set(value) {
        _builder.setHiddenTime(value)
      }
    /**
     * ```
     * 隐藏时间戳
     * ```
     *
     * `int64 hidden_time = 7;`
     */
    public fun clearHiddenTime() {
      _builder.clearHiddenTime()
    }

    /**
     * ```
     * 直播类型
     * 0:默认 1:摄像头直播 2;录屏直播 3:语音直播
     * ```
     *
     * `int64 live_type = 8;`
     */
    public var liveType: kotlin.Long
      @JvmName("getLiveType")
      get() = _builder.getLiveType()
      @JvmName("setLiveType")
      set(value) {
        _builder.setLiveType(value)
      }
    /**
     * ```
     * 直播类型
     * 0:默认 1:摄像头直播 2;录屏直播 3:语音直播
     * ```
     *
     * `int64 live_type = 8;`
     */
    public fun clearLiveType() {
      _builder.clearLiveType()
    }

    /**
     * ```
     * ```
     *
     * `int64 room_shield = 9;`
     */
    public var roomShield: kotlin.Long
      @JvmName("getRoomShield")
      get() = _builder.getRoomShield()
      @JvmName("setRoomShield")
      set(value) {
        _builder.setRoomShield(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 room_shield = 9;`
     */
    public fun clearRoomShield() {
      _builder.clearRoomShield()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.pgc.gateway.player.v1.RoomStatusInfo.copy(block: `bilibili.pgc.gateway.player.v1`.RoomStatusInfoKt.Dsl.() -> kotlin.Unit): bilibili.pgc.gateway.player.v1.RoomStatusInfo =
  `bilibili.pgc.gateway.player.v1`.RoomStatusInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

