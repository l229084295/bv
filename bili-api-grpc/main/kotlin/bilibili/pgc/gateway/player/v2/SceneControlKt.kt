// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/pgc/gateway/player/v2/playurl.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.pgc.gateway.player.v2;

@kotlin.jvm.JvmName("-initializesceneControl")
public inline fun sceneControl(block: bilibili.pgc.gateway.player.v2.SceneControlKt.Dsl.() -> kotlin.Unit): bilibili.pgc.gateway.player.v2.SceneControl =
  bilibili.pgc.gateway.player.v2.SceneControlKt.Dsl._create(bilibili.pgc.gateway.player.v2.SceneControl.newBuilder()).apply { block() }._build()
/**
 * ```
 * 场景控制
 * ```
 *
 * Protobuf type `bilibili.pgc.gateway.player.v2.SceneControl`
 */
public object SceneControlKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.pgc.gateway.player.v2.SceneControl.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.pgc.gateway.player.v2.SceneControl.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.pgc.gateway.player.v2.SceneControl = _builder.build()

    /**
     * ```
     * 是否收藏播单
     * ```
     *
     * `bool fav_playlist = 1;`
     */
    public var favPlaylist: kotlin.Boolean
      @JvmName("getFavPlaylist")
      get() = _builder.getFavPlaylist()
      @JvmName("setFavPlaylist")
      set(value) {
        _builder.setFavPlaylist(value)
      }
    /**
     * ```
     * 是否收藏播单
     * ```
     *
     * `bool fav_playlist = 1;`
     */
    public fun clearFavPlaylist() {
      _builder.clearFavPlaylist()
    }

    /**
     * ```
     * 是否小窗
     * ```
     *
     * `bool small_window = 2;`
     */
    public var smallWindow: kotlin.Boolean
      @JvmName("getSmallWindow")
      get() = _builder.getSmallWindow()
      @JvmName("setSmallWindow")
      set(value) {
        _builder.setSmallWindow(value)
      }
    /**
     * ```
     * 是否小窗
     * ```
     *
     * `bool small_window = 2;`
     */
    public fun clearSmallWindow() {
      _builder.clearSmallWindow()
    }

    /**
     * ```
     * 是否画中画
     * ```
     *
     * `bool pip = 3;`
     */
    public var pip: kotlin.Boolean
      @JvmName("getPip")
      get() = _builder.getPip()
      @JvmName("setPip")
      set(value) {
        _builder.setPip(value)
      }
    /**
     * ```
     * 是否画中画
     * ```
     *
     * `bool pip = 3;`
     */
    public fun clearPip() {
      _builder.clearPip()
    }

    /**
     * ```
     * ```
     *
     * `bool was_he_inline = 4;`
     */
    public var wasHeInline: kotlin.Boolean
      @JvmName("getWasHeInline")
      get() = _builder.getWasHeInline()
      @JvmName("setWasHeInline")
      set(value) {
        _builder.setWasHeInline(value)
      }
    /**
     * ```
     * ```
     *
     * `bool was_he_inline = 4;`
     */
    public fun clearWasHeInline() {
      _builder.clearWasHeInline()
    }

    /**
     * ```
     * ```
     *
     * `bool is_need_trial = 5;`
     */
    public var isNeedTrial: kotlin.Boolean
      @JvmName("getIsNeedTrial")
      get() = _builder.getIsNeedTrial()
      @JvmName("setIsNeedTrial")
      set(value) {
        _builder.setIsNeedTrial(value)
      }
    /**
     * ```
     * ```
     *
     * `bool is_need_trial = 5;`
     */
    public fun clearIsNeedTrial() {
      _builder.clearIsNeedTrial()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.pgc.gateway.player.v2.SceneControl.copy(block: `bilibili.pgc.gateway.player.v2`.SceneControlKt.Dsl.() -> kotlin.Unit): bilibili.pgc.gateway.player.v2.SceneControl =
  `bilibili.pgc.gateway.player.v2`.SceneControlKt.Dsl._create(this.toBuilder()).apply { block() }._build()

