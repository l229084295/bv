// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/pgc/service/premiere/v1/premiere.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.pgc.service.premiere.v1;

@kotlin.jvm.JvmName("-initializepremiereStatusReply")
public inline fun premiereStatusReply(block: bilibili.pgc.service.premiere.v1.PremiereStatusReplyKt.Dsl.() -> kotlin.Unit): bilibili.pgc.service.premiere.v1.PremiereStatusReply =
  bilibili.pgc.service.premiere.v1.PremiereStatusReplyKt.Dsl._create(bilibili.pgc.service.premiere.v1.PremiereStatusReply.newBuilder()).apply { block() }._build()
/**
 * ```
 * 获取首播状态-响应
 * ```
 *
 * Protobuf type `bilibili.pgc.service.premiere.v1.PremiereStatusReply`
 */
public object PremiereStatusReplyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.pgc.service.premiere.v1.PremiereStatusReply.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.pgc.service.premiere.v1.PremiereStatusReply.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.pgc.service.premiere.v1.PremiereStatusReply = _builder.build()

    /**
     * ```
     * 服务端播放进度 单位ms 用户实际播放进度：progress - delay_time
     * ```
     *
     * `int64 progress = 1;`
     */
    public var progress: kotlin.Long
      @JvmName("getProgress")
      get() = _builder.getProgress()
      @JvmName("setProgress")
      set(value) {
        _builder.setProgress(value)
      }
    /**
     * ```
     * 服务端播放进度 单位ms 用户实际播放进度：progress - delay_time
     * ```
     *
     * `int64 progress = 1;`
     */
    public fun clearProgress() {
      _builder.clearProgress()
    }

    /**
     * ```
     * 起播时间戳 单位ms
     * ```
     *
     * `int64 start_time = 2;`
     */
    public var startTime: kotlin.Long
      @JvmName("getStartTime")
      get() = _builder.getStartTime()
      @JvmName("setStartTime")
      set(value) {
        _builder.setStartTime(value)
      }
    /**
     * ```
     * 起播时间戳 单位ms
     * ```
     *
     * `int64 start_time = 2;`
     */
    public fun clearStartTime() {
      _builder.clearStartTime()
    }

    /**
     * ```
     * 延迟播放时长 单位ms
     * ```
     *
     * `int64 delay_time = 3;`
     */
    public var delayTime: kotlin.Long
      @JvmName("getDelayTime")
      get() = _builder.getDelayTime()
      @JvmName("setDelayTime")
      set(value) {
        _builder.setDelayTime(value)
      }
    /**
     * ```
     * 延迟播放时长 单位ms
     * ```
     *
     * `int64 delay_time = 3;`
     */
    public fun clearDelayTime() {
      _builder.clearDelayTime()
    }

    /**
     * ```
     * 首播在线人数
     * ```
     *
     * `int64 online_count = 4;`
     */
    public var onlineCount: kotlin.Long
      @JvmName("getOnlineCount")
      get() = _builder.getOnlineCount()
      @JvmName("setOnlineCount")
      set(value) {
        _builder.setOnlineCount(value)
      }
    /**
     * ```
     * 首播在线人数
     * ```
     *
     * `int64 online_count = 4;`
     */
    public fun clearOnlineCount() {
      _builder.clearOnlineCount()
    }

    /**
     * ```
     * 首播状态
     * 1:预热 2:首播中 3:紧急停播 4:已结束
     * ```
     *
     * `int32 status = 5;`
     */
    public var status: kotlin.Int
      @JvmName("getStatus")
      get() = _builder.getStatus()
      @JvmName("setStatus")
      set(value) {
        _builder.setStatus(value)
      }
    /**
     * ```
     * 首播状态
     * 1:预热 2:首播中 3:紧急停播 4:已结束
     * ```
     *
     * `int32 status = 5;`
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }

    /**
     * ```
     * 首播结束后跳转类型
     * 1:下架 2:转点播
     * ```
     *
     * `int32 after_premiere_type = 6;`
     */
    public var afterPremiereType: kotlin.Int
      @JvmName("getAfterPremiereType")
      get() = _builder.getAfterPremiereType()
      @JvmName("setAfterPremiereType")
      set(value) {
        _builder.setAfterPremiereType(value)
      }
    /**
     * ```
     * 首播结束后跳转类型
     * 1:下架 2:转点播
     * ```
     *
     * `int32 after_premiere_type = 6;`
     */
    public fun clearAfterPremiereType() {
      _builder.clearAfterPremiereType()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.pgc.service.premiere.v1.PremiereStatusReply.copy(block: `bilibili.pgc.service.premiere.v1`.PremiereStatusReplyKt.Dsl.() -> kotlin.Unit): bilibili.pgc.service.premiere.v1.PremiereStatusReply =
  `bilibili.pgc.service.premiere.v1`.PremiereStatusReplyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

