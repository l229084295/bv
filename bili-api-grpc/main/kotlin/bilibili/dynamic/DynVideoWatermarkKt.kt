// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/common/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic;

@kotlin.jvm.JvmName("-initializedynVideoWatermark")
public inline fun dynVideoWatermark(block: bilibili.dynamic.DynVideoWatermarkKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.DynVideoWatermark =
  bilibili.dynamic.DynVideoWatermarkKt.Dsl._create(bilibili.dynamic.DynVideoWatermark.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态视频水印信息
 * ```
 *
 * Protobuf type `bilibili.dynamic.DynVideoWatermark`
 */
public object DynVideoWatermarkKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.DynVideoWatermark.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.DynVideoWatermark.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.DynVideoWatermark = _builder.build()

    /**
     * ```
     * 水印状态 
     * 0-关闭 1-打开 2-预览
     * ```
     *
     * `int32 state = 1;`
     */
    public var state: kotlin.Int
      @JvmName("getState")
      get() = _builder.getState()
      @JvmName("setState")
      set(value) {
        _builder.setState(value)
      }
    /**
     * ```
     * 水印状态 
     * 0-关闭 1-打开 2-预览
     * ```
     *
     * `int32 state = 1;`
     */
    public fun clearState() {
      _builder.clearState()
    }

    /**
     * ```
     * 类型
     * 1-用户昵称类型 2-用户id类型 3-用户名在logo下面
     * ```
     *
     * `int32 type = 2;`
     */
    public var type: kotlin.Int
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * ```
     * 类型
     * 1-用户昵称类型 2-用户id类型 3-用户名在logo下面
     * ```
     *
     * `int32 type = 2;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * ```
     * 位置
     * 1-左上 2-右上 3-左下 4-右下
     * ```
     *
     * `int32 position = 3;`
     */
    public var position: kotlin.Int
      @JvmName("getPosition")
      get() = _builder.getPosition()
      @JvmName("setPosition")
      set(value) {
        _builder.setPosition(value)
      }
    /**
     * ```
     * 位置
     * 1-左上 2-右上 3-左下 4-右下
     * ```
     *
     * `int32 position = 3;`
     */
    public fun clearPosition() {
      _builder.clearPosition()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.DynVideoWatermark.copy(block: `bilibili.dynamic`.DynVideoWatermarkKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.DynVideoWatermark =
  `bilibili.dynamic`.DynVideoWatermarkKt.Dsl._create(this.toBuilder()).apply { block() }._build()

