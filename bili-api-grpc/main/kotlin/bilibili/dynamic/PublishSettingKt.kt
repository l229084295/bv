// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/common/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic;

@kotlin.jvm.JvmName("-initializepublishSetting")
public inline fun publishSetting(block: bilibili.dynamic.PublishSettingKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.PublishSetting =
  bilibili.dynamic.PublishSettingKt.Dsl._create(bilibili.dynamic.PublishSetting.newBuilder()).apply { block() }._build()
/**
 * ```
 * 发布相关的设置项
 * ```
 *
 * Protobuf type `bilibili.dynamic.PublishSetting`
 */
public object PublishSettingKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.PublishSetting.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.PublishSetting.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.PublishSetting = _builder.build()

    /**
     * ```
     * 提示转为专栏的最小字数，使用utf-16编码计算字符数
     * ```
     *
     * `int32 min_words_to_article = 1;`
     */
    public var minWordsToArticle: kotlin.Int
      @JvmName("getMinWordsToArticle")
      get() = _builder.getMinWordsToArticle()
      @JvmName("setMinWordsToArticle")
      set(value) {
        _builder.setMinWordsToArticle(value)
      }
    /**
     * ```
     * 提示转为专栏的最小字数，使用utf-16编码计算字符数
     * ```
     *
     * `int32 min_words_to_article = 1;`
     */
    public fun clearMinWordsToArticle() {
      _builder.clearMinWordsToArticle()
    }

    /**
     * ```
     * 提示转为专栏的最大字数，使用utf-16编码计算字符数
     * ```
     *
     * `int32 max_words_to_article = 2;`
     */
    public var maxWordsToArticle: kotlin.Int
      @JvmName("getMaxWordsToArticle")
      get() = _builder.getMaxWordsToArticle()
      @JvmName("setMaxWordsToArticle")
      set(value) {
        _builder.setMaxWordsToArticle(value)
      }
    /**
     * ```
     * 提示转为专栏的最大字数，使用utf-16编码计算字符数
     * ```
     *
     * `int32 max_words_to_article = 2;`
     */
    public fun clearMaxWordsToArticle() {
      _builder.clearMaxWordsToArticle()
    }

    /**
     * ```
     * gif上传的最大值，单位：MB
     * ```
     *
     * `int32 upload_size = 3;`
     */
    public var uploadSize: kotlin.Int
      @JvmName("getUploadSize")
      get() = _builder.getUploadSize()
      @JvmName("setUploadSize")
      set(value) {
        _builder.setUploadSize(value)
      }
    /**
     * ```
     * gif上传的最大值，单位：MB
     * ```
     *
     * `int32 upload_size = 3;`
     */
    public fun clearUploadSize() {
      _builder.clearUploadSize()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.PublishSetting.copy(block: `bilibili.dynamic`.PublishSettingKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.PublishSetting =
  `bilibili.dynamic`.PublishSettingKt.Dsl._create(this.toBuilder()).apply { block() }._build()

