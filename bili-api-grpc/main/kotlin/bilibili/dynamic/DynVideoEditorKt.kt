// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/common/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic;

@kotlin.jvm.JvmName("-initializedynVideoEditor")
public inline fun dynVideoEditor(block: bilibili.dynamic.DynVideoEditorKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.DynVideoEditor =
  bilibili.dynamic.DynVideoEditorKt.Dsl._create(bilibili.dynamic.DynVideoEditor.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态视频分P视频编辑环境上报信息
 * ```
 *
 * Protobuf type `bilibili.dynamic.DynVideoEditor`
 */
public object DynVideoEditorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.DynVideoEditor.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.DynVideoEditor.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.DynVideoEditor = _builder.build()

    /**
     * ```
     * ```
     *
     * `int64 cid = 1;`
     */
    public var cid: kotlin.Long
      @JvmName("getCid")
      get() = _builder.getCid()
      @JvmName("setCid")
      set(value) {
        _builder.setCid(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 cid = 1;`
     */
    public fun clearCid() {
      _builder.clearCid()
    }

    /**
     * ```
     * ```
     *
     * `int32 upfrom = 2;`
     */
    public var upfrom: kotlin.Int
      @JvmName("getUpfrom")
      get() = _builder.getUpfrom()
      @JvmName("setUpfrom")
      set(value) {
        _builder.setUpfrom(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 upfrom = 2;`
     */
    public fun clearUpfrom() {
      _builder.clearUpfrom()
    }

    /**
     * ```
     * 滤镜
     * ```
     *
     * `string filters = 3;`
     */
    public var filters: kotlin.String
      @JvmName("getFilters")
      get() = _builder.getFilters()
      @JvmName("setFilters")
      set(value) {
        _builder.setFilters(value)
      }
    /**
     * ```
     * 滤镜
     * ```
     *
     * `string filters = 3;`
     */
    public fun clearFilters() {
      _builder.clearFilters()
    }

    /**
     * ```
     * 字体
     * ```
     *
     * `string fonts = 4;`
     */
    public var fonts: kotlin.String
      @JvmName("getFonts")
      get() = _builder.getFonts()
      @JvmName("setFonts")
      set(value) {
        _builder.setFonts(value)
      }
    /**
     * ```
     * 字体
     * ```
     *
     * `string fonts = 4;`
     */
    public fun clearFonts() {
      _builder.clearFonts()
    }

    /**
     * ```
     * 字幕
     * ```
     *
     * `string subtitles = 5;`
     */
    public var subtitles: kotlin.String
      @JvmName("getSubtitles")
      get() = _builder.getSubtitles()
      @JvmName("setSubtitles")
      set(value) {
        _builder.setSubtitles(value)
      }
    /**
     * ```
     * 字幕
     * ```
     *
     * `string subtitles = 5;`
     */
    public fun clearSubtitles() {
      _builder.clearSubtitles()
    }

    /**
     * ```
     * bgm
     * ```
     *
     * `string bgms = 6;`
     */
    public var bgms: kotlin.String
      @JvmName("getBgms")
      get() = _builder.getBgms()
      @JvmName("setBgms")
      set(value) {
        _builder.setBgms(value)
      }
    /**
     * ```
     * bgm
     * ```
     *
     * `string bgms = 6;`
     */
    public fun clearBgms() {
      _builder.clearBgms()
    }

    /**
     * ```
     * 3d拍摄贴纸
     * ```
     *
     * `string stickers = 7;`
     */
    public var stickers: kotlin.String
      @JvmName("getStickers")
      get() = _builder.getStickers()
      @JvmName("setStickers")
      set(value) {
        _builder.setStickers(value)
      }
    /**
     * ```
     * 3d拍摄贴纸
     * ```
     *
     * `string stickers = 7;`
     */
    public fun clearStickers() {
      _builder.clearStickers()
    }

    /**
     * ```
     * 2d投稿贴纸
     * ```
     *
     * `string videoup_stickers = 8;`
     */
    public var videoupStickers: kotlin.String
      @JvmName("getVideoupStickers")
      get() = _builder.getVideoupStickers()
      @JvmName("setVideoupStickers")
      set(value) {
        _builder.setVideoupStickers(value)
      }
    /**
     * ```
     * 2d投稿贴纸
     * ```
     *
     * `string videoup_stickers = 8;`
     */
    public fun clearVideoupStickers() {
      _builder.clearVideoupStickers()
    }

    /**
     * ```
     * 视频转场特效
     * ```
     *
     * `string trans = 9;`
     */
    public var trans: kotlin.String
      @JvmName("getTrans")
      get() = _builder.getTrans()
      @JvmName("setTrans")
      set(value) {
        _builder.setTrans(value)
      }
    /**
     * ```
     * 视频转场特效
     * ```
     *
     * `string trans = 9;`
     */
    public fun clearTrans() {
      _builder.clearTrans()
    }

    /**
     * ```
     * 编辑器的主题使用相关
     * ```
     *
     * `string makeups = 10;`
     */
    public var makeups: kotlin.String
      @JvmName("getMakeups")
      get() = _builder.getMakeups()
      @JvmName("setMakeups")
      set(value) {
        _builder.setMakeups(value)
      }
    /**
     * ```
     * 编辑器的主题使用相关
     * ```
     *
     * `string makeups = 10;`
     */
    public fun clearMakeups() {
      _builder.clearMakeups()
    }

    /**
     * ```
     * 整容之外科手术
     * ```
     *
     * `string surgerys = 11;`
     */
    public var surgerys: kotlin.String
      @JvmName("getSurgerys")
      get() = _builder.getSurgerys()
      @JvmName("setSurgerys")
      set(value) {
        _builder.setSurgerys(value)
      }
    /**
     * ```
     * 整容之外科手术
     * ```
     *
     * `string surgerys = 11;`
     */
    public fun clearSurgerys() {
      _builder.clearSurgerys()
    }

    /**
     * ```
     * 美摄特定的videofx
     * ```
     *
     * `string videofxs = 12;`
     */
    public var videofxs: kotlin.String
      @JvmName("getVideofxs")
      get() = _builder.getVideofxs()
      @JvmName("setVideofxs")
      set(value) {
        _builder.setVideofxs(value)
      }
    /**
     * ```
     * 美摄特定的videofx
     * ```
     *
     * `string videofxs = 12;`
     */
    public fun clearVideofxs() {
      _builder.clearVideofxs()
    }

    /**
     * ```
     * 编辑器的主题使用相关
     * ```
     *
     * `string themes = 13;`
     */
    public var themes: kotlin.String
      @JvmName("getThemes")
      get() = _builder.getThemes()
      @JvmName("setThemes")
      set(value) {
        _builder.setThemes(value)
      }
    /**
     * ```
     * 编辑器的主题使用相关
     * ```
     *
     * `string themes = 13;`
     */
    public fun clearThemes() {
      _builder.clearThemes()
    }

    /**
     * ```
     * 拍摄之稿件合拍
     * ```
     *
     * `string cooperates = 14;`
     */
    public var cooperates: kotlin.String
      @JvmName("getCooperates")
      get() = _builder.getCooperates()
      @JvmName("setCooperates")
      set(value) {
        _builder.setCooperates(value)
      }
    /**
     * ```
     * 拍摄之稿件合拍
     * ```
     *
     * `string cooperates = 14;`
     */
    public fun clearCooperates() {
      _builder.clearCooperates()
    }

    /**
     * ```
     * 拍摄之音乐卡点视频
     * ```
     *
     * `string rhythms = 15;`
     */
    public var rhythms: kotlin.String
      @JvmName("getRhythms")
      get() = _builder.getRhythms()
      @JvmName("setRhythms")
      set(value) {
        _builder.setRhythms(value)
      }
    /**
     * ```
     * 拍摄之音乐卡点视频
     * ```
     *
     * `string rhythms = 15;`
     */
    public fun clearRhythms() {
      _builder.clearRhythms()
    }

    /**
     * ```
     * mvp特效
     * ```
     *
     * `string effects = 16;`
     */
    public var effects: kotlin.String
      @JvmName("getEffects")
      get() = _builder.getEffects()
      @JvmName("setEffects")
      set(value) {
        _builder.setEffects(value)
      }
    /**
     * ```
     * mvp特效
     * ```
     *
     * `string effects = 16;`
     */
    public fun clearEffects() {
      _builder.clearEffects()
    }

    /**
     * ```
     * mvp背景
     * ```
     *
     * `string backgrounds = 17;`
     */
    public var backgrounds: kotlin.String
      @JvmName("getBackgrounds")
      get() = _builder.getBackgrounds()
      @JvmName("setBackgrounds")
      set(value) {
        _builder.setBackgrounds(value)
      }
    /**
     * ```
     * mvp背景
     * ```
     *
     * `string backgrounds = 17;`
     */
    public fun clearBackgrounds() {
      _builder.clearBackgrounds()
    }

    /**
     * ```
     * mvp视频
     * ```
     *
     * `string videos = 18;`
     */
    public var videos: kotlin.String
      @JvmName("getVideos")
      get() = _builder.getVideos()
      @JvmName("setVideos")
      set(value) {
        _builder.setVideos(value)
      }
    /**
     * ```
     * mvp视频
     * ```
     *
     * `string videos = 18;`
     */
    public fun clearVideos() {
      _builder.clearVideos()
    }

    /**
     * ```
     * mvp音效
     * ```
     *
     * `string sounds = 19;`
     */
    public var sounds: kotlin.String
      @JvmName("getSounds")
      get() = _builder.getSounds()
      @JvmName("setSounds")
      set(value) {
        _builder.setSounds(value)
      }
    /**
     * ```
     * mvp音效
     * ```
     *
     * `string sounds = 19;`
     */
    public fun clearSounds() {
      _builder.clearSounds()
    }

    /**
     * ```
     * mvp花字
     * ```
     *
     * `string flowers = 20;`
     */
    public var flowers: kotlin.String
      @JvmName("getFlowers")
      get() = _builder.getFlowers()
      @JvmName("setFlowers")
      set(value) {
        _builder.setFlowers(value)
      }
    /**
     * ```
     * mvp花字
     * ```
     *
     * `string flowers = 20;`
     */
    public fun clearFlowers() {
      _builder.clearFlowers()
    }

    /**
     * ```
     * mvp封面模板
     * ```
     *
     * `string cover_templates = 21;`
     */
    public var coverTemplates: kotlin.String
      @JvmName("getCoverTemplates")
      get() = _builder.getCoverTemplates()
      @JvmName("setCoverTemplates")
      set(value) {
        _builder.setCoverTemplates(value)
      }
    /**
     * ```
     * mvp封面模板
     * ```
     *
     * `string cover_templates = 21;`
     */
    public fun clearCoverTemplates() {
      _builder.clearCoverTemplates()
    }

    /**
     * ```
     * tts
     * ```
     *
     * `string tts = 22;`
     */
    public var tts: kotlin.String
      @JvmName("getTts")
      get() = _builder.getTts()
      @JvmName("setTts")
      set(value) {
        _builder.setTts(value)
      }
    /**
     * ```
     * tts
     * ```
     *
     * `string tts = 22;`
     */
    public fun clearTts() {
      _builder.clearTts()
    }

    /**
     * ```
     * openings
     * ```
     *
     * `string openings = 23;`
     */
    public var openings: kotlin.String
      @JvmName("getOpenings")
      get() = _builder.getOpenings()
      @JvmName("setOpenings")
      set(value) {
        _builder.setOpenings(value)
      }
    /**
     * ```
     * openings
     * ```
     *
     * `string openings = 23;`
     */
    public fun clearOpenings() {
      _builder.clearOpenings()
    }

    /**
     * ```
     * 录音题词
     * ```
     *
     * `bool record_text = 24;`
     */
    public var recordText: kotlin.Boolean
      @JvmName("getRecordText")
      get() = _builder.getRecordText()
      @JvmName("setRecordText")
      set(value) {
        _builder.setRecordText(value)
      }
    /**
     * ```
     * 录音题词
     * ```
     *
     * `bool record_text = 24;`
     */
    public fun clearRecordText() {
      _builder.clearRecordText()
    }

    /**
     * ```
     * 虚拟形象上报
     * ```
     *
     * `string vupers = 25;`
     */
    public var vupers: kotlin.String
      @JvmName("getVupers")
      get() = _builder.getVupers()
      @JvmName("setVupers")
      set(value) {
        _builder.setVupers(value)
      }
    /**
     * ```
     * 虚拟形象上报
     * ```
     *
     * `string vupers = 25;`
     */
    public fun clearVupers() {
      _builder.clearVupers()
    }

    /**
     * ```
     * ```
     *
     * `string features = 26;`
     */
    public var features: kotlin.String
      @JvmName("getFeatures")
      get() = _builder.getFeatures()
      @JvmName("setFeatures")
      set(value) {
        _builder.setFeatures(value)
      }
    /**
     * ```
     * ```
     *
     * `string features = 26;`
     */
    public fun clearFeatures() {
      _builder.clearFeatures()
    }

    /**
     * ```
     * ```
     *
     * `string bcut_features = 27;`
     */
    public var bcutFeatures: kotlin.String
      @JvmName("getBcutFeatures")
      get() = _builder.getBcutFeatures()
      @JvmName("setBcutFeatures")
      set(value) {
        _builder.setBcutFeatures(value)
      }
    /**
     * ```
     * ```
     *
     * `string bcut_features = 27;`
     */
    public fun clearBcutFeatures() {
      _builder.clearBcutFeatures()
    }

    /**
     * ```
     * ```
     *
     * `int32 audio_record = 28;`
     */
    public var audioRecord: kotlin.Int
      @JvmName("getAudioRecord")
      get() = _builder.getAudioRecord()
      @JvmName("setAudioRecord")
      set(value) {
        _builder.setAudioRecord(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 audio_record = 28;`
     */
    public fun clearAudioRecord() {
      _builder.clearAudioRecord()
    }

    /**
     * ```
     * ```
     *
     * `int32 camera = 29;`
     */
    public var camera: kotlin.Int
      @JvmName("getCamera")
      get() = _builder.getCamera()
      @JvmName("setCamera")
      set(value) {
        _builder.setCamera(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 camera = 29;`
     */
    public fun clearCamera() {
      _builder.clearCamera()
    }

    /**
     * ```
     * ```
     *
     * `int32 speed = 30;`
     */
    public var speed: kotlin.Int
      @JvmName("getSpeed")
      get() = _builder.getSpeed()
      @JvmName("setSpeed")
      set(value) {
        _builder.setSpeed(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 speed = 30;`
     */
    public fun clearSpeed() {
      _builder.clearSpeed()
    }

    /**
     * ```
     * ```
     *
     * `int32 camera_rotate = 31;`
     */
    public var cameraRotate: kotlin.Int
      @JvmName("getCameraRotate")
      get() = _builder.getCameraRotate()
      @JvmName("setCameraRotate")
      set(value) {
        _builder.setCameraRotate(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 camera_rotate = 31;`
     */
    public fun clearCameraRotate() {
      _builder.clearCameraRotate()
    }

    /**
     * ```
     * ```
     *
     * `int32 screen_record = 32;`
     */
    public var screenRecord: kotlin.Int
      @JvmName("getScreenRecord")
      get() = _builder.getScreenRecord()
      @JvmName("setScreenRecord")
      set(value) {
        _builder.setScreenRecord(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 screen_record = 32;`
     */
    public fun clearScreenRecord() {
      _builder.clearScreenRecord()
    }

    /**
     * ```
     * ```
     *
     * `int32 default_end = 33;`
     */
    public var defaultEnd: kotlin.Int
      @JvmName("getDefaultEnd")
      get() = _builder.getDefaultEnd()
      @JvmName("setDefaultEnd")
      set(value) {
        _builder.setDefaultEnd(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 default_end = 33;`
     */
    public fun clearDefaultEnd() {
      _builder.clearDefaultEnd()
    }

    /**
     * ```
     * ```
     *
     * `int32 duration = 34;`
     */
    public var duration: kotlin.Int
      @JvmName("getDuration")
      get() = _builder.getDuration()
      @JvmName("setDuration")
      set(value) {
        _builder.setDuration(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 duration = 34;`
     */
    public fun clearDuration() {
      _builder.clearDuration()
    }

    /**
     * ```
     * ```
     *
     * `int32 pic_count = 35;`
     */
    public var picCount: kotlin.Int
      @JvmName("getPicCount")
      get() = _builder.getPicCount()
      @JvmName("setPicCount")
      set(value) {
        _builder.setPicCount(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 pic_count = 35;`
     */
    public fun clearPicCount() {
      _builder.clearPicCount()
    }

    /**
     * ```
     * ```
     *
     * `int32 video_count = 36;`
     */
    public var videoCount: kotlin.Int
      @JvmName("getVideoCount")
      get() = _builder.getVideoCount()
      @JvmName("setVideoCount")
      set(value) {
        _builder.setVideoCount(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 video_count = 36;`
     */
    public fun clearVideoCount() {
      _builder.clearVideoCount()
    }

    /**
     * ```
     * ```
     *
     * `int32 shot_duration = 37;`
     */
    public var shotDuration: kotlin.Int
      @JvmName("getShotDuration")
      get() = _builder.getShotDuration()
      @JvmName("setShotDuration")
      set(value) {
        _builder.setShotDuration(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 shot_duration = 37;`
     */
    public fun clearShotDuration() {
      _builder.clearShotDuration()
    }

    /**
     * ```
     * ```
     *
     * `string shot_game = 38;`
     */
    public var shotGame: kotlin.String
      @JvmName("getShotGame")
      get() = _builder.getShotGame()
      @JvmName("setShotGame")
      set(value) {
        _builder.setShotGame(value)
      }
    /**
     * ```
     * ```
     *
     * `string shot_game = 38;`
     */
    public fun clearShotGame() {
      _builder.clearShotGame()
    }

    /**
     * ```
     * ```
     *
     * `bool highlight = 39;`
     */
    public var highlight: kotlin.Boolean
      @JvmName("getHighlight")
      get() = _builder.getHighlight()
      @JvmName("setHighlight")
      set(value) {
        _builder.setHighlight(value)
      }
    /**
     * ```
     * ```
     *
     * `bool highlight = 39;`
     */
    public fun clearHighlight() {
      _builder.clearHighlight()
    }

    /**
     * ```
     * ```
     *
     * `int32 highlight_cnt = 40;`
     */
    public var highlightCnt: kotlin.Int
      @JvmName("getHighlightCnt")
      get() = _builder.getHighlightCnt()
      @JvmName("setHighlightCnt")
      set(value) {
        _builder.setHighlightCnt(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 highlight_cnt = 40;`
     */
    public fun clearHighlightCnt() {
      _builder.clearHighlightCnt()
    }

    /**
     * ```
     * ```
     *
     * `int32 pip_count = 41;`
     */
    public var pipCount: kotlin.Int
      @JvmName("getPipCount")
      get() = _builder.getPipCount()
      @JvmName("setPipCount")
      set(value) {
        _builder.setPipCount(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 pip_count = 41;`
     */
    public fun clearPipCount() {
      _builder.clearPipCount()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.DynVideoEditor.copy(block: `bilibili.dynamic`.DynVideoEditorKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.DynVideoEditor =
  `bilibili.dynamic`.DynVideoEditorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

