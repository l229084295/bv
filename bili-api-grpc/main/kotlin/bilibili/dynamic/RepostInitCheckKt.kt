// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/common/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic;

@kotlin.jvm.JvmName("-initializerepostInitCheck")
public inline fun repostInitCheck(block: bilibili.dynamic.RepostInitCheckKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.RepostInitCheck =
  bilibili.dynamic.RepostInitCheckKt.Dsl._create(bilibili.dynamic.RepostInitCheck.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.dynamic.RepostInitCheck`
 */
public object RepostInitCheckKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.RepostInitCheck.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.RepostInitCheck.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.RepostInitCheck = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.DynIdentity repost_src = 1;`
     */
    public var repostSrc: bilibili.dynamic.DynIdentity
      @JvmName("getRepostSrc")
      get() = _builder.getRepostSrc()
      @JvmName("setRepostSrc")
      set(value) {
        _builder.setRepostSrc(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.DynIdentity repost_src = 1;`
     */
    public fun clearRepostSrc() {
      _builder.clearRepostSrc()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.DynIdentity repost_src = 1;`
     * @return Whether the repostSrc field is set.
     */
    public fun hasRepostSrc(): kotlin.Boolean {
      return _builder.hasRepostSrc()
    }
    public val RepostInitCheckKt.Dsl.repostSrcOrNull: bilibili.dynamic.DynIdentity?
      get() = _builder.repostSrcOrNull

    /**
     * ```
     * ```
     *
     * `string share_id = 2;`
     */
    public var shareId: kotlin.String
      @JvmName("getShareId")
      get() = _builder.getShareId()
      @JvmName("setShareId")
      set(value) {
        _builder.setShareId(value)
      }
    /**
     * ```
     * ```
     *
     * `string share_id = 2;`
     */
    public fun clearShareId() {
      _builder.clearShareId()
    }

    /**
     * ```
     * ```
     *
     * `int32 share_mode = 3;`
     */
    public var shareMode: kotlin.Int
      @JvmName("getShareMode")
      get() = _builder.getShareMode()
      @JvmName("setShareMode")
      set(value) {
        _builder.setShareMode(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 share_mode = 3;`
     */
    public fun clearShareMode() {
      _builder.clearShareMode()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.RepostInitCheck.copy(block: `bilibili.dynamic`.RepostInitCheckKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.RepostInitCheck =
  `bilibili.dynamic`.RepostInitCheckKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.dynamic.RepostInitCheckOrBuilder.repostSrcOrNull: bilibili.dynamic.DynIdentity?
  get() = if (hasRepostSrc()) getRepostSrc() else null

