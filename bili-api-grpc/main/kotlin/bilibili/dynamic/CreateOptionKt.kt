// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/common/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic;

@kotlin.jvm.JvmName("-initializecreateOption")
public inline fun createOption(block: bilibili.dynamic.CreateOptionKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.CreateOption =
  bilibili.dynamic.CreateOptionKt.Dsl._create(bilibili.dynamic.CreateOption.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态创建时的特殊选项
 * ```
 *
 * Protobuf type `bilibili.dynamic.CreateOption`
 */
public object CreateOptionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.CreateOption.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.CreateOption.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.CreateOption = _builder.build()

    /**
     * ```
     * 评论区展示UP自己精选的评论
     * ```
     *
     * `int32 up_choose_comment = 1;`
     */
    public var upChooseComment: kotlin.Int
      @JvmName("getUpChooseComment")
      get() = _builder.getUpChooseComment()
      @JvmName("setUpChooseComment")
      set(value) {
        _builder.setUpChooseComment(value)
      }
    /**
     * ```
     * 评论区展示UP自己精选的评论
     * ```
     *
     * `int32 up_choose_comment = 1;`
     */
    public fun clearUpChooseComment() {
      _builder.clearUpChooseComment()
    }

    /**
     * ```
     * 初始评论区是关闭状态
     * ```
     *
     * `int32 close_comment = 2;`
     */
    public var closeComment: kotlin.Int
      @JvmName("getCloseComment")
      get() = _builder.getCloseComment()
      @JvmName("setCloseComment")
      set(value) {
        _builder.setCloseComment(value)
      }
    /**
     * ```
     * 初始评论区是关闭状态
     * ```
     *
     * `int32 close_comment = 2;`
     */
    public fun clearCloseComment() {
      _builder.clearCloseComment()
    }

    /**
     * ```
     * 该动态不会被折叠
     * 目前仅抽奖开奖动态不会被折叠
     * ```
     *
     * `int32 fold_exclude = 3;`
     */
    public var foldExclude: kotlin.Int
      @JvmName("getFoldExclude")
      get() = _builder.getFoldExclude()
      @JvmName("setFoldExclude")
      set(value) {
        _builder.setFoldExclude(value)
      }
    /**
     * ```
     * 该动态不会被折叠
     * 目前仅抽奖开奖动态不会被折叠
     * ```
     *
     * `int32 fold_exclude = 3;`
     */
    public fun clearFoldExclude() {
      _builder.clearFoldExclude()
    }

    /**
     * ```
     * 审核等级，仅服务端发布时有效
     * 100：自动过审
     * 非100：默认的内网审核
     * 默认为0
     * ```
     *
     * `int32 audit_level = 4;`
     */
    public var auditLevel: kotlin.Int
      @JvmName("getAuditLevel")
      get() = _builder.getAuditLevel()
      @JvmName("setAuditLevel")
      set(value) {
        _builder.setAuditLevel(value)
      }
    /**
     * ```
     * 审核等级，仅服务端发布时有效
     * 100：自动过审
     * 非100：默认的内网审核
     * 默认为0
     * ```
     *
     * `int32 audit_level = 4;`
     */
    public fun clearAuditLevel() {
      _builder.clearAuditLevel()
    }

    /**
     * ```
     * 根据转发内容同步生成一条源动态/资源的评论
     * 仅转发和分享时有效
     * ```
     *
     * `int32 sync_to_comment = 5;`
     */
    public var syncToComment: kotlin.Int
      @JvmName("getSyncToComment")
      get() = _builder.getSyncToComment()
      @JvmName("setSyncToComment")
      set(value) {
        _builder.setSyncToComment(value)
      }
    /**
     * ```
     * 根据转发内容同步生成一条源动态/资源的评论
     * 仅转发和分享时有效
     * ```
     *
     * `int32 sync_to_comment = 5;`
     */
    public fun clearSyncToComment() {
      _builder.clearSyncToComment()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.VideoShareInfo video_share_info = 6;`
     */
    public var videoShareInfo: bilibili.dynamic.VideoShareInfo
      @JvmName("getVideoShareInfo")
      get() = _builder.getVideoShareInfo()
      @JvmName("setVideoShareInfo")
      set(value) {
        _builder.setVideoShareInfo(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.VideoShareInfo video_share_info = 6;`
     */
    public fun clearVideoShareInfo() {
      _builder.clearVideoShareInfo()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.VideoShareInfo video_share_info = 6;`
     * @return Whether the videoShareInfo field is set.
     */
    public fun hasVideoShareInfo(): kotlin.Boolean {
      return _builder.hasVideoShareInfo()
    }
    public val CreateOptionKt.Dsl.videoShareInfoOrNull: bilibili.dynamic.VideoShareInfo?
      get() = _builder.videoShareInfoOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.CreateActivity activity = 7;`
     */
    public var activity: bilibili.dynamic.CreateActivity
      @JvmName("getActivity")
      get() = _builder.getActivity()
      @JvmName("setActivity")
      set(value) {
        _builder.setActivity(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.CreateActivity activity = 7;`
     */
    public fun clearActivity() {
      _builder.clearActivity()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.CreateActivity activity = 7;`
     * @return Whether the activity field is set.
     */
    public fun hasActivity(): kotlin.Boolean {
      return _builder.hasActivity()
    }
    public val CreateOptionKt.Dsl.activityOrNull: bilibili.dynamic.CreateActivity?
      get() = _builder.activityOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.CreateOption.copy(block: `bilibili.dynamic`.CreateOptionKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.CreateOption =
  `bilibili.dynamic`.CreateOptionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.dynamic.CreateOptionOrBuilder.videoShareInfoOrNull: bilibili.dynamic.VideoShareInfo?
  get() = if (hasVideoShareInfo()) getVideoShareInfo() else null

public val bilibili.dynamic.CreateOptionOrBuilder.activityOrNull: bilibili.dynamic.CreateActivity?
  get() = if (hasActivity()) getActivity() else null

