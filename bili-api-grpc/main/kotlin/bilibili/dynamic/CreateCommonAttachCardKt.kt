// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/common/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic;

@kotlin.jvm.JvmName("-initializecreateCommonAttachCard")
public inline fun createCommonAttachCard(block: bilibili.dynamic.CreateCommonAttachCardKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.CreateCommonAttachCard =
  bilibili.dynamic.CreateCommonAttachCardKt.Dsl._create(bilibili.dynamic.CreateCommonAttachCard.newBuilder()).apply { block() }._build()
/**
 * ```
 * 创建动态时附带的通用附加卡详情
 * ```
 *
 * Protobuf type `bilibili.dynamic.CreateCommonAttachCard`
 */
public object CreateCommonAttachCardKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.CreateCommonAttachCard.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.CreateCommonAttachCard.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.CreateCommonAttachCard = _builder.build()

    /**
     * ```
     * 通用附加卡的类型
     * ```
     *
     * `.bilibili.dynamic.AttachCardType type = 1;`
     */
    public var type: bilibili.dynamic.AttachCardType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    public var typeValue: kotlin.Int
      @JvmName("getTypeValue")
      get() = _builder.getTypeValue()
      @JvmName("setTypeValue")
      set(value) {
        _builder.setTypeValue(value)
      }
    /**
     * ```
     * 通用附加卡的类型
     * ```
     *
     * `.bilibili.dynamic.AttachCardType type = 1;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * ```
     * 通用附加卡的业务id
     * ```
     *
     * `int64 biz_id = 2;`
     */
    public var bizId: kotlin.Long
      @JvmName("getBizId")
      get() = _builder.getBizId()
      @JvmName("setBizId")
      set(value) {
        _builder.setBizId(value)
      }
    /**
     * ```
     * 通用附加卡的业务id
     * ```
     *
     * `int64 biz_id = 2;`
     */
    public fun clearBizId() {
      _builder.clearBizId()
    }

    /**
     * ```
     * ```
     *
     * `int32 reserve_source = 3;`
     */
    public var reserveSource: kotlin.Int
      @JvmName("getReserveSource")
      get() = _builder.getReserveSource()
      @JvmName("setReserveSource")
      set(value) {
        _builder.setReserveSource(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 reserve_source = 3;`
     */
    public fun clearReserveSource() {
      _builder.clearReserveSource()
    }

    /**
     * ```
     * ```
     *
     * `int32 reserve_lottery = 4;`
     */
    public var reserveLottery: kotlin.Int
      @JvmName("getReserveLottery")
      get() = _builder.getReserveLottery()
      @JvmName("setReserveLottery")
      set(value) {
        _builder.setReserveLottery(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 reserve_lottery = 4;`
     */
    public fun clearReserveLottery() {
      _builder.clearReserveLottery()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.CreateCommonAttachCard.copy(block: `bilibili.dynamic`.CreateCommonAttachCardKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.CreateCommonAttachCard =
  `bilibili.dynamic`.CreateCommonAttachCardKt.Dsl._create(this.toBuilder()).apply { block() }._build()

