// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/common/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic;

@kotlin.jvm.JvmName("-initializeupPermission")
public inline fun upPermission(block: bilibili.dynamic.UpPermissionKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.UpPermission =
  bilibili.dynamic.UpPermissionKt.Dsl._create(bilibili.dynamic.UpPermission.newBuilder()).apply { block() }._build()
/**
 * ```
 * 发布相关的权限内容
 * ```
 *
 * Protobuf type `bilibili.dynamic.UpPermission`
 */
public object UpPermissionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.UpPermission.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.UpPermission.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.UpPermission = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ItemsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * 通用权限列表
     * ```
     *
     * `repeated .bilibili.dynamic.UpPermissionItem items = 1;`
     */
     public val items: com.google.protobuf.kotlin.DslList<bilibili.dynamic.UpPermissionItem, ItemsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getItemsList()
      )
    /**
     * ```
     * 通用权限列表
     * ```
     *
     * `repeated .bilibili.dynamic.UpPermissionItem items = 1;`
     * @param value The items to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addItems")
    public fun com.google.protobuf.kotlin.DslList<bilibili.dynamic.UpPermissionItem, ItemsProxy>.add(value: bilibili.dynamic.UpPermissionItem) {
      _builder.addItems(value)
    }
    /**
     * ```
     * 通用权限列表
     * ```
     *
     * `repeated .bilibili.dynamic.UpPermissionItem items = 1;`
     * @param value The items to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignItems")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bilibili.dynamic.UpPermissionItem, ItemsProxy>.plusAssign(value: bilibili.dynamic.UpPermissionItem) {
      add(value)
    }
    /**
     * ```
     * 通用权限列表
     * ```
     *
     * `repeated .bilibili.dynamic.UpPermissionItem items = 1;`
     * @param values The items to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllItems")
    public fun com.google.protobuf.kotlin.DslList<bilibili.dynamic.UpPermissionItem, ItemsProxy>.addAll(values: kotlin.collections.Iterable<bilibili.dynamic.UpPermissionItem>) {
      _builder.addAllItems(values)
    }
    /**
     * ```
     * 通用权限列表
     * ```
     *
     * `repeated .bilibili.dynamic.UpPermissionItem items = 1;`
     * @param values The items to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllItems")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bilibili.dynamic.UpPermissionItem, ItemsProxy>.plusAssign(values: kotlin.collections.Iterable<bilibili.dynamic.UpPermissionItem>) {
      addAll(values)
    }
    /**
     * ```
     * 通用权限列表
     * ```
     *
     * `repeated .bilibili.dynamic.UpPermissionItem items = 1;`
     * @param index The index to set the value at.
     * @param value The items to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setItems")
    public operator fun com.google.protobuf.kotlin.DslList<bilibili.dynamic.UpPermissionItem, ItemsProxy>.set(index: kotlin.Int, value: bilibili.dynamic.UpPermissionItem) {
      _builder.setItems(index, value)
    }
    /**
     * ```
     * 通用权限列表
     * ```
     *
     * `repeated .bilibili.dynamic.UpPermissionItem items = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearItems")
    public fun com.google.protobuf.kotlin.DslList<bilibili.dynamic.UpPermissionItem, ItemsProxy>.clear() {
      _builder.clearItems()
    }


    /**
     * ```
     * 已经创建的活动列表
     * ```
     *
     * `.bilibili.dynamic.LaunchedActivity launched_activity = 2;`
     */
    public var launchedActivity: bilibili.dynamic.LaunchedActivity
      @JvmName("getLaunchedActivity")
      get() = _builder.getLaunchedActivity()
      @JvmName("setLaunchedActivity")
      set(value) {
        _builder.setLaunchedActivity(value)
      }
    /**
     * ```
     * 已经创建的活动列表
     * ```
     *
     * `.bilibili.dynamic.LaunchedActivity launched_activity = 2;`
     */
    public fun clearLaunchedActivity() {
      _builder.clearLaunchedActivity()
    }
    /**
     * ```
     * 已经创建的活动列表
     * ```
     *
     * `.bilibili.dynamic.LaunchedActivity launched_activity = 2;`
     * @return Whether the launchedActivity field is set.
     */
    public fun hasLaunchedActivity(): kotlin.Boolean {
      return _builder.hasLaunchedActivity()
    }
    public val UpPermissionKt.Dsl.launchedActivityOrNull: bilibili.dynamic.LaunchedActivity?
      get() = _builder.launchedActivityOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.ShareResult share_result = 3;`
     */
    public var shareResult: bilibili.dynamic.ShareResult
      @JvmName("getShareResult")
      get() = _builder.getShareResult()
      @JvmName("setShareResult")
      set(value) {
        _builder.setShareResult(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.ShareResult share_result = 3;`
     */
    public fun clearShareResult() {
      _builder.clearShareResult()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.ShareResult share_result = 3;`
     * @return Whether the shareResult field is set.
     */
    public fun hasShareResult(): kotlin.Boolean {
      return _builder.hasShareResult()
    }
    public val UpPermissionKt.Dsl.shareResultOrNull: bilibili.dynamic.ShareResult?
      get() = _builder.shareResultOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.UpPermission.copy(block: `bilibili.dynamic`.UpPermissionKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.UpPermission =
  `bilibili.dynamic`.UpPermissionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.dynamic.UpPermissionOrBuilder.launchedActivityOrNull: bilibili.dynamic.LaunchedActivity?
  get() = if (hasLaunchedActivity()) getLaunchedActivity() else null

public val bilibili.dynamic.UpPermissionOrBuilder.shareResultOrNull: bilibili.dynamic.ShareResult?
  get() = if (hasShareResult()) getShareResult() else null

