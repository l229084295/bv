// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/common/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic;

@kotlin.jvm.JvmName("-initializedynVideoHotAct")
public inline fun dynVideoHotAct(block: bilibili.dynamic.DynVideoHotActKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.DynVideoHotAct =
  bilibili.dynamic.DynVideoHotActKt.Dsl._create(bilibili.dynamic.DynVideoHotAct.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.dynamic.DynVideoHotAct`
 */
public object DynVideoHotActKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.DynVideoHotAct.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.DynVideoHotAct.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.DynVideoHotAct = _builder.build()

    /**
     * ```
     * ```
     *
     * `int64 act_id = 1;`
     */
    public var actId: kotlin.Long
      @JvmName("getActId")
      get() = _builder.getActId()
      @JvmName("setActId")
      set(value) {
        _builder.setActId(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 act_id = 1;`
     */
    public fun clearActId() {
      _builder.clearActId()
    }

    /**
     * ```
     * ```
     *
     * `int64 etime = 2;`
     */
    public var etime: kotlin.Long
      @JvmName("getEtime")
      get() = _builder.getEtime()
      @JvmName("setEtime")
      set(value) {
        _builder.setEtime(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 etime = 2;`
     */
    public fun clearEtime() {
      _builder.clearEtime()
    }

    /**
     * ```
     * ```
     *
     * `int64 id = 3;`
     */
    public var id: kotlin.Long
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 id = 3;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * ```
     * ```
     *
     * `string pic = 4;`
     */
    public var pic: kotlin.String
      @JvmName("getPic")
      get() = _builder.getPic()
      @JvmName("setPic")
      set(value) {
        _builder.setPic(value)
      }
    /**
     * ```
     * ```
     *
     * `string pic = 4;`
     */
    public fun clearPic() {
      _builder.clearPic()
    }

    /**
     * ```
     * ```
     *
     * `int64 stime = 5;`
     */
    public var stime: kotlin.Long
      @JvmName("getStime")
      get() = _builder.getStime()
      @JvmName("setStime")
      set(value) {
        _builder.setStime(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 stime = 5;`
     */
    public fun clearStime() {
      _builder.clearStime()
    }

    /**
     * ```
     * ```
     *
     * `string title = 6;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * ```
     *
     * `string title = 6;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * ```
     *
     * `string link = 7;`
     */
    public var link: kotlin.String
      @JvmName("getLink")
      get() = _builder.getLink()
      @JvmName("setLink")
      set(value) {
        _builder.setLink(value)
      }
    /**
     * ```
     * ```
     *
     * `string link = 7;`
     */
    public fun clearLink() {
      _builder.clearLink()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.DynVideoHotAct.copy(block: `bilibili.dynamic`.DynVideoHotActKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.DynVideoHotAct =
  `bilibili.dynamic`.DynVideoHotActKt.Dsl._create(this.toBuilder()).apply { block() }._build()

