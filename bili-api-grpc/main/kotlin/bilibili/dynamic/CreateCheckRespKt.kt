// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/common/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic;

@kotlin.jvm.JvmName("-initializecreateCheckResp")
public inline fun createCheckResp(block: bilibili.dynamic.CreateCheckRespKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.CreateCheckResp =
  bilibili.dynamic.CreateCheckRespKt.Dsl._create(bilibili.dynamic.CreateCheckResp.newBuilder()).apply { block() }._build()
/**
 * ```
 * 发布页预校验-响应
 * ```
 *
 * Protobuf type `bilibili.dynamic.CreateCheckResp`
 */
public object CreateCheckRespKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.CreateCheckResp.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.CreateCheckResp.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.CreateCheckResp = _builder.build()

    /**
     * ```
     * 发布相关的配置项
     * ```
     *
     * `.bilibili.dynamic.PublishSetting setting = 1;`
     */
    public var setting: bilibili.dynamic.PublishSetting
      @JvmName("getSetting")
      get() = _builder.getSetting()
      @JvmName("setSetting")
      set(value) {
        _builder.setSetting(value)
      }
    /**
     * ```
     * 发布相关的配置项
     * ```
     *
     * `.bilibili.dynamic.PublishSetting setting = 1;`
     */
    public fun clearSetting() {
      _builder.clearSetting()
    }
    /**
     * ```
     * 发布相关的配置项
     * ```
     *
     * `.bilibili.dynamic.PublishSetting setting = 1;`
     * @return Whether the setting field is set.
     */
    public fun hasSetting(): kotlin.Boolean {
      return _builder.hasSetting()
    }
    public val CreateCheckRespKt.Dsl.settingOrNull: bilibili.dynamic.PublishSetting?
      get() = _builder.settingOrNull

    /**
     * ```
     * 用户具有的发布权限
     * ```
     *
     * `.bilibili.dynamic.UpPermission permission = 2;`
     */
    public var permission: bilibili.dynamic.UpPermission
      @JvmName("getPermission")
      get() = _builder.getPermission()
      @JvmName("setPermission")
      set(value) {
        _builder.setPermission(value)
      }
    /**
     * ```
     * 用户具有的发布权限
     * ```
     *
     * `.bilibili.dynamic.UpPermission permission = 2;`
     */
    public fun clearPermission() {
      _builder.clearPermission()
    }
    /**
     * ```
     * 用户具有的发布权限
     * ```
     *
     * `.bilibili.dynamic.UpPermission permission = 2;`
     * @return Whether the permission field is set.
     */
    public fun hasPermission(): kotlin.Boolean {
      return _builder.hasPermission()
    }
    public val CreateCheckRespKt.Dsl.permissionOrNull: bilibili.dynamic.UpPermission?
      get() = _builder.permissionOrNull

    /**
     * ```
     * 分享渠道信息
     * ```
     *
     * `.bilibili.dynamic.ShareChannel share_info = 3;`
     */
    public var shareInfo: bilibili.dynamic.ShareChannel
      @JvmName("getShareInfo")
      get() = _builder.getShareInfo()
      @JvmName("setShareInfo")
      set(value) {
        _builder.setShareInfo(value)
      }
    /**
     * ```
     * 分享渠道信息
     * ```
     *
     * `.bilibili.dynamic.ShareChannel share_info = 3;`
     */
    public fun clearShareInfo() {
      _builder.clearShareInfo()
    }
    /**
     * ```
     * 分享渠道信息
     * ```
     *
     * `.bilibili.dynamic.ShareChannel share_info = 3;`
     * @return Whether the shareInfo field is set.
     */
    public fun hasShareInfo(): kotlin.Boolean {
      return _builder.hasShareInfo()
    }
    public val CreateCheckRespKt.Dsl.shareInfoOrNull: bilibili.dynamic.ShareChannel?
      get() = _builder.shareInfoOrNull

    /**
     * ```
     * 小黄条
     * ```
     *
     * `.bilibili.dynamic.PublishYellowBar yellow_bar = 4;`
     */
    public var yellowBar: bilibili.dynamic.PublishYellowBar
      @JvmName("getYellowBar")
      get() = _builder.getYellowBar()
      @JvmName("setYellowBar")
      set(value) {
        _builder.setYellowBar(value)
      }
    /**
     * ```
     * 小黄条
     * ```
     *
     * `.bilibili.dynamic.PublishYellowBar yellow_bar = 4;`
     */
    public fun clearYellowBar() {
      _builder.clearYellowBar()
    }
    /**
     * ```
     * 小黄条
     * ```
     *
     * `.bilibili.dynamic.PublishYellowBar yellow_bar = 4;`
     * @return Whether the yellowBar field is set.
     */
    public fun hasYellowBar(): kotlin.Boolean {
      return _builder.hasYellowBar()
    }
    public val CreateCheckRespKt.Dsl.yellowBarOrNull: bilibili.dynamic.PublishYellowBar?
      get() = _builder.yellowBarOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.PlusRedDot plus_red_dot = 5;`
     */
    public var plusRedDot: bilibili.dynamic.PlusRedDot
      @JvmName("getPlusRedDot")
      get() = _builder.getPlusRedDot()
      @JvmName("setPlusRedDot")
      set(value) {
        _builder.setPlusRedDot(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.PlusRedDot plus_red_dot = 5;`
     */
    public fun clearPlusRedDot() {
      _builder.clearPlusRedDot()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.PlusRedDot plus_red_dot = 5;`
     * @return Whether the plusRedDot field is set.
     */
    public fun hasPlusRedDot(): kotlin.Boolean {
      return _builder.hasPlusRedDot()
    }
    public val CreateCheckRespKt.Dsl.plusRedDotOrNull: bilibili.dynamic.PlusRedDot?
      get() = _builder.plusRedDotOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.CreateCheckResp.copy(block: `bilibili.dynamic`.CreateCheckRespKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.CreateCheckResp =
  `bilibili.dynamic`.CreateCheckRespKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.dynamic.CreateCheckRespOrBuilder.settingOrNull: bilibili.dynamic.PublishSetting?
  get() = if (hasSetting()) getSetting() else null

public val bilibili.dynamic.CreateCheckRespOrBuilder.permissionOrNull: bilibili.dynamic.UpPermission?
  get() = if (hasPermission()) getPermission() else null

public val bilibili.dynamic.CreateCheckRespOrBuilder.shareInfoOrNull: bilibili.dynamic.ShareChannel?
  get() = if (hasShareInfo()) getShareInfo() else null

public val bilibili.dynamic.CreateCheckRespOrBuilder.yellowBarOrNull: bilibili.dynamic.PublishYellowBar?
  get() = if (hasYellowBar()) getYellowBar() else null

public val bilibili.dynamic.CreateCheckRespOrBuilder.plusRedDotOrNull: bilibili.dynamic.PlusRedDot?
  get() = if (hasPlusRedDot()) getPlusRedDot() else null

