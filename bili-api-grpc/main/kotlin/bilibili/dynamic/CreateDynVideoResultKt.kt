// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/common/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic;

@kotlin.jvm.JvmName("-initializecreateDynVideoResult")
public inline fun createDynVideoResult(block: bilibili.dynamic.CreateDynVideoResultKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.CreateDynVideoResult =
  bilibili.dynamic.CreateDynVideoResultKt.Dsl._create(bilibili.dynamic.CreateDynVideoResult.newBuilder()).apply { block() }._build()
/**
 * ```
 * 创建动态视频的应答包（透传给客户端）
 * ```
 *
 * Protobuf type `bilibili.dynamic.CreateDynVideoResult`
 */
public object CreateDynVideoResultKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.CreateDynVideoResult.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.CreateDynVideoResult.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.CreateDynVideoResult = _builder.build()

    /**
     * ```
     * 稿件id
     * ```
     *
     * `int64 aid = 1;`
     */
    public var aid: kotlin.Long
      @JvmName("getAid")
      get() = _builder.getAid()
      @JvmName("setAid")
      set(value) {
        _builder.setAid(value)
      }
    /**
     * ```
     * 稿件id
     * ```
     *
     * `int64 aid = 1;`
     */
    public fun clearAid() {
      _builder.clearAid()
    }

    /**
     * ```
     * 说明信息
     * ```
     *
     * `string message = 2;`
     */
    public var message: kotlin.String
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * ```
     * 说明信息
     * ```
     *
     * `string message = 2;`
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }

    /**
     * ```
     * 推荐的活动信息
     * ```
     *
     * `.bilibili.dynamic.DynVideoSubmitActBanner submitact_banner = 3;`
     */
    public var submitactBanner: bilibili.dynamic.DynVideoSubmitActBanner
      @JvmName("getSubmitactBanner")
      get() = _builder.getSubmitactBanner()
      @JvmName("setSubmitactBanner")
      set(value) {
        _builder.setSubmitactBanner(value)
      }
    /**
     * ```
     * 推荐的活动信息
     * ```
     *
     * `.bilibili.dynamic.DynVideoSubmitActBanner submitact_banner = 3;`
     */
    public fun clearSubmitactBanner() {
      _builder.clearSubmitactBanner()
    }
    /**
     * ```
     * 推荐的活动信息
     * ```
     *
     * `.bilibili.dynamic.DynVideoSubmitActBanner submitact_banner = 3;`
     * @return Whether the submitactBanner field is set.
     */
    public fun hasSubmitactBanner(): kotlin.Boolean {
      return _builder.hasSubmitactBanner()
    }
    public val CreateDynVideoResultKt.Dsl.submitactBannerOrNull: bilibili.dynamic.DynVideoSubmitActBanner?
      get() = _builder.submitactBannerOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.DynVideoPushIntro push_intro = 4;`
     */
    public var pushIntro: bilibili.dynamic.DynVideoPushIntro
      @JvmName("getPushIntro")
      get() = _builder.getPushIntro()
      @JvmName("setPushIntro")
      set(value) {
        _builder.setPushIntro(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.DynVideoPushIntro push_intro = 4;`
     */
    public fun clearPushIntro() {
      _builder.clearPushIntro()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.dynamic.DynVideoPushIntro push_intro = 4;`
     * @return Whether the pushIntro field is set.
     */
    public fun hasPushIntro(): kotlin.Boolean {
      return _builder.hasPushIntro()
    }
    public val CreateDynVideoResultKt.Dsl.pushIntroOrNull: bilibili.dynamic.DynVideoPushIntro?
      get() = _builder.pushIntroOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.CreateDynVideoResult.copy(block: `bilibili.dynamic`.CreateDynVideoResultKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.CreateDynVideoResult =
  `bilibili.dynamic`.CreateDynVideoResultKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.dynamic.CreateDynVideoResultOrBuilder.submitactBannerOrNull: bilibili.dynamic.DynVideoSubmitActBanner?
  get() = if (hasSubmitactBanner()) getSubmitactBanner() else null

public val bilibili.dynamic.CreateDynVideoResultOrBuilder.pushIntroOrNull: bilibili.dynamic.DynVideoPushIntro?
  get() = if (hasPushIntro()) getPushIntro() else null

