// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/common/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic;

@kotlin.jvm.JvmName("-initializeuserCreateMeta")
public inline fun userCreateMeta(block: bilibili.dynamic.UserCreateMetaKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.UserCreateMeta =
  bilibili.dynamic.UserCreateMetaKt.Dsl._create(bilibili.dynamic.UserCreateMeta.newBuilder()).apply { block() }._build()
/**
 * ```
 * 用户主动发布（app/web发布）时的meta信息
 * ```
 *
 * Protobuf type `bilibili.dynamic.UserCreateMeta`
 */
public object UserCreateMetaKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.UserCreateMeta.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.UserCreateMeta.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.UserCreateMeta = _builder.build()

    /**
     * ```
     * 用户发布客户端的meta信息
     * ```
     *
     * `.bilibili.dynamic.MetaDataCtrl app_meta = 1;`
     */
    public var appMeta: bilibili.dynamic.MetaDataCtrl
      @JvmName("getAppMeta")
      get() = _builder.getAppMeta()
      @JvmName("setAppMeta")
      set(value) {
        _builder.setAppMeta(value)
      }
    /**
     * ```
     * 用户发布客户端的meta信息
     * ```
     *
     * `.bilibili.dynamic.MetaDataCtrl app_meta = 1;`
     */
    public fun clearAppMeta() {
      _builder.clearAppMeta()
    }
    /**
     * ```
     * 用户发布客户端的meta信息
     * ```
     *
     * `.bilibili.dynamic.MetaDataCtrl app_meta = 1;`
     * @return Whether the appMeta field is set.
     */
    public fun hasAppMeta(): kotlin.Boolean {
      return _builder.hasAppMeta()
    }
    public val UserCreateMetaKt.Dsl.appMetaOrNull: bilibili.dynamic.MetaDataCtrl?
      get() = _builder.appMetaOrNull

    /**
     * ```
     * 用户发布时的位置信息（经纬度）
     * ```
     *
     * `.bilibili.dynamic.LbsLoc loc = 2;`
     */
    public var loc: bilibili.dynamic.LbsLoc
      @JvmName("getLoc")
      get() = _builder.getLoc()
      @JvmName("setLoc")
      set(value) {
        _builder.setLoc(value)
      }
    /**
     * ```
     * 用户发布时的位置信息（经纬度）
     * ```
     *
     * `.bilibili.dynamic.LbsLoc loc = 2;`
     */
    public fun clearLoc() {
      _builder.clearLoc()
    }
    /**
     * ```
     * 用户发布时的位置信息（经纬度）
     * ```
     *
     * `.bilibili.dynamic.LbsLoc loc = 2;`
     * @return Whether the loc field is set.
     */
    public fun hasLoc(): kotlin.Boolean {
      return _builder.hasLoc()
    }
    public val UserCreateMetaKt.Dsl.locOrNull: bilibili.dynamic.LbsLoc?
      get() = _builder.locOrNull

    /**
     * ```
     * 1-发布页转发 2-立即转发
     * ```
     *
     * `int32 repost_mode = 3;`
     */
    public var repostMode: kotlin.Int
      @JvmName("getRepostMode")
      get() = _builder.getRepostMode()
      @JvmName("setRepostMode")
      set(value) {
        _builder.setRepostMode(value)
      }
    /**
     * ```
     * 1-发布页转发 2-立即转发
     * ```
     *
     * `int32 repost_mode = 3;`
     */
    public fun clearRepostMode() {
      _builder.clearRepostMode()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.UserCreateMeta.copy(block: `bilibili.dynamic`.UserCreateMetaKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.UserCreateMeta =
  `bilibili.dynamic`.UserCreateMetaKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.dynamic.UserCreateMetaOrBuilder.appMetaOrNull: bilibili.dynamic.MetaDataCtrl?
  get() = if (hasAppMeta()) getAppMeta() else null

public val bilibili.dynamic.UserCreateMetaOrBuilder.locOrNull: bilibili.dynamic.LbsLoc?
  get() = if (hasLoc()) getLoc() else null

