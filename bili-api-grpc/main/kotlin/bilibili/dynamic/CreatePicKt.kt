// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/common/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic;

@kotlin.jvm.JvmName("-initializecreatePic")
public inline fun createPic(block: bilibili.dynamic.CreatePicKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.CreatePic =
  bilibili.dynamic.CreatePicKt.Dsl._create(bilibili.dynamic.CreatePic.newBuilder()).apply { block() }._build()
/**
 * ```
 * 创建图文动态时的图片信息
 * ```
 *
 * Protobuf type `bilibili.dynamic.CreatePic`
 */
public object CreatePicKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.CreatePic.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.CreatePic.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.CreatePic = _builder.build()

    /**
     * ```
     * 上传图片URL
     * ```
     *
     * `string img_src = 1;`
     */
    public var imgSrc: kotlin.String
      @JvmName("getImgSrc")
      get() = _builder.getImgSrc()
      @JvmName("setImgSrc")
      set(value) {
        _builder.setImgSrc(value)
      }
    /**
     * ```
     * 上传图片URL
     * ```
     *
     * `string img_src = 1;`
     */
    public fun clearImgSrc() {
      _builder.clearImgSrc()
    }

    /**
     * ```
     * 图片宽度
     * ```
     *
     * `double img_width = 2;`
     */
    public var imgWidth: kotlin.Double
      @JvmName("getImgWidth")
      get() = _builder.getImgWidth()
      @JvmName("setImgWidth")
      set(value) {
        _builder.setImgWidth(value)
      }
    /**
     * ```
     * 图片宽度
     * ```
     *
     * `double img_width = 2;`
     */
    public fun clearImgWidth() {
      _builder.clearImgWidth()
    }

    /**
     * ```
     * 图片高度
     * ```
     *
     * `double img_height = 3;`
     */
    public var imgHeight: kotlin.Double
      @JvmName("getImgHeight")
      get() = _builder.getImgHeight()
      @JvmName("setImgHeight")
      set(value) {
        _builder.setImgHeight(value)
      }
    /**
     * ```
     * 图片高度
     * ```
     *
     * `double img_height = 3;`
     */
    public fun clearImgHeight() {
      _builder.clearImgHeight()
    }

    /**
     * ```
     * 图片大小，单位KB
     * ```
     *
     * `double img_size = 4;`
     */
    public var imgSize: kotlin.Double
      @JvmName("getImgSize")
      get() = _builder.getImgSize()
      @JvmName("setImgSize")
      set(value) {
        _builder.setImgSize(value)
      }
    /**
     * ```
     * 图片大小，单位KB
     * ```
     *
     * `double img_size = 4;`
     */
    public fun clearImgSize() {
      _builder.clearImgSize()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ImgTagsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.dynamic.CreatePicTag img_tags = 5;`
     */
     public val imgTags: com.google.protobuf.kotlin.DslList<bilibili.dynamic.CreatePicTag, ImgTagsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getImgTagsList()
      )
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.dynamic.CreatePicTag img_tags = 5;`
     * @param value The imgTags to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addImgTags")
    public fun com.google.protobuf.kotlin.DslList<bilibili.dynamic.CreatePicTag, ImgTagsProxy>.add(value: bilibili.dynamic.CreatePicTag) {
      _builder.addImgTags(value)
    }
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.dynamic.CreatePicTag img_tags = 5;`
     * @param value The imgTags to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignImgTags")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bilibili.dynamic.CreatePicTag, ImgTagsProxy>.plusAssign(value: bilibili.dynamic.CreatePicTag) {
      add(value)
    }
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.dynamic.CreatePicTag img_tags = 5;`
     * @param values The imgTags to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllImgTags")
    public fun com.google.protobuf.kotlin.DslList<bilibili.dynamic.CreatePicTag, ImgTagsProxy>.addAll(values: kotlin.collections.Iterable<bilibili.dynamic.CreatePicTag>) {
      _builder.addAllImgTags(values)
    }
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.dynamic.CreatePicTag img_tags = 5;`
     * @param values The imgTags to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllImgTags")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<bilibili.dynamic.CreatePicTag, ImgTagsProxy>.plusAssign(values: kotlin.collections.Iterable<bilibili.dynamic.CreatePicTag>) {
      addAll(values)
    }
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.dynamic.CreatePicTag img_tags = 5;`
     * @param index The index to set the value at.
     * @param value The imgTags to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setImgTags")
    public operator fun com.google.protobuf.kotlin.DslList<bilibili.dynamic.CreatePicTag, ImgTagsProxy>.set(index: kotlin.Int, value: bilibili.dynamic.CreatePicTag) {
      _builder.setImgTags(index, value)
    }
    /**
     * ```
     * ```
     *
     * `repeated .bilibili.dynamic.CreatePicTag img_tags = 5;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearImgTags")
    public fun com.google.protobuf.kotlin.DslList<bilibili.dynamic.CreatePicTag, ImgTagsProxy>.clear() {
      _builder.clearImgTags()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.CreatePic.copy(block: `bilibili.dynamic`.CreatePicKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.CreatePic =
  `bilibili.dynamic`.CreatePicKt.Dsl._create(this.toBuilder()).apply { block() }._build()

