// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/gw/gateway.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic.gateway;

@kotlin.jvm.JvmName("-initializemdlDynForward")
public inline fun mdlDynForward(block: bilibili.dynamic.gateway.MdlDynForwardKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.gateway.MdlDynForward =
  bilibili.dynamic.gateway.MdlDynForwardKt.Dsl._create(bilibili.dynamic.gateway.MdlDynForward.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态列表渲染部分-详情模块-转发模块
 * ```
 *
 * Protobuf type `bilibili.dynamic.gateway.MdlDynForward`
 */
public object MdlDynForwardKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.gateway.MdlDynForward.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.gateway.MdlDynForward.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.gateway.MdlDynForward = _builder.build()

    /**
     * ```
     * 动态转发核心模块 套娃
     * ```
     *
     * `.bilibili.dynamic.gateway.DynamicItem item = 1;`
     */
    public var item: bilibili.dynamic.gateway.DynamicItem
      @JvmName("getItem")
      get() = _builder.getItem()
      @JvmName("setItem")
      set(value) {
        _builder.setItem(value)
      }
    /**
     * ```
     * 动态转发核心模块 套娃
     * ```
     *
     * `.bilibili.dynamic.gateway.DynamicItem item = 1;`
     */
    public fun clearItem() {
      _builder.clearItem()
    }
    /**
     * ```
     * 动态转发核心模块 套娃
     * ```
     *
     * `.bilibili.dynamic.gateway.DynamicItem item = 1;`
     * @return Whether the item field is set.
     */
    public fun hasItem(): kotlin.Boolean {
      return _builder.hasItem()
    }
    public val MdlDynForwardKt.Dsl.itemOrNull: bilibili.dynamic.gateway.DynamicItem?
      get() = _builder.itemOrNull

    /**
     * ```
     * 透传类型
     * 0:分享 1:转发
     * ```
     *
     * `int32 rtype = 2;`
     */
    public var rtype: kotlin.Int
      @JvmName("getRtype")
      get() = _builder.getRtype()
      @JvmName("setRtype")
      set(value) {
        _builder.setRtype(value)
      }
    /**
     * ```
     * 透传类型
     * 0:分享 1:转发
     * ```
     *
     * `int32 rtype = 2;`
     */
    public fun clearRtype() {
      _builder.clearRtype()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.gateway.MdlDynForward.copy(block: `bilibili.dynamic.gateway`.MdlDynForwardKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.gateway.MdlDynForward =
  `bilibili.dynamic.gateway`.MdlDynForwardKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.dynamic.gateway.MdlDynForwardOrBuilder.itemOrNull: bilibili.dynamic.gateway.DynamicItem?
  get() = if (hasItem()) getItem() else null

