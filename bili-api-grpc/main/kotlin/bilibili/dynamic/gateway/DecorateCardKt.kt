// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/gw/gateway.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic.gateway;

@kotlin.jvm.JvmName("-initializedecorateCard")
public inline fun decorateCard(block: bilibili.dynamic.gateway.DecorateCardKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.gateway.DecorateCard =
  bilibili.dynamic.gateway.DecorateCardKt.Dsl._create(bilibili.dynamic.gateway.DecorateCard.newBuilder()).apply { block() }._build()
/**
 * ```
 * 装扮卡片
 * ```
 *
 * Protobuf type `bilibili.dynamic.gateway.DecorateCard`
 */
public object DecorateCardKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.gateway.DecorateCard.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.gateway.DecorateCard.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.gateway.DecorateCard = _builder.build()

    /**
     * ```
     * 装扮卡片id
     * ```
     *
     * `int64 id = 1;`
     */
    public var id: kotlin.Long
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * ```
     * 装扮卡片id
     * ```
     *
     * `int64 id = 1;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * ```
     * 装扮卡片链接
     * ```
     *
     * `string card_url = 2;`
     */
    public var cardUrl: kotlin.String
      @JvmName("getCardUrl")
      get() = _builder.getCardUrl()
      @JvmName("setCardUrl")
      set(value) {
        _builder.setCardUrl(value)
      }
    /**
     * ```
     * 装扮卡片链接
     * ```
     *
     * `string card_url = 2;`
     */
    public fun clearCardUrl() {
      _builder.clearCardUrl()
    }

    /**
     * ```
     * 装扮卡片点击跳转链接
     * ```
     *
     * `string jump_url = 3;`
     */
    public var jumpUrl: kotlin.String
      @JvmName("getJumpUrl")
      get() = _builder.getJumpUrl()
      @JvmName("setJumpUrl")
      set(value) {
        _builder.setJumpUrl(value)
      }
    /**
     * ```
     * 装扮卡片点击跳转链接
     * ```
     *
     * `string jump_url = 3;`
     */
    public fun clearJumpUrl() {
      _builder.clearJumpUrl()
    }

    /**
     * ```
     * 粉丝样式
     * ```
     *
     * `.bilibili.dynamic.gateway.DecoCardFan fan = 4;`
     */
    public var fan: bilibili.dynamic.gateway.DecoCardFan
      @JvmName("getFan")
      get() = _builder.getFan()
      @JvmName("setFan")
      set(value) {
        _builder.setFan(value)
      }
    /**
     * ```
     * 粉丝样式
     * ```
     *
     * `.bilibili.dynamic.gateway.DecoCardFan fan = 4;`
     */
    public fun clearFan() {
      _builder.clearFan()
    }
    /**
     * ```
     * 粉丝样式
     * ```
     *
     * `.bilibili.dynamic.gateway.DecoCardFan fan = 4;`
     * @return Whether the fan field is set.
     */
    public fun hasFan(): kotlin.Boolean {
      return _builder.hasFan()
    }
    public val DecorateCardKt.Dsl.fanOrNull: bilibili.dynamic.gateway.DecoCardFan?
      get() = _builder.fanOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.gateway.DecorateCard.copy(block: `bilibili.dynamic.gateway`.DecorateCardKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.gateway.DecorateCard =
  `bilibili.dynamic.gateway`.DecorateCardKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.dynamic.gateway.DecorateCardOrBuilder.fanOrNull: bilibili.dynamic.gateway.DecoCardFan?
  get() = if (hasFan()) getFan() else null

