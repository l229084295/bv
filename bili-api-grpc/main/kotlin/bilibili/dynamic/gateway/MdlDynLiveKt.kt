// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/gw/gateway.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic.gateway;

@kotlin.jvm.JvmName("-initializemdlDynLive")
public inline fun mdlDynLive(block: bilibili.dynamic.gateway.MdlDynLiveKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.gateway.MdlDynLive =
  bilibili.dynamic.gateway.MdlDynLiveKt.Dsl._create(bilibili.dynamic.gateway.MdlDynLive.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态列表渲染部分-详情模块-直播
 * ```
 *
 * Protobuf type `bilibili.dynamic.gateway.MdlDynLive`
 */
public object MdlDynLiveKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.gateway.MdlDynLive.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.gateway.MdlDynLive.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.gateway.MdlDynLive = _builder.build()

    /**
     * ```
     * 房间号
     * ```
     *
     * `int64 id = 1;`
     */
    public var id: kotlin.Long
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * ```
     * 房间号
     * ```
     *
     * `int64 id = 1;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * ```
     * 跳转地址
     * ```
     *
     * `string uri = 2;`
     */
    public var uri: kotlin.String
      @JvmName("getUri")
      get() = _builder.getUri()
      @JvmName("setUri")
      set(value) {
        _builder.setUri(value)
      }
    /**
     * ```
     * 跳转地址
     * ```
     *
     * `string uri = 2;`
     */
    public fun clearUri() {
      _builder.clearUri()
    }

    /**
     * ```
     * 直播间标题
     * ```
     *
     * `string title = 3;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * 直播间标题
     * ```
     *
     * `string title = 3;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * 直播间封面
     * ```
     *
     * `string cover = 4;`
     */
    public var cover: kotlin.String
      @JvmName("getCover")
      get() = _builder.getCover()
      @JvmName("setCover")
      set(value) {
        _builder.setCover(value)
      }
    /**
     * ```
     * 直播间封面
     * ```
     *
     * `string cover = 4;`
     */
    public fun clearCover() {
      _builder.clearCover()
    }

    /**
     * ```
     * 标题1 例: 陪伴学习
     * ```
     *
     * `string cover_label = 5;`
     */
    public var coverLabel: kotlin.String
      @JvmName("getCoverLabel")
      get() = _builder.getCoverLabel()
      @JvmName("setCoverLabel")
      set(value) {
        _builder.setCoverLabel(value)
      }
    /**
     * ```
     * 标题1 例: 陪伴学习
     * ```
     *
     * `string cover_label = 5;`
     */
    public fun clearCoverLabel() {
      _builder.clearCoverLabel()
    }

    /**
     * ```
     * 标题2 例: 54.6万人气
     * ```
     *
     * `string cover_label2 = 6;`
     */
    public var coverLabel2: kotlin.String
      @JvmName("getCoverLabel2")
      get() = _builder.getCoverLabel2()
      @JvmName("setCoverLabel2")
      set(value) {
        _builder.setCoverLabel2(value)
      }
    /**
     * ```
     * 标题2 例: 54.6万人气
     * ```
     *
     * `string cover_label2 = 6;`
     */
    public fun clearCoverLabel2() {
      _builder.clearCoverLabel2()
    }

    /**
     * ```
     * 直播状态
     * ```
     *
     * `.bilibili.dynamic.gateway.LiveState live_state = 7;`
     */
    public var liveState: bilibili.dynamic.gateway.LiveState
      @JvmName("getLiveState")
      get() = _builder.getLiveState()
      @JvmName("setLiveState")
      set(value) {
        _builder.setLiveState(value)
      }
    public var liveStateValue: kotlin.Int
      @JvmName("getLiveStateValue")
      get() = _builder.getLiveStateValue()
      @JvmName("setLiveStateValue")
      set(value) {
        _builder.setLiveStateValue(value)
      }
    /**
     * ```
     * 直播状态
     * ```
     *
     * `.bilibili.dynamic.gateway.LiveState live_state = 7;`
     */
    public fun clearLiveState() {
      _builder.clearLiveState()
    }

    /**
     * ```
     * 直播角标
     * ```
     *
     * `.bilibili.dynamic.gateway.VideoBadge badge = 8;`
     */
    public var badge: bilibili.dynamic.gateway.VideoBadge
      @JvmName("getBadge")
      get() = _builder.getBadge()
      @JvmName("setBadge")
      set(value) {
        _builder.setBadge(value)
      }
    /**
     * ```
     * 直播角标
     * ```
     *
     * `.bilibili.dynamic.gateway.VideoBadge badge = 8;`
     */
    public fun clearBadge() {
      _builder.clearBadge()
    }
    /**
     * ```
     * 直播角标
     * ```
     *
     * `.bilibili.dynamic.gateway.VideoBadge badge = 8;`
     * @return Whether the badge field is set.
     */
    public fun hasBadge(): kotlin.Boolean {
      return _builder.hasBadge()
    }
    public val MdlDynLiveKt.Dsl.badgeOrNull: bilibili.dynamic.gateway.VideoBadge?
      get() = _builder.badgeOrNull

    /**
     * ```
     * 是否是预约召回
     * ```
     *
     * `.bilibili.dynamic.gateway.ReserveType reserve_type = 9;`
     */
    public var reserveType: bilibili.dynamic.gateway.ReserveType
      @JvmName("getReserveType")
      get() = _builder.getReserveType()
      @JvmName("setReserveType")
      set(value) {
        _builder.setReserveType(value)
      }
    public var reserveTypeValue: kotlin.Int
      @JvmName("getReserveTypeValue")
      get() = _builder.getReserveTypeValue()
      @JvmName("setReserveTypeValue")
      set(value) {
        _builder.setReserveTypeValue(value)
      }
    /**
     * ```
     * 是否是预约召回
     * ```
     *
     * `.bilibili.dynamic.gateway.ReserveType reserve_type = 9;`
     */
    public fun clearReserveType() {
      _builder.clearReserveType()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.gateway.MdlDynLive.copy(block: `bilibili.dynamic.gateway`.MdlDynLiveKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.gateway.MdlDynLive =
  `bilibili.dynamic.gateway`.MdlDynLiveKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.dynamic.gateway.MdlDynLiveOrBuilder.badgeOrNull: bilibili.dynamic.gateway.VideoBadge?
  get() = if (hasBadge()) getBadge() else null

