// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/gw/gateway.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic.gateway;

@kotlin.jvm.JvmName("-initializemdlDynDrawTagItem")
public inline fun mdlDynDrawTagItem(block: bilibili.dynamic.gateway.MdlDynDrawTagItemKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.gateway.MdlDynDrawTagItem =
  bilibili.dynamic.gateway.MdlDynDrawTagItemKt.Dsl._create(bilibili.dynamic.gateway.MdlDynDrawTagItem.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态列表部分-详情模块-图文-标签详情
 * ```
 *
 * Protobuf type `bilibili.dynamic.gateway.MdlDynDrawTagItem`
 */
public object MdlDynDrawTagItemKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.gateway.MdlDynDrawTagItem.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.gateway.MdlDynDrawTagItem.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.gateway.MdlDynDrawTagItem = _builder.build()

    /**
     * ```
     * 跳转链接
     * ```
     *
     * `string url = 1;`
     */
    public var url: kotlin.String
      @JvmName("getUrl")
      get() = _builder.getUrl()
      @JvmName("setUrl")
      set(value) {
        _builder.setUrl(value)
      }
    /**
     * ```
     * 跳转链接
     * ```
     *
     * `string url = 1;`
     */
    public fun clearUrl() {
      _builder.clearUrl()
    }

    /**
     * ```
     * 标签内容
     * ```
     *
     * `string text = 2;`
     */
    public var text: kotlin.String
      @JvmName("getText")
      get() = _builder.getText()
      @JvmName("setText")
      set(value) {
        _builder.setText(value)
      }
    /**
     * ```
     * 标签内容
     * ```
     *
     * `string text = 2;`
     */
    public fun clearText() {
      _builder.clearText()
    }

    /**
     * ```
     * 坐标-x
     * ```
     *
     * `int64 x = 3;`
     */
    public var x: kotlin.Long
      @JvmName("getX")
      get() = _builder.getX()
      @JvmName("setX")
      set(value) {
        _builder.setX(value)
      }
    /**
     * ```
     * 坐标-x
     * ```
     *
     * `int64 x = 3;`
     */
    public fun clearX() {
      _builder.clearX()
    }

    /**
     * ```
     * 坐标-y
     * ```
     *
     * `int64 y = 4;`
     */
    public var y: kotlin.Long
      @JvmName("getY")
      get() = _builder.getY()
      @JvmName("setY")
      set(value) {
        _builder.setY(value)
      }
    /**
     * ```
     * 坐标-y
     * ```
     *
     * `int64 y = 4;`
     */
    public fun clearY() {
      _builder.clearY()
    }

    /**
     * ```
     * 方向
     * ```
     *
     * `int32 orientation = 5;`
     */
    public var orientation: kotlin.Int
      @JvmName("getOrientation")
      get() = _builder.getOrientation()
      @JvmName("setOrientation")
      set(value) {
        _builder.setOrientation(value)
      }
    /**
     * ```
     * 方向
     * ```
     *
     * `int32 orientation = 5;`
     */
    public fun clearOrientation() {
      _builder.clearOrientation()
    }

    /**
     * ```
     * 来源
     * 0:未知 1:淘宝 2:自营
     * ```
     *
     * `int32 source = 6;`
     */
    public var source: kotlin.Int
      @JvmName("getSource")
      get() = _builder.getSource()
      @JvmName("setSource")
      set(value) {
        _builder.setSource(value)
      }
    /**
     * ```
     * 来源
     * 0:未知 1:淘宝 2:自营
     * ```
     *
     * `int32 source = 6;`
     */
    public fun clearSource() {
      _builder.clearSource()
    }

    /**
     * ```
     * 商品id
     * ```
     *
     * `int64 item_id = 7;`
     */
    public var itemId: kotlin.Long
      @JvmName("getItemId")
      get() = _builder.getItemId()
      @JvmName("setItemId")
      set(value) {
        _builder.setItemId(value)
      }
    /**
     * ```
     * 商品id
     * ```
     *
     * `int64 item_id = 7;`
     */
    public fun clearItemId() {
      _builder.clearItemId()
    }

    /**
     * ```
     * 用户mid
     * ```
     *
     * `int64 mid = 8;`
     */
    public var mid: kotlin.Long
      @JvmName("getMid")
      get() = _builder.getMid()
      @JvmName("setMid")
      set(value) {
        _builder.setMid(value)
      }
    /**
     * ```
     * 用户mid
     * ```
     *
     * `int64 mid = 8;`
     */
    public fun clearMid() {
      _builder.clearMid()
    }

    /**
     * ```
     * 话题id
     * ```
     *
     * `int64 tid = 9;`
     */
    public var tid: kotlin.Long
      @JvmName("getTid")
      get() = _builder.getTid()
      @JvmName("setTid")
      set(value) {
        _builder.setTid(value)
      }
    /**
     * ```
     * 话题id
     * ```
     *
     * `int64 tid = 9;`
     */
    public fun clearTid() {
      _builder.clearTid()
    }

    /**
     * ```
     * lbs信息
     * ```
     *
     * `string poi = 10;`
     */
    public var poi: kotlin.String
      @JvmName("getPoi")
      get() = _builder.getPoi()
      @JvmName("setPoi")
      set(value) {
        _builder.setPoi(value)
      }
    /**
     * ```
     * lbs信息
     * ```
     *
     * `string poi = 10;`
     */
    public fun clearPoi() {
      _builder.clearPoi()
    }

    /**
     * ```
     * 商品标签链接
     * ```
     *
     * `string schema_url = 11;`
     */
    public var schemaUrl: kotlin.String
      @JvmName("getSchemaUrl")
      get() = _builder.getSchemaUrl()
      @JvmName("setSchemaUrl")
      set(value) {
        _builder.setSchemaUrl(value)
      }
    /**
     * ```
     * 商品标签链接
     * ```
     *
     * `string schema_url = 11;`
     */
    public fun clearSchemaUrl() {
      _builder.clearSchemaUrl()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.gateway.MdlDynDrawTagItem.copy(block: `bilibili.dynamic.gateway`.MdlDynDrawTagItemKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.gateway.MdlDynDrawTagItem =
  `bilibili.dynamic.gateway`.MdlDynDrawTagItemKt.Dsl._create(this.toBuilder()).apply { block() }._build()

