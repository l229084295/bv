// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/gw/gateway.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic.gateway;

@kotlin.jvm.JvmName("-initializemdlDynMedialist")
public inline fun mdlDynMedialist(block: bilibili.dynamic.gateway.MdlDynMedialistKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.gateway.MdlDynMedialist =
  bilibili.dynamic.gateway.MdlDynMedialistKt.Dsl._create(bilibili.dynamic.gateway.MdlDynMedialist.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态列表渲染部分-详情模块-播单
 * ```
 *
 * Protobuf type `bilibili.dynamic.gateway.MdlDynMedialist`
 */
public object MdlDynMedialistKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.gateway.MdlDynMedialist.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.gateway.MdlDynMedialist.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.gateway.MdlDynMedialist = _builder.build()

    /**
     * ```
     * 播单id
     * ```
     *
     * `int64 id = 1;`
     */
    public var id: kotlin.Long
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * ```
     * 播单id
     * ```
     *
     * `int64 id = 1;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * ```
     * 跳转地址
     * ```
     *
     * `string uri = 2;`
     */
    public var uri: kotlin.String
      @JvmName("getUri")
      get() = _builder.getUri()
      @JvmName("setUri")
      set(value) {
        _builder.setUri(value)
      }
    /**
     * ```
     * 跳转地址
     * ```
     *
     * `string uri = 2;`
     */
    public fun clearUri() {
      _builder.clearUri()
    }

    /**
     * ```
     * 主标题
     * ```
     *
     * `string title = 3;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * 主标题
     * ```
     *
     * `string title = 3;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * 副标题
     * ```
     *
     * `string sub_title = 4;`
     */
    public var subTitle: kotlin.String
      @JvmName("getSubTitle")
      get() = _builder.getSubTitle()
      @JvmName("setSubTitle")
      set(value) {
        _builder.setSubTitle(value)
      }
    /**
     * ```
     * 副标题
     * ```
     *
     * `string sub_title = 4;`
     */
    public fun clearSubTitle() {
      _builder.clearSubTitle()
    }

    /**
     * ```
     * 封面图
     * ```
     *
     * `string cover = 5;`
     */
    public var cover: kotlin.String
      @JvmName("getCover")
      get() = _builder.getCover()
      @JvmName("setCover")
      set(value) {
        _builder.setCover(value)
      }
    /**
     * ```
     * 封面图
     * ```
     *
     * `string cover = 5;`
     */
    public fun clearCover() {
      _builder.clearCover()
    }

    /**
     * ```
     * 封面类型
     * ```
     *
     * `int32 cover_type = 6;`
     */
    public var coverType: kotlin.Int
      @JvmName("getCoverType")
      get() = _builder.getCoverType()
      @JvmName("setCoverType")
      set(value) {
        _builder.setCoverType(value)
      }
    /**
     * ```
     * 封面类型
     * ```
     *
     * `int32 cover_type = 6;`
     */
    public fun clearCoverType() {
      _builder.clearCoverType()
    }

    /**
     * ```
     * 角标
     * ```
     *
     * `.bilibili.dynamic.gateway.VideoBadge badge = 7;`
     */
    public var badge: bilibili.dynamic.gateway.VideoBadge
      @JvmName("getBadge")
      get() = _builder.getBadge()
      @JvmName("setBadge")
      set(value) {
        _builder.setBadge(value)
      }
    /**
     * ```
     * 角标
     * ```
     *
     * `.bilibili.dynamic.gateway.VideoBadge badge = 7;`
     */
    public fun clearBadge() {
      _builder.clearBadge()
    }
    /**
     * ```
     * 角标
     * ```
     *
     * `.bilibili.dynamic.gateway.VideoBadge badge = 7;`
     * @return Whether the badge field is set.
     */
    public fun hasBadge(): kotlin.Boolean {
      return _builder.hasBadge()
    }
    public val MdlDynMedialistKt.Dsl.badgeOrNull: bilibili.dynamic.gateway.VideoBadge?
      get() = _builder.badgeOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.gateway.MdlDynMedialist.copy(block: `bilibili.dynamic.gateway`.MdlDynMedialistKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.gateway.MdlDynMedialist =
  `bilibili.dynamic.gateway`.MdlDynMedialistKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.dynamic.gateway.MdlDynMedialistOrBuilder.badgeOrNull: bilibili.dynamic.gateway.VideoBadge?
  get() = if (hasBadge()) getBadge() else null

