// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/gw/gateway.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic.gateway;

@kotlin.jvm.JvmName("-initializedynThumbReq")
public inline fun dynThumbReq(block: bilibili.dynamic.gateway.DynThumbReqKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.gateway.DynThumbReq =
  bilibili.dynamic.gateway.DynThumbReqKt.Dsl._create(bilibili.dynamic.gateway.DynThumbReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态点赞-请求
 * ```
 *
 * Protobuf type `bilibili.dynamic.gateway.DynThumbReq`
 */
public object DynThumbReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.gateway.DynThumbReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.gateway.DynThumbReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.gateway.DynThumbReq = _builder.build()

    /**
     * ```
     * 用户uid
     * ```
     *
     * `int64 uid = 1;`
     */
    public var uid: kotlin.Long
      @JvmName("getUid")
      get() = _builder.getUid()
      @JvmName("setUid")
      set(value) {
        _builder.setUid(value)
      }
    /**
     * ```
     * 用户uid
     * ```
     *
     * `int64 uid = 1;`
     */
    public fun clearUid() {
      _builder.clearUid()
    }

    /**
     * ```
     * 动态id
     * ```
     *
     * `string dyn_id = 2;`
     */
    public var dynId: kotlin.String
      @JvmName("getDynId")
      get() = _builder.getDynId()
      @JvmName("setDynId")
      set(value) {
        _builder.setDynId(value)
      }
    /**
     * ```
     * 动态id
     * ```
     *
     * `string dyn_id = 2;`
     */
    public fun clearDynId() {
      _builder.clearDynId()
    }

    /**
     * ```
     * 动态类型(透传extend中的dyn_type)
     * ```
     *
     * `int64 dyn_type = 3;`
     */
    public var dynType: kotlin.Long
      @JvmName("getDynType")
      get() = _builder.getDynType()
      @JvmName("setDynType")
      set(value) {
        _builder.setDynType(value)
      }
    /**
     * ```
     * 动态类型(透传extend中的dyn_type)
     * ```
     *
     * `int64 dyn_type = 3;`
     */
    public fun clearDynType() {
      _builder.clearDynType()
    }

    /**
     * ```
     * 业务方资源id
     * ```
     *
     * `string rid = 4;`
     */
    public var rid: kotlin.String
      @JvmName("getRid")
      get() = _builder.getRid()
      @JvmName("setRid")
      set(value) {
        _builder.setRid(value)
      }
    /**
     * ```
     * 业务方资源id
     * ```
     *
     * `string rid = 4;`
     */
    public fun clearRid() {
      _builder.clearRid()
    }

    /**
     * ```
     * 点赞类型
     * ```
     *
     * `.bilibili.dynamic.gateway.ThumbType type = 5;`
     */
    public var type: bilibili.dynamic.gateway.ThumbType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    public var typeValue: kotlin.Int
      @JvmName("getTypeValue")
      get() = _builder.getTypeValue()
      @JvmName("setTypeValue")
      set(value) {
        _builder.setTypeValue(value)
      }
    /**
     * ```
     * 点赞类型
     * ```
     *
     * `.bilibili.dynamic.gateway.ThumbType type = 5;`
     */
    public fun clearType() {
      _builder.clearType()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.gateway.DynThumbReq.copy(block: `bilibili.dynamic.gateway`.DynThumbReqKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.gateway.DynThumbReq =
  `bilibili.dynamic.gateway`.DynThumbReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

