// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/gw/gateway.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic.gateway;

@kotlin.jvm.JvmName("-initializeadditionEsport")
public inline fun additionEsport(block: bilibili.dynamic.gateway.AdditionEsportKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.gateway.AdditionEsport =
  bilibili.dynamic.gateway.AdditionEsportKt.Dsl._create(bilibili.dynamic.gateway.AdditionEsport.newBuilder()).apply { block() }._build()
/**
 * ```
 * 动态-附加卡-电竞卡
 * ```
 *
 * Protobuf type `bilibili.dynamic.gateway.AdditionEsport`
 */
public object AdditionEsportKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.gateway.AdditionEsport.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.gateway.AdditionEsport.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.gateway.AdditionEsport = _builder.build()

    /**
     * ```
     * 电竞类型
     * ```
     *
     * `.bilibili.dynamic.gateway.EspaceStyle style = 1;`
     */
    public var style: bilibili.dynamic.gateway.EspaceStyle
      @JvmName("getStyle")
      get() = _builder.getStyle()
      @JvmName("setStyle")
      set(value) {
        _builder.setStyle(value)
      }
    public var styleValue: kotlin.Int
      @JvmName("getStyleValue")
      get() = _builder.getStyleValue()
      @JvmName("setStyleValue")
      set(value) {
        _builder.setStyleValue(value)
      }
    /**
     * ```
     * 电竞类型
     * ```
     *
     * `.bilibili.dynamic.gateway.EspaceStyle style = 1;`
     */
    public fun clearStyle() {
      _builder.clearStyle()
    }

    /**
     * ```
     * moba类
     * ```
     *
     * `.bilibili.dynamic.gateway.AdditionEsportMoba addition_esport_moba = 2;`
     */
    public var additionEsportMoba: bilibili.dynamic.gateway.AdditionEsportMoba
      @JvmName("getAdditionEsportMoba")
      get() = _builder.getAdditionEsportMoba()
      @JvmName("setAdditionEsportMoba")
      set(value) {
        _builder.setAdditionEsportMoba(value)
      }
    /**
     * ```
     * moba类
     * ```
     *
     * `.bilibili.dynamic.gateway.AdditionEsportMoba addition_esport_moba = 2;`
     */
    public fun clearAdditionEsportMoba() {
      _builder.clearAdditionEsportMoba()
    }
    /**
     * ```
     * moba类
     * ```
     *
     * `.bilibili.dynamic.gateway.AdditionEsportMoba addition_esport_moba = 2;`
     * @return Whether the additionEsportMoba field is set.
     */
    public fun hasAdditionEsportMoba(): kotlin.Boolean {
      return _builder.hasAdditionEsportMoba()
    }

    /**
     * ```
     * 动态本身的类型 type
     * ```
     *
     * `string type = 3;`
     */
    public var type: kotlin.String
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * ```
     * 动态本身的类型 type
     * ```
     *
     * `string type = 3;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * ```
     * 附加卡类型
     * ```
     *
     * `string card_type = 4;`
     */
    public var cardType: kotlin.String
      @JvmName("getCardType")
      get() = _builder.getCardType()
      @JvmName("setCardType")
      set(value) {
        _builder.setCardType(value)
      }
    /**
     * ```
     * 附加卡类型
     * ```
     *
     * `string card_type = 4;`
     */
    public fun clearCardType() {
      _builder.clearCardType()
    }
    public val itemCase: bilibili.dynamic.gateway.AdditionEsport.ItemCase
      @JvmName("getItemCase")
      get() = _builder.getItemCase()

    public fun clearItem() {
      _builder.clearItem()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.gateway.AdditionEsport.copy(block: `bilibili.dynamic.gateway`.AdditionEsportKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.gateway.AdditionEsport =
  `bilibili.dynamic.gateway`.AdditionEsportKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.dynamic.gateway.AdditionEsportOrBuilder.additionEsportMobaOrNull: bilibili.dynamic.gateway.AdditionEsportMoba?
  get() = if (hasAdditionEsportMoba()) getAdditionEsportMoba() else null

