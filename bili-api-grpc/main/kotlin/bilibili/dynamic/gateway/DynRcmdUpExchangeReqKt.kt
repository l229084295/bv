// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/gw/gateway.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic.gateway;

@kotlin.jvm.JvmName("-initializedynRcmdUpExchangeReq")
public inline fun dynRcmdUpExchangeReq(block: bilibili.dynamic.gateway.DynRcmdUpExchangeReqKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.gateway.DynRcmdUpExchangeReq =
  bilibili.dynamic.gateway.DynRcmdUpExchangeReqKt.Dsl._create(bilibili.dynamic.gateway.DynRcmdUpExchangeReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * 关注推荐up主换一换-请求
 * ```
 *
 * Protobuf type `bilibili.dynamic.gateway.DynRcmdUpExchangeReq`
 */
public object DynRcmdUpExchangeReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.gateway.DynRcmdUpExchangeReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.gateway.DynRcmdUpExchangeReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.gateway.DynRcmdUpExchangeReq = _builder.build()

    /**
     * ```
     * 登录用户id
     * ```
     *
     * `int64 uid = 1;`
     */
    public var uid: kotlin.Long
      @JvmName("getUid")
      get() = _builder.getUid()
      @JvmName("setUid")
      set(value) {
        _builder.setUid(value)
      }
    /**
     * ```
     * 登录用户id
     * ```
     *
     * `int64 uid = 1;`
     */
    public fun clearUid() {
      _builder.clearUid()
    }

    /**
     * ```
     * 上一次不感兴趣的ts，单位：秒；该字段透传给搜索
     * ```
     *
     * `int64 dislikeTs = 2;`
     */
    public var dislikeTs: kotlin.Long
      @JvmName("getDislikeTs")
      get() = _builder.getDislikeTs()
      @JvmName("setDislikeTs")
      set(value) {
        _builder.setDislikeTs(value)
      }
    /**
     * ```
     * 上一次不感兴趣的ts，单位：秒；该字段透传给搜索
     * ```
     *
     * `int64 dislikeTs = 2;`
     */
    public fun clearDislikeTs() {
      _builder.clearDislikeTs()
    }

    /**
     * ```
     * 需要与服务端确认或参照客户端现有参数
     * ```
     *
     * `string from = 3;`
     */
    public var from: kotlin.String
      @JvmName("getFrom")
      get() = _builder.getFrom()
      @JvmName("setFrom")
      set(value) {
        _builder.setFrom(value)
      }
    /**
     * ```
     * 需要与服务端确认或参照客户端现有参数
     * ```
     *
     * `string from = 3;`
     */
    public fun clearFrom() {
      _builder.clearFrom()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.gateway.DynRcmdUpExchangeReq.copy(block: `bilibili.dynamic.gateway`.DynRcmdUpExchangeReqKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.gateway.DynRcmdUpExchangeReq =
  `bilibili.dynamic.gateway`.DynRcmdUpExchangeReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

