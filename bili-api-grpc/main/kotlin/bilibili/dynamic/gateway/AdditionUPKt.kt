// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/gw/gateway.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic.gateway;

@kotlin.jvm.JvmName("-initializeadditionUP")
public inline fun additionUP(block: bilibili.dynamic.gateway.AdditionUPKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.gateway.AdditionUP =
  bilibili.dynamic.gateway.AdditionUPKt.Dsl._create(bilibili.dynamic.gateway.AdditionUP.newBuilder()).apply { block() }._build()
/**
 * ```
 * up主预约发布卡
 * ```
 *
 * Protobuf type `bilibili.dynamic.gateway.AdditionUP`
 */
public object AdditionUPKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.gateway.AdditionUP.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.gateway.AdditionUP.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.gateway.AdditionUP = _builder.build()

    /**
     * ```
     * 标题
     * ```
     *
     * `string title = 1;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * 标题
     * ```
     *
     * `string title = 1;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * 高亮文本，描述文字1
     * ```
     *
     * `.bilibili.dynamic.gateway.HighlightText desc_text_1 = 2;`
     */
    public var descText1: bilibili.dynamic.gateway.HighlightText
      @JvmName("getDescText1")
      get() = _builder.getDescText1()
      @JvmName("setDescText1")
      set(value) {
        _builder.setDescText1(value)
      }
    /**
     * ```
     * 高亮文本，描述文字1
     * ```
     *
     * `.bilibili.dynamic.gateway.HighlightText desc_text_1 = 2;`
     */
    public fun clearDescText1() {
      _builder.clearDescText1()
    }
    /**
     * ```
     * 高亮文本，描述文字1
     * ```
     *
     * `.bilibili.dynamic.gateway.HighlightText desc_text_1 = 2;`
     * @return Whether the descText1 field is set.
     */
    public fun hasDescText1(): kotlin.Boolean {
      return _builder.hasDescText1()
    }
    public val AdditionUPKt.Dsl.descText1OrNull: bilibili.dynamic.gateway.HighlightText?
      get() = _builder.descText1OrNull

    /**
     * ```
     * 描述文字2
     * ```
     *
     * `string desc_text_2 = 3;`
     */
    public var descText2: kotlin.String
      @JvmName("getDescText2")
      get() = _builder.getDescText2()
      @JvmName("setDescText2")
      set(value) {
        _builder.setDescText2(value)
      }
    /**
     * ```
     * 描述文字2
     * ```
     *
     * `string desc_text_2 = 3;`
     */
    public fun clearDescText2() {
      _builder.clearDescText2()
    }

    /**
     * ```
     * 点击跳转链接
     * ```
     *
     * `string url = 4;`
     */
    public var url: kotlin.String
      @JvmName("getUrl")
      get() = _builder.getUrl()
      @JvmName("setUrl")
      set(value) {
        _builder.setUrl(value)
      }
    /**
     * ```
     * 点击跳转链接
     * ```
     *
     * `string url = 4;`
     */
    public fun clearUrl() {
      _builder.clearUrl()
    }

    /**
     * ```
     * 按钮
     * ```
     *
     * `.bilibili.dynamic.gateway.AdditionalButton button = 5;`
     */
    public var button: bilibili.dynamic.gateway.AdditionalButton
      @JvmName("getButton")
      get() = _builder.getButton()
      @JvmName("setButton")
      set(value) {
        _builder.setButton(value)
      }
    /**
     * ```
     * 按钮
     * ```
     *
     * `.bilibili.dynamic.gateway.AdditionalButton button = 5;`
     */
    public fun clearButton() {
      _builder.clearButton()
    }
    /**
     * ```
     * 按钮
     * ```
     *
     * `.bilibili.dynamic.gateway.AdditionalButton button = 5;`
     * @return Whether the button field is set.
     */
    public fun hasButton(): kotlin.Boolean {
      return _builder.hasButton()
    }
    public val AdditionUPKt.Dsl.buttonOrNull: bilibili.dynamic.gateway.AdditionalButton?
      get() = _builder.buttonOrNull

    /**
     * ```
     * 附加卡类型
     * ```
     *
     * `string card_type = 6;`
     */
    public var cardType: kotlin.String
      @JvmName("getCardType")
      get() = _builder.getCardType()
      @JvmName("setCardType")
      set(value) {
        _builder.setCardType(value)
      }
    /**
     * ```
     * 附加卡类型
     * ```
     *
     * `string card_type = 6;`
     */
    public fun clearCardType() {
      _builder.clearCardType()
    }

    /**
     * ```
     * 预约人数(用于预约人数变化)
     * ```
     *
     * `int64 reserve_total = 7;`
     */
    public var reserveTotal: kotlin.Long
      @JvmName("getReserveTotal")
      get() = _builder.getReserveTotal()
      @JvmName("setReserveTotal")
      set(value) {
        _builder.setReserveTotal(value)
      }
    /**
     * ```
     * 预约人数(用于预约人数变化)
     * ```
     *
     * `int64 reserve_total = 7;`
     */
    public fun clearReserveTotal() {
      _builder.clearReserveTotal()
    }

    /**
     * ```
     * 活动皮肤
     * ```
     *
     * `.bilibili.dynamic.gateway.AdditionalActSkin act_skin = 8;`
     */
    public var actSkin: bilibili.dynamic.gateway.AdditionalActSkin
      @JvmName("getActSkin")
      get() = _builder.getActSkin()
      @JvmName("setActSkin")
      set(value) {
        _builder.setActSkin(value)
      }
    /**
     * ```
     * 活动皮肤
     * ```
     *
     * `.bilibili.dynamic.gateway.AdditionalActSkin act_skin = 8;`
     */
    public fun clearActSkin() {
      _builder.clearActSkin()
    }
    /**
     * ```
     * 活动皮肤
     * ```
     *
     * `.bilibili.dynamic.gateway.AdditionalActSkin act_skin = 8;`
     * @return Whether the actSkin field is set.
     */
    public fun hasActSkin(): kotlin.Boolean {
      return _builder.hasActSkin()
    }
    public val AdditionUPKt.Dsl.actSkinOrNull: bilibili.dynamic.gateway.AdditionalActSkin?
      get() = _builder.actSkinOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.gateway.AdditionUP.copy(block: `bilibili.dynamic.gateway`.AdditionUPKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.gateway.AdditionUP =
  `bilibili.dynamic.gateway`.AdditionUPKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.dynamic.gateway.AdditionUPOrBuilder.descText1OrNull: bilibili.dynamic.gateway.HighlightText?
  get() = if (hasDescText1()) getDescText1() else null

public val bilibili.dynamic.gateway.AdditionUPOrBuilder.buttonOrNull: bilibili.dynamic.gateway.AdditionalButton?
  get() = if (hasButton()) getButton() else null

public val bilibili.dynamic.gateway.AdditionUPOrBuilder.actSkinOrNull: bilibili.dynamic.gateway.AdditionalActSkin?
  get() = if (hasActSkin()) getActSkin() else null

