// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/common/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic;

@kotlin.jvm.JvmName("-initializeshowMoreLaunchedActivity")
public inline fun showMoreLaunchedActivity(block: bilibili.dynamic.ShowMoreLaunchedActivityKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.ShowMoreLaunchedActivity =
  bilibili.dynamic.ShowMoreLaunchedActivityKt.Dsl._create(bilibili.dynamic.ShowMoreLaunchedActivity.newBuilder()).apply { block() }._build()
/**
 * ```
 * UP已经创建的活动列表中的展示更多按钮详情
 * ```
 *
 * Protobuf type `bilibili.dynamic.ShowMoreLaunchedActivity`
 */
public object ShowMoreLaunchedActivityKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.ShowMoreLaunchedActivity.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.ShowMoreLaunchedActivity.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.ShowMoreLaunchedActivity = _builder.build()

    /**
     * ```
     * 按钮的文案
     * ```
     *
     * `string button_text = 1;`
     */
    public var buttonText: kotlin.String
      @JvmName("getButtonText")
      get() = _builder.getButtonText()
      @JvmName("setButtonText")
      set(value) {
        _builder.setButtonText(value)
      }
    /**
     * ```
     * 按钮的文案
     * ```
     *
     * `string button_text = 1;`
     */
    public fun clearButtonText() {
      _builder.clearButtonText()
    }

    /**
     * ```
     * 按钮的跳转链接
     * ```
     *
     * `string jump_url = 2;`
     */
    public var jumpUrl: kotlin.String
      @JvmName("getJumpUrl")
      get() = _builder.getJumpUrl()
      @JvmName("setJumpUrl")
      set(value) {
        _builder.setJumpUrl(value)
      }
    /**
     * ```
     * 按钮的跳转链接
     * ```
     *
     * `string jump_url = 2;`
     */
    public fun clearJumpUrl() {
      _builder.clearJumpUrl()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.ShowMoreLaunchedActivity.copy(block: `bilibili.dynamic`.ShowMoreLaunchedActivityKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.ShowMoreLaunchedActivity =
  `bilibili.dynamic`.ShowMoreLaunchedActivityKt.Dsl._create(this.toBuilder()).apply { block() }._build()

