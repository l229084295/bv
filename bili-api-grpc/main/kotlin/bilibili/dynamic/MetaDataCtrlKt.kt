// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dynamic/common/dynamic.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dynamic;

@kotlin.jvm.JvmName("-initializemetaDataCtrl")
public inline fun metaDataCtrl(block: bilibili.dynamic.MetaDataCtrlKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.MetaDataCtrl =
  bilibili.dynamic.MetaDataCtrlKt.Dsl._create(bilibili.dynamic.MetaDataCtrl.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.dynamic.MetaDataCtrl`
 */
public object MetaDataCtrlKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dynamic.MetaDataCtrl.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dynamic.MetaDataCtrl.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dynamic.MetaDataCtrl = _builder.build()

    /**
     * ```
     * 客户端平台
     * ```
     *
     * `string platform = 1;`
     */
    public var platform: kotlin.String
      @JvmName("getPlatform")
      get() = _builder.getPlatform()
      @JvmName("setPlatform")
      set(value) {
        _builder.setPlatform(value)
      }
    /**
     * ```
     * 客户端平台
     * ```
     *
     * `string platform = 1;`
     */
    public fun clearPlatform() {
      _builder.clearPlatform()
    }

    /**
     * ```
     * 客户端build号
     * ```
     *
     * `string build = 2;`
     */
    public var build: kotlin.String
      @JvmName("getBuild")
      get() = _builder.getBuild()
      @JvmName("setBuild")
      set(value) {
        _builder.setBuild(value)
      }
    /**
     * ```
     * 客户端build号
     * ```
     *
     * `string build = 2;`
     */
    public fun clearBuild() {
      _builder.clearBuild()
    }

    /**
     * ```
     * 客户端移动设备类型
     * ```
     *
     * `string mobi_app = 3;`
     */
    public var mobiApp: kotlin.String
      @JvmName("getMobiApp")
      get() = _builder.getMobiApp()
      @JvmName("setMobiApp")
      set(value) {
        _builder.setMobiApp(value)
      }
    /**
     * ```
     * 客户端移动设备类型
     * ```
     *
     * `string mobi_app = 3;`
     */
    public fun clearMobiApp() {
      _builder.clearMobiApp()
    }

    /**
     * ```
     * 客户端buvid
     * ```
     *
     * `string buvid = 4;`
     */
    public var buvid: kotlin.String
      @JvmName("getBuvid")
      get() = _builder.getBuvid()
      @JvmName("setBuvid")
      set(value) {
        _builder.setBuvid(value)
      }
    /**
     * ```
     * 客户端buvid
     * ```
     *
     * `string buvid = 4;`
     */
    public fun clearBuvid() {
      _builder.clearBuvid()
    }

    /**
     * ```
     * 用户设备信息
     * ```
     *
     * `string device = 5;`
     */
    public var device: kotlin.String
      @JvmName("getDevice")
      get() = _builder.getDevice()
      @JvmName("setDevice")
      set(value) {
        _builder.setDevice(value)
      }
    /**
     * ```
     * 用户设备信息
     * ```
     *
     * `string device = 5;`
     */
    public fun clearDevice() {
      _builder.clearDevice()
    }

    /**
     * ```
     * 请求来源页面的spmid
     * ```
     *
     * `string from_spmid = 6;`
     */
    public var fromSpmid: kotlin.String
      @JvmName("getFromSpmid")
      get() = _builder.getFromSpmid()
      @JvmName("setFromSpmid")
      set(value) {
        _builder.setFromSpmid(value)
      }
    /**
     * ```
     * 请求来源页面的spmid
     * ```
     *
     * `string from_spmid = 6;`
     */
    public fun clearFromSpmid() {
      _builder.clearFromSpmid()
    }

    /**
     * ```
     * 请求来源页面
     * ```
     *
     * `string from = 7;`
     */
    public var from: kotlin.String
      @JvmName("getFrom")
      get() = _builder.getFrom()
      @JvmName("setFrom")
      set(value) {
        _builder.setFrom(value)
      }
    /**
     * ```
     * 请求来源页面
     * ```
     *
     * `string from = 7;`
     */
    public fun clearFrom() {
      _builder.clearFrom()
    }

    /**
     * ```
     * 请求的trace_id
     * ```
     *
     * `string trace_id = 8;`
     */
    public var traceId: kotlin.String
      @JvmName("getTraceId")
      get() = _builder.getTraceId()
      @JvmName("setTraceId")
      set(value) {
        _builder.setTraceId(value)
      }
    /**
     * ```
     * 请求的trace_id
     * ```
     *
     * `string trace_id = 8;`
     */
    public fun clearTraceId() {
      _builder.clearTraceId()
    }

    /**
     * ```
     * 青少年模式
     * ```
     *
     * `int32 teenager_mode = 9;`
     */
    public var teenagerMode: kotlin.Int
      @JvmName("getTeenagerMode")
      get() = _builder.getTeenagerMode()
      @JvmName("setTeenagerMode")
      set(value) {
        _builder.setTeenagerMode(value)
      }
    /**
     * ```
     * 青少年模式
     * ```
     *
     * `int32 teenager_mode = 9;`
     */
    public fun clearTeenagerMode() {
      _builder.clearTeenagerMode()
    }

    /**
     * ```
     * 0:正常 1:冷启动
     * ```
     *
     * `int32 cold_start = 10;`
     */
    public var coldStart: kotlin.Int
      @JvmName("getColdStart")
      get() = _builder.getColdStart()
      @JvmName("setColdStart")
      set(value) {
        _builder.setColdStart(value)
      }
    /**
     * ```
     * 0:正常 1:冷启动
     * ```
     *
     * `int32 cold_start = 10;`
     */
    public fun clearColdStart() {
      _builder.clearColdStart()
    }

    /**
     * ```
     * 客户端版本号
     * ```
     *
     * `string version = 11;`
     */
    public var version: kotlin.String
      @JvmName("getVersion")
      get() = _builder.getVersion()
      @JvmName("setVersion")
      set(value) {
        _builder.setVersion(value)
      }
    /**
     * ```
     * 客户端版本号
     * ```
     *
     * `string version = 11;`
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }

    /**
     * ```
     * 网络状态
     * Unknown=0 WIFI=1 WWAN=2
     * ```
     *
     * `int32 network = 12;`
     */
    public var network: kotlin.Int
      @JvmName("getNetwork")
      get() = _builder.getNetwork()
      @JvmName("setNetwork")
      set(value) {
        _builder.setNetwork(value)
      }
    /**
     * ```
     * 网络状态
     * Unknown=0 WIFI=1 WWAN=2
     * ```
     *
     * `int32 network = 12;`
     */
    public fun clearNetwork() {
      _builder.clearNetwork()
    }

    /**
     * ```
     * 用户ip地址
     * ```
     *
     * `string ip = 13;`
     */
    public var ip: kotlin.String
      @JvmName("getIp")
      get() = _builder.getIp()
      @JvmName("setIp")
      set(value) {
        _builder.setIp(value)
      }
    /**
     * ```
     * 用户ip地址
     * ```
     *
     * `string ip = 13;`
     */
    public fun clearIp() {
      _builder.clearIp()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dynamic.MetaDataCtrl.copy(block: `bilibili.dynamic`.MetaDataCtrlKt.Dsl.() -> kotlin.Unit): bilibili.dynamic.MetaDataCtrl =
  `bilibili.dynamic`.MetaDataCtrlKt.Dsl._create(this.toBuilder()).apply { block() }._build()

