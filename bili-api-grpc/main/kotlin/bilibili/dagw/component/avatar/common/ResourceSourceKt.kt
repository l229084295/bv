// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dagw/component/avatar/common/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dagw.component.avatar.common;

@kotlin.jvm.JvmName("-initializeresourceSource")
public inline fun resourceSource(block: bilibili.dagw.component.avatar.common.ResourceSourceKt.Dsl.() -> kotlin.Unit): bilibili.dagw.component.avatar.common.ResourceSource =
  bilibili.dagw.component.avatar.common.ResourceSourceKt.Dsl._create(bilibili.dagw.component.avatar.common.ResourceSource.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.dagw.component.avatar.common.ResourceSource`
 */
public object ResourceSourceKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dagw.component.avatar.common.ResourceSource.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dagw.component.avatar.common.ResourceSource.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dagw.component.avatar.common.ResourceSource = _builder.build()

    /**
     * ```
     * ```
     *
     * `int32 src_type = 1;`
     */
    public var srcType: kotlin.Int
      @JvmName("getSrcType")
      get() = _builder.getSrcType()
      @JvmName("setSrcType")
      set(value) {
        _builder.setSrcType(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 src_type = 1;`
     */
    public fun clearSrcType() {
      _builder.clearSrcType()
    }

    /**
     * ```
     * ```
     *
     * `int32 placeholder = 2;`
     */
    public var placeholder: kotlin.Int
      @JvmName("getPlaceholder")
      get() = _builder.getPlaceholder()
      @JvmName("setPlaceholder")
      set(value) {
        _builder.setPlaceholder(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 placeholder = 2;`
     */
    public fun clearPlaceholder() {
      _builder.clearPlaceholder()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.RemoteRes remote = 3;`
     */
    public var remote: bilibili.dagw.component.avatar.common.RemoteRes
      @JvmName("getRemote")
      get() = _builder.getRemote()
      @JvmName("setRemote")
      set(value) {
        _builder.setRemote(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.RemoteRes remote = 3;`
     */
    public fun clearRemote() {
      _builder.clearRemote()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.RemoteRes remote = 3;`
     * @return Whether the remote field is set.
     */
    public fun hasRemote(): kotlin.Boolean {
      return _builder.hasRemote()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.ResourceSource.LocalRes local = 4;`
     */
    public var local: bilibili.dagw.component.avatar.common.ResourceSource.LocalRes
      @JvmName("getLocal")
      get() = _builder.getLocal()
      @JvmName("setLocal")
      set(value) {
        _builder.setLocal(value)
      }
    public var localValue: kotlin.Int
      @JvmName("getLocalValue")
      get() = _builder.getLocalValue()
      @JvmName("setLocalValue")
      set(value) {
        _builder.setLocalValue(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.ResourceSource.LocalRes local = 4;`
     */
    public fun clearLocal() {
      _builder.clearLocal()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.ResourceSource.LocalRes local = 4;`
     * @return Whether the local field is set.
     */
    public fun hasLocal(): kotlin.Boolean {
      return _builder.hasLocal()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.NativeDrawRes draw = 5;`
     */
    public var draw: bilibili.dagw.component.avatar.common.NativeDrawRes
      @JvmName("getDraw")
      get() = _builder.getDraw()
      @JvmName("setDraw")
      set(value) {
        _builder.setDraw(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.NativeDrawRes draw = 5;`
     */
    public fun clearDraw() {
      _builder.clearDraw()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.NativeDrawRes draw = 5;`
     * @return Whether the draw field is set.
     */
    public fun hasDraw(): kotlin.Boolean {
      return _builder.hasDraw()
    }
    public val resCase: bilibili.dagw.component.avatar.common.ResourceSource.ResCase
      @JvmName("getResCase")
      get() = _builder.getResCase()

    public fun clearRes() {
      _builder.clearRes()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dagw.component.avatar.common.ResourceSource.copy(block: `bilibili.dagw.component.avatar.common`.ResourceSourceKt.Dsl.() -> kotlin.Unit): bilibili.dagw.component.avatar.common.ResourceSource =
  `bilibili.dagw.component.avatar.common`.ResourceSourceKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.dagw.component.avatar.common.ResourceSourceOrBuilder.remoteOrNull: bilibili.dagw.component.avatar.common.RemoteRes?
  get() = if (hasRemote()) getRemote() else null

public val bilibili.dagw.component.avatar.common.ResourceSourceOrBuilder.drawOrNull: bilibili.dagw.component.avatar.common.NativeDrawRes?
  get() = if (hasDraw()) getDraw() else null

