// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dagw/component/avatar/common/common.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dagw.component.avatar.common;

@kotlin.jvm.JvmName("-initializecolorConfig")
public inline fun colorConfig(block: bilibili.dagw.component.avatar.common.ColorConfigKt.Dsl.() -> kotlin.Unit): bilibili.dagw.component.avatar.common.ColorConfig =
  bilibili.dagw.component.avatar.common.ColorConfigKt.Dsl._create(bilibili.dagw.component.avatar.common.ColorConfig.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.dagw.component.avatar.common.ColorConfig`
 */
public object ColorConfigKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dagw.component.avatar.common.ColorConfig.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dagw.component.avatar.common.ColorConfig.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dagw.component.avatar.common.ColorConfig = _builder.build()

    /**
     * ```
     * ```
     *
     * `bool is_dark_mode_aware = 1;`
     */
    public var isDarkModeAware: kotlin.Boolean
      @JvmName("getIsDarkModeAware")
      get() = _builder.getIsDarkModeAware()
      @JvmName("setIsDarkModeAware")
      set(value) {
        _builder.setIsDarkModeAware(value)
      }
    /**
     * ```
     * ```
     *
     * `bool is_dark_mode_aware = 1;`
     */
    public fun clearIsDarkModeAware() {
      _builder.clearIsDarkModeAware()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.ColorSpec day = 2;`
     */
    public var day: bilibili.dagw.component.avatar.common.ColorSpec
      @JvmName("getDay")
      get() = _builder.getDay()
      @JvmName("setDay")
      set(value) {
        _builder.setDay(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.ColorSpec day = 2;`
     */
    public fun clearDay() {
      _builder.clearDay()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.ColorSpec day = 2;`
     * @return Whether the day field is set.
     */
    public fun hasDay(): kotlin.Boolean {
      return _builder.hasDay()
    }
    public val ColorConfigKt.Dsl.dayOrNull: bilibili.dagw.component.avatar.common.ColorSpec?
      get() = _builder.dayOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.ColorSpec night = 3;`
     */
    public var night: bilibili.dagw.component.avatar.common.ColorSpec
      @JvmName("getNight")
      get() = _builder.getNight()
      @JvmName("setNight")
      set(value) {
        _builder.setNight(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.ColorSpec night = 3;`
     */
    public fun clearNight() {
      _builder.clearNight()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.ColorSpec night = 3;`
     * @return Whether the night field is set.
     */
    public fun hasNight(): kotlin.Boolean {
      return _builder.hasNight()
    }
    public val ColorConfigKt.Dsl.nightOrNull: bilibili.dagw.component.avatar.common.ColorSpec?
      get() = _builder.nightOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dagw.component.avatar.common.ColorConfig.copy(block: `bilibili.dagw.component.avatar.common`.ColorConfigKt.Dsl.() -> kotlin.Unit): bilibili.dagw.component.avatar.common.ColorConfig =
  `bilibili.dagw.component.avatar.common`.ColorConfigKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.dagw.component.avatar.common.ColorConfigOrBuilder.dayOrNull: bilibili.dagw.component.avatar.common.ColorSpec?
  get() = if (hasDay()) getDay() else null

public val bilibili.dagw.component.avatar.common.ColorConfigOrBuilder.nightOrNull: bilibili.dagw.component.avatar.common.ColorSpec?
  get() = if (hasNight()) getNight() else null

