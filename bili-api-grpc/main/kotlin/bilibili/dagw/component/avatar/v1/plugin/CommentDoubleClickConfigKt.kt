// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dagw/component/avatar/v1/plugin.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dagw.component.avatar.v1.plugin;

@kotlin.jvm.JvmName("-initializecommentDoubleClickConfig")
public inline fun commentDoubleClickConfig(block: bilibili.dagw.component.avatar.v1.plugin.CommentDoubleClickConfigKt.Dsl.() -> kotlin.Unit): bilibili.dagw.component.avatar.v1.plugin.CommentDoubleClickConfig =
  bilibili.dagw.component.avatar.v1.plugin.CommentDoubleClickConfigKt.Dsl._create(bilibili.dagw.component.avatar.v1.plugin.CommentDoubleClickConfig.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.dagw.component.avatar.v1.plugin.CommentDoubleClickConfig`
 */
public object CommentDoubleClickConfigKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dagw.component.avatar.v1.plugin.CommentDoubleClickConfig.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dagw.component.avatar.v1.plugin.CommentDoubleClickConfig.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dagw.component.avatar.v1.plugin.CommentDoubleClickConfig = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.v1.plugin.Interaction interaction = 1;`
     */
    public var interaction: bilibili.dagw.component.avatar.v1.plugin.Interaction
      @JvmName("getInteraction")
      get() = _builder.getInteraction()
      @JvmName("setInteraction")
      set(value) {
        _builder.setInteraction(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.v1.plugin.Interaction interaction = 1;`
     */
    public fun clearInteraction() {
      _builder.clearInteraction()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.v1.plugin.Interaction interaction = 1;`
     * @return Whether the interaction field is set.
     */
    public fun hasInteraction(): kotlin.Boolean {
      return _builder.hasInteraction()
    }
    public val CommentDoubleClickConfigKt.Dsl.interactionOrNull: bilibili.dagw.component.avatar.v1.plugin.Interaction?
      get() = _builder.interactionOrNull

    /**
     * ```
     * ```
     *
     * `double animation_scale = 2;`
     */
    public var animationScale: kotlin.Double
      @JvmName("getAnimationScale")
      get() = _builder.getAnimationScale()
      @JvmName("setAnimationScale")
      set(value) {
        _builder.setAnimationScale(value)
      }
    /**
     * ```
     * ```
     *
     * `double animation_scale = 2;`
     */
    public fun clearAnimationScale() {
      _builder.clearAnimationScale()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dagw.component.avatar.v1.plugin.CommentDoubleClickConfig.copy(block: `bilibili.dagw.component.avatar.v1.plugin`.CommentDoubleClickConfigKt.Dsl.() -> kotlin.Unit): bilibili.dagw.component.avatar.v1.plugin.CommentDoubleClickConfig =
  `bilibili.dagw.component.avatar.v1.plugin`.CommentDoubleClickConfigKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.dagw.component.avatar.v1.plugin.CommentDoubleClickConfigOrBuilder.interactionOrNull: bilibili.dagw.component.avatar.v1.plugin.Interaction?
  get() = if (hasInteraction()) getInteraction() else null

