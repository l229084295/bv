// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dagw/component/avatar/v1/avatar.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dagw.component.avatar.v1;

@kotlin.jvm.JvmName("-initializelayerConfig")
public inline fun layerConfig(block: bilibili.dagw.component.avatar.v1.LayerConfigKt.Dsl.() -> kotlin.Unit): bilibili.dagw.component.avatar.v1.LayerConfig =
  bilibili.dagw.component.avatar.v1.LayerConfigKt.Dsl._create(bilibili.dagw.component.avatar.v1.LayerConfig.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.dagw.component.avatar.v1.LayerConfig`
 */
public object LayerConfigKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dagw.component.avatar.v1.LayerConfig.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dagw.component.avatar.v1.LayerConfig.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dagw.component.avatar.v1.LayerConfig = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class TagsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * ```
     *
     * `map<string, .bilibili.dagw.component.avatar.v1.LayerTagConfig> tags = 1;`
     */
     public val tags: com.google.protobuf.kotlin.DslMap<kotlin.String, bilibili.dagw.component.avatar.v1.LayerTagConfig, TagsProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getTagsMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getTagsMap()
      )
    /**
     * ```
     * ```
     *
     * `map<string, .bilibili.dagw.component.avatar.v1.LayerTagConfig> tags = 1;`
     */
    @JvmName("putTags")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, bilibili.dagw.component.avatar.v1.LayerTagConfig, TagsProxy>
      .put(key: kotlin.String, value: bilibili.dagw.component.avatar.v1.LayerTagConfig) {
         _builder.putTags(key, value)
       }
    /**
     * ```
     * ```
     *
     * `map<string, .bilibili.dagw.component.avatar.v1.LayerTagConfig> tags = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setTags")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, bilibili.dagw.component.avatar.v1.LayerTagConfig, TagsProxy>
      .set(key: kotlin.String, value: bilibili.dagw.component.avatar.v1.LayerTagConfig) {
         put(key, value)
       }
    /**
     * ```
     * ```
     *
     * `map<string, .bilibili.dagw.component.avatar.v1.LayerTagConfig> tags = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeTags")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, bilibili.dagw.component.avatar.v1.LayerTagConfig, TagsProxy>
      .remove(key: kotlin.String) {
         _builder.removeTags(key)
       }
    /**
     * ```
     * ```
     *
     * `map<string, .bilibili.dagw.component.avatar.v1.LayerTagConfig> tags = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllTags")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, bilibili.dagw.component.avatar.v1.LayerTagConfig, TagsProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, bilibili.dagw.component.avatar.v1.LayerTagConfig>) {
         _builder.putAllTags(map)
       }
    /**
     * ```
     * ```
     *
     * `map<string, .bilibili.dagw.component.avatar.v1.LayerTagConfig> tags = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearTags")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, bilibili.dagw.component.avatar.v1.LayerTagConfig, TagsProxy>
      .clear() {
         _builder.clearTags()
       }

    /**
     * ```
     * ```
     *
     * `bool is_critical = 2;`
     */
    public var isCritical: kotlin.Boolean
      @JvmName("getIsCritical")
      get() = _builder.getIsCritical()
      @JvmName("setIsCritical")
      set(value) {
        _builder.setIsCritical(value)
      }
    /**
     * ```
     * ```
     *
     * `bool is_critical = 2;`
     */
    public fun clearIsCritical() {
      _builder.clearIsCritical()
    }

    /**
     * ```
     * ```
     *
     * `bool allow_over_paint = 3;`
     */
    public var allowOverPaint: kotlin.Boolean
      @JvmName("getAllowOverPaint")
      get() = _builder.getAllowOverPaint()
      @JvmName("setAllowOverPaint")
      set(value) {
        _builder.setAllowOverPaint(value)
      }
    /**
     * ```
     * ```
     *
     * `bool allow_over_paint = 3;`
     */
    public fun clearAllowOverPaint() {
      _builder.clearAllowOverPaint()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.MaskProperty layer_mask = 4;`
     */
    public var layerMask: bilibili.dagw.component.avatar.common.MaskProperty
      @JvmName("getLayerMask")
      get() = _builder.getLayerMask()
      @JvmName("setLayerMask")
      set(value) {
        _builder.setLayerMask(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.MaskProperty layer_mask = 4;`
     */
    public fun clearLayerMask() {
      _builder.clearLayerMask()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.MaskProperty layer_mask = 4;`
     * @return Whether the layerMask field is set.
     */
    public fun hasLayerMask(): kotlin.Boolean {
      return _builder.hasLayerMask()
    }
    public val LayerConfigKt.Dsl.layerMaskOrNull: bilibili.dagw.component.avatar.common.MaskProperty?
      get() = _builder.layerMaskOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dagw.component.avatar.v1.LayerConfig.copy(block: `bilibili.dagw.component.avatar.v1`.LayerConfigKt.Dsl.() -> kotlin.Unit): bilibili.dagw.component.avatar.v1.LayerConfig =
  `bilibili.dagw.component.avatar.v1`.LayerConfigKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.dagw.component.avatar.v1.LayerConfigOrBuilder.layerMaskOrNull: bilibili.dagw.component.avatar.common.MaskProperty?
  get() = if (hasLayerMask()) getLayerMask() else null

