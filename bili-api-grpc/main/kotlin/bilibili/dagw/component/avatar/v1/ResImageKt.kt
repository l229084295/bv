// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dagw/component/avatar/v1/avatar.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dagw.component.avatar.v1;

@kotlin.jvm.JvmName("-initializeresImage")
public inline fun resImage(block: bilibili.dagw.component.avatar.v1.ResImageKt.Dsl.() -> kotlin.Unit): bilibili.dagw.component.avatar.v1.ResImage =
  bilibili.dagw.component.avatar.v1.ResImageKt.Dsl._create(bilibili.dagw.component.avatar.v1.ResImage.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.dagw.component.avatar.v1.ResImage`
 */
public object ResImageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dagw.component.avatar.v1.ResImage.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dagw.component.avatar.v1.ResImage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dagw.component.avatar.v1.ResImage = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.ResourceSource image_src = 1;`
     */
    public var imageSrc: bilibili.dagw.component.avatar.common.ResourceSource
      @JvmName("getImageSrc")
      get() = _builder.getImageSrc()
      @JvmName("setImageSrc")
      set(value) {
        _builder.setImageSrc(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.ResourceSource image_src = 1;`
     */
    public fun clearImageSrc() {
      _builder.clearImageSrc()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.ResourceSource image_src = 1;`
     * @return Whether the imageSrc field is set.
     */
    public fun hasImageSrc(): kotlin.Boolean {
      return _builder.hasImageSrc()
    }
    public val ResImageKt.Dsl.imageSrcOrNull: bilibili.dagw.component.avatar.common.ResourceSource?
      get() = _builder.imageSrcOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dagw.component.avatar.v1.ResImage.copy(block: `bilibili.dagw.component.avatar.v1`.ResImageKt.Dsl.() -> kotlin.Unit): bilibili.dagw.component.avatar.v1.ResImage =
  `bilibili.dagw.component.avatar.v1`.ResImageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.dagw.component.avatar.v1.ResImageOrBuilder.imageSrcOrNull: bilibili.dagw.component.avatar.common.ResourceSource?
  get() = if (hasImageSrc()) getImageSrc() else null

