// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/dagw/component/avatar/v1/avatar.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.dagw.component.avatar.v1;

@kotlin.jvm.JvmName("-initializeresNativeDraw")
public inline fun resNativeDraw(block: bilibili.dagw.component.avatar.v1.ResNativeDrawKt.Dsl.() -> kotlin.Unit): bilibili.dagw.component.avatar.v1.ResNativeDraw =
  bilibili.dagw.component.avatar.v1.ResNativeDrawKt.Dsl._create(bilibili.dagw.component.avatar.v1.ResNativeDraw.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.dagw.component.avatar.v1.ResNativeDraw`
 */
public object ResNativeDrawKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.dagw.component.avatar.v1.ResNativeDraw.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.dagw.component.avatar.v1.ResNativeDraw.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.dagw.component.avatar.v1.ResNativeDraw = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.ResourceSource draw_src = 1;`
     */
    public var drawSrc: bilibili.dagw.component.avatar.common.ResourceSource
      @JvmName("getDrawSrc")
      get() = _builder.getDrawSrc()
      @JvmName("setDrawSrc")
      set(value) {
        _builder.setDrawSrc(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.ResourceSource draw_src = 1;`
     */
    public fun clearDrawSrc() {
      _builder.clearDrawSrc()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.dagw.component.avatar.common.ResourceSource draw_src = 1;`
     * @return Whether the drawSrc field is set.
     */
    public fun hasDrawSrc(): kotlin.Boolean {
      return _builder.hasDrawSrc()
    }
    public val ResNativeDrawKt.Dsl.drawSrcOrNull: bilibili.dagw.component.avatar.common.ResourceSource?
      get() = _builder.drawSrcOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.dagw.component.avatar.v1.ResNativeDraw.copy(block: `bilibili.dagw.component.avatar.v1`.ResNativeDrawKt.Dsl.() -> kotlin.Unit): bilibili.dagw.component.avatar.v1.ResNativeDraw =
  `bilibili.dagw.component.avatar.v1`.ResNativeDrawKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.dagw.component.avatar.v1.ResNativeDrawOrBuilder.drawSrcOrNull: bilibili.dagw.component.avatar.common.ResourceSource?
  get() = if (hasDrawSrc()) getDrawSrc() else null

