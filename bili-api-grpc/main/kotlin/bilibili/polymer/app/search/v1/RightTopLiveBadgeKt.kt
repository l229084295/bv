// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/polymer/app/search/v1/search.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.polymer.app.search.v1;

@kotlin.jvm.JvmName("-initializerightTopLiveBadge")
public inline fun rightTopLiveBadge(block: bilibili.polymer.app.search.v1.RightTopLiveBadgeKt.Dsl.() -> kotlin.Unit): bilibili.polymer.app.search.v1.RightTopLiveBadge =
  bilibili.polymer.app.search.v1.RightTopLiveBadgeKt.Dsl._create(bilibili.polymer.app.search.v1.RightTopLiveBadge.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.polymer.app.search.v1.RightTopLiveBadge`
 */
public object RightTopLiveBadgeKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.polymer.app.search.v1.RightTopLiveBadge.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.polymer.app.search.v1.RightTopLiveBadge.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.polymer.app.search.v1.RightTopLiveBadge = _builder.build()

    /**
     * ```
     * ```
     *
     * `int32 live_status = 1;`
     */
    public var liveStatus: kotlin.Int
      @JvmName("getLiveStatus")
      get() = _builder.getLiveStatus()
      @JvmName("setLiveStatus")
      set(value) {
        _builder.setLiveStatus(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 live_status = 1;`
     */
    public fun clearLiveStatus() {
      _builder.clearLiveStatus()
    }

    /**
     * ```
     * ```
     *
     * `.bilibili.polymer.app.search.v1.LiveBadgeResource in_live = 2;`
     */
    public var inLive: bilibili.polymer.app.search.v1.LiveBadgeResource
      @JvmName("getInLive")
      get() = _builder.getInLive()
      @JvmName("setInLive")
      set(value) {
        _builder.setInLive(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.polymer.app.search.v1.LiveBadgeResource in_live = 2;`
     */
    public fun clearInLive() {
      _builder.clearInLive()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.polymer.app.search.v1.LiveBadgeResource in_live = 2;`
     * @return Whether the inLive field is set.
     */
    public fun hasInLive(): kotlin.Boolean {
      return _builder.hasInLive()
    }
    public val RightTopLiveBadgeKt.Dsl.inLiveOrNull: bilibili.polymer.app.search.v1.LiveBadgeResource?
      get() = _builder.inLiveOrNull

    /**
     * ```
     * ```
     *
     * `string live_stats_desc = 3;`
     */
    public var liveStatsDesc: kotlin.String
      @JvmName("getLiveStatsDesc")
      get() = _builder.getLiveStatsDesc()
      @JvmName("setLiveStatsDesc")
      set(value) {
        _builder.setLiveStatsDesc(value)
      }
    /**
     * ```
     * ```
     *
     * `string live_stats_desc = 3;`
     */
    public fun clearLiveStatsDesc() {
      _builder.clearLiveStatsDesc()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.polymer.app.search.v1.RightTopLiveBadge.copy(block: `bilibili.polymer.app.search.v1`.RightTopLiveBadgeKt.Dsl.() -> kotlin.Unit): bilibili.polymer.app.search.v1.RightTopLiveBadge =
  `bilibili.polymer.app.search.v1`.RightTopLiveBadgeKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.polymer.app.search.v1.RightTopLiveBadgeOrBuilder.inLiveOrNull: bilibili.polymer.app.search.v1.LiveBadgeResource?
  get() = if (hasInLive()) getInLive() else null

