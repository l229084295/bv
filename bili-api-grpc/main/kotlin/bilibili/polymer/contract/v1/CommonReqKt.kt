// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/polymer/contract/v1/contract.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.polymer.contract.v1;

@kotlin.jvm.JvmName("-initializecommonReq")
public inline fun commonReq(block: bilibili.polymer.contract.v1.CommonReqKt.Dsl.() -> kotlin.Unit): bilibili.polymer.contract.v1.CommonReq =
  bilibili.polymer.contract.v1.CommonReqKt.Dsl._create(bilibili.polymer.contract.v1.CommonReq.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.polymer.contract.v1.CommonReq`
 */
public object CommonReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.polymer.contract.v1.CommonReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.polymer.contract.v1.CommonReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.polymer.contract.v1.CommonReq = _builder.build()

    /**
     * ```
     * ```
     *
     * `string platform = 1;`
     */
    public var platform: kotlin.String
      @JvmName("getPlatform")
      get() = _builder.getPlatform()
      @JvmName("setPlatform")
      set(value) {
        _builder.setPlatform(value)
      }
    /**
     * ```
     * ```
     *
     * `string platform = 1;`
     */
    public fun clearPlatform() {
      _builder.clearPlatform()
    }

    /**
     * ```
     * ```
     *
     * `int32 build = 2;`
     */
    public var build: kotlin.Int
      @JvmName("getBuild")
      get() = _builder.getBuild()
      @JvmName("setBuild")
      set(value) {
        _builder.setBuild(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 build = 2;`
     */
    public fun clearBuild() {
      _builder.clearBuild()
    }

    /**
     * ```
     * ```
     *
     * `string buvid = 3;`
     */
    public var buvid: kotlin.String
      @JvmName("getBuvid")
      get() = _builder.getBuvid()
      @JvmName("setBuvid")
      set(value) {
        _builder.setBuvid(value)
      }
    /**
     * ```
     * ```
     *
     * `string buvid = 3;`
     */
    public fun clearBuvid() {
      _builder.clearBuvid()
    }

    /**
     * ```
     * ```
     *
     * `string mobi_app = 4;`
     */
    public var mobiApp: kotlin.String
      @JvmName("getMobiApp")
      get() = _builder.getMobiApp()
      @JvmName("setMobiApp")
      set(value) {
        _builder.setMobiApp(value)
      }
    /**
     * ```
     * ```
     *
     * `string mobi_app = 4;`
     */
    public fun clearMobiApp() {
      _builder.clearMobiApp()
    }

    /**
     * ```
     * ```
     *
     * `string device = 5;`
     */
    public var device: kotlin.String
      @JvmName("getDevice")
      get() = _builder.getDevice()
      @JvmName("setDevice")
      set(value) {
        _builder.setDevice(value)
      }
    /**
     * ```
     * ```
     *
     * `string device = 5;`
     */
    public fun clearDevice() {
      _builder.clearDevice()
    }

    /**
     * ```
     * ```
     *
     * `string ip = 6;`
     */
    public var ip: kotlin.String
      @JvmName("getIp")
      get() = _builder.getIp()
      @JvmName("setIp")
      set(value) {
        _builder.setIp(value)
      }
    /**
     * ```
     * ```
     *
     * `string ip = 6;`
     */
    public fun clearIp() {
      _builder.clearIp()
    }

    /**
     * ```
     * ```
     *
     * `string spmid = 7;`
     */
    public var spmid: kotlin.String
      @JvmName("getSpmid")
      get() = _builder.getSpmid()
      @JvmName("setSpmid")
      set(value) {
        _builder.setSpmid(value)
      }
    /**
     * ```
     * ```
     *
     * `string spmid = 7;`
     */
    public fun clearSpmid() {
      _builder.clearSpmid()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.polymer.contract.v1.CommonReq.copy(block: `bilibili.polymer.contract.v1`.CommonReqKt.Dsl.() -> kotlin.Unit): bilibili.polymer.contract.v1.CommonReq =
  `bilibili.polymer.contract.v1`.CommonReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

