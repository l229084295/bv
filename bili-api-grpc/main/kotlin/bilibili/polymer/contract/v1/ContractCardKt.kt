// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/polymer/contract/v1/contract.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.polymer.contract.v1;

@kotlin.jvm.JvmName("-initializecontractCard")
public inline fun contractCard(block: bilibili.polymer.contract.v1.ContractCardKt.Dsl.() -> kotlin.Unit): bilibili.polymer.contract.v1.ContractCard =
  bilibili.polymer.contract.v1.ContractCardKt.Dsl._create(bilibili.polymer.contract.v1.ContractCard.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.polymer.contract.v1.ContractCard`
 */
public object ContractCardKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.polymer.contract.v1.ContractCard.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.polymer.contract.v1.ContractCard.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.polymer.contract.v1.ContractCard = _builder.build()

    /**
     * ```
     * ```
     *
     * `string title = 1;`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * ```
     * ```
     *
     * `string title = 1;`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * ```
     *
     * `string sub_title = 2;`
     */
    public var subTitle: kotlin.String
      @JvmName("getSubTitle")
      get() = _builder.getSubTitle()
      @JvmName("setSubTitle")
      set(value) {
        _builder.setSubTitle(value)
      }
    /**
     * ```
     * ```
     *
     * `string sub_title = 2;`
     */
    public fun clearSubTitle() {
      _builder.clearSubTitle()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.polymer.contract.v1.ContractCard.copy(block: `bilibili.polymer.contract.v1`.ContractCardKt.Dsl.() -> kotlin.Unit): bilibili.polymer.contract.v1.ContractCard =
  `bilibili.polymer.contract.v1`.ContractCardKt.Dsl._create(this.toBuilder()).apply { block() }._build()

