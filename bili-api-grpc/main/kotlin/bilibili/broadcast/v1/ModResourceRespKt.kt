// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/broadcast/v1/mod.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.broadcast.v1;

@kotlin.jvm.JvmName("-initializemodResourceResp")
public inline fun modResourceResp(block: bilibili.broadcast.v1.ModResourceRespKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.v1.ModResourceResp =
  bilibili.broadcast.v1.ModResourceRespKt.Dsl._create(bilibili.broadcast.v1.ModResourceResp.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.broadcast.v1.ModResourceResp`
 */
public object ModResourceRespKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.broadcast.v1.ModResourceResp.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.broadcast.v1.ModResourceResp.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.broadcast.v1.ModResourceResp = _builder.build()

    /**
     * ```
     * ```
     *
     * `int32 atcion = 1;`
     */
    public var atcion: kotlin.Int
      @JvmName("getAtcion")
      get() = _builder.getAtcion()
      @JvmName("setAtcion")
      set(value) {
        _builder.setAtcion(value)
      }
    /**
     * ```
     * ```
     *
     * `int32 atcion = 1;`
     */
    public fun clearAtcion() {
      _builder.clearAtcion()
    }

    /**
     * ```
     * ```
     *
     * `string app_key = 2;`
     */
    public var appKey: kotlin.String
      @JvmName("getAppKey")
      get() = _builder.getAppKey()
      @JvmName("setAppKey")
      set(value) {
        _builder.setAppKey(value)
      }
    /**
     * ```
     * ```
     *
     * `string app_key = 2;`
     */
    public fun clearAppKey() {
      _builder.clearAppKey()
    }

    /**
     * ```
     * ```
     *
     * `string pool_name = 3;`
     */
    public var poolName: kotlin.String
      @JvmName("getPoolName")
      get() = _builder.getPoolName()
      @JvmName("setPoolName")
      set(value) {
        _builder.setPoolName(value)
      }
    /**
     * ```
     * ```
     *
     * `string pool_name = 3;`
     */
    public fun clearPoolName() {
      _builder.clearPoolName()
    }

    /**
     * ```
     * ```
     *
     * `string module_name = 4;`
     */
    public var moduleName: kotlin.String
      @JvmName("getModuleName")
      get() = _builder.getModuleName()
      @JvmName("setModuleName")
      set(value) {
        _builder.setModuleName(value)
      }
    /**
     * ```
     * ```
     *
     * `string module_name = 4;`
     */
    public fun clearModuleName() {
      _builder.clearModuleName()
    }

    /**
     * ```
     * ```
     *
     * `int64 module_version = 5;`
     */
    public var moduleVersion: kotlin.Long
      @JvmName("getModuleVersion")
      get() = _builder.getModuleVersion()
      @JvmName("setModuleVersion")
      set(value) {
        _builder.setModuleVersion(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 module_version = 5;`
     */
    public fun clearModuleVersion() {
      _builder.clearModuleVersion()
    }

    /**
     * ```
     * ```
     *
     * `int64 list_version = 6;`
     */
    public var listVersion: kotlin.Long
      @JvmName("getListVersion")
      get() = _builder.getListVersion()
      @JvmName("setListVersion")
      set(value) {
        _builder.setListVersion(value)
      }
    /**
     * ```
     * ```
     *
     * `int64 list_version = 6;`
     */
    public fun clearListVersion() {
      _builder.clearListVersion()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.broadcast.v1.ModResourceResp.copy(block: `bilibili.broadcast.v1`.ModResourceRespKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.v1.ModResourceResp =
  `bilibili.broadcast.v1`.ModResourceRespKt.Dsl._create(this.toBuilder()).apply { block() }._build()

