// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/broadcast/v1/room.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.broadcast.v1;

@kotlin.jvm.JvmName("-initializeroomErrorEvent")
public inline fun roomErrorEvent(block: bilibili.broadcast.v1.RoomErrorEventKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.v1.RoomErrorEvent =
  bilibili.broadcast.v1.RoomErrorEventKt.Dsl._create(bilibili.broadcast.v1.RoomErrorEvent.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.broadcast.v1.RoomErrorEvent`
 */
public object RoomErrorEventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.broadcast.v1.RoomErrorEvent.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.broadcast.v1.RoomErrorEvent.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.broadcast.v1.RoomErrorEvent = _builder.build()

    /**
     * ```
     * ```
     *
     * `.bilibili.rpc.Status status = 1;`
     */
    public var status: bilibili.rpc.Status
      @JvmName("getStatus")
      get() = _builder.getStatus()
      @JvmName("setStatus")
      set(value) {
        _builder.setStatus(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.rpc.Status status = 1;`
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.rpc.Status status = 1;`
     * @return Whether the status field is set.
     */
    public fun hasStatus(): kotlin.Boolean {
      return _builder.hasStatus()
    }
    public val RoomErrorEventKt.Dsl.statusOrNull: bilibili.rpc.Status?
      get() = _builder.statusOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.broadcast.v1.RoomErrorEvent.copy(block: `bilibili.broadcast.v1`.RoomErrorEventKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.v1.RoomErrorEvent =
  `bilibili.broadcast.v1`.RoomErrorEventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.broadcast.v1.RoomErrorEventOrBuilder.statusOrNull: bilibili.rpc.Status?
  get() = if (hasStatus()) getStatus() else null

