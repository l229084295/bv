// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/broadcast/v1/laser.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.broadcast.v1;

@kotlin.jvm.JvmName("-initializelaserLogUploadResp")
public inline fun laserLogUploadResp(block: bilibili.broadcast.v1.LaserLogUploadRespKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.v1.LaserLogUploadResp =
  bilibili.broadcast.v1.LaserLogUploadRespKt.Dsl._create(bilibili.broadcast.v1.LaserLogUploadResp.newBuilder()).apply { block() }._build()
/**
 * ```
 * 服务端下发日志上报事件
 * ```
 *
 * Protobuf type `bilibili.broadcast.v1.LaserLogUploadResp`
 */
public object LaserLogUploadRespKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.broadcast.v1.LaserLogUploadResp.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.broadcast.v1.LaserLogUploadResp.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.broadcast.v1.LaserLogUploadResp = _builder.build()

    /**
     * ```
     * 任务id
     * ```
     *
     * `int64 taskid = 1;`
     */
    public var taskid: kotlin.Long
      @JvmName("getTaskid")
      get() = _builder.getTaskid()
      @JvmName("setTaskid")
      set(value) {
        _builder.setTaskid(value)
      }
    /**
     * ```
     * 任务id
     * ```
     *
     * `int64 taskid = 1;`
     */
    public fun clearTaskid() {
      _builder.clearTaskid()
    }

    /**
     * ```
     * 下发时间
     * ```
     *
     * `string date = 2;`
     */
    public var date: kotlin.String
      @JvmName("getDate")
      get() = _builder.getDate()
      @JvmName("setDate")
      set(value) {
        _builder.setDate(value)
      }
    /**
     * ```
     * 下发时间
     * ```
     *
     * `string date = 2;`
     */
    public fun clearDate() {
      _builder.clearDate()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.broadcast.v1.LaserLogUploadResp.copy(block: `bilibili.broadcast.v1`.LaserLogUploadRespKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.v1.LaserLogUploadResp =
  `bilibili.broadcast.v1`.LaserLogUploadRespKt.Dsl._create(this.toBuilder()).apply { block() }._build()

