// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/broadcast/message/ogv/live.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.broadcast.message.ogv;

@kotlin.jvm.JvmName("-initializeliveUpdateEvent")
public inline fun liveUpdateEvent(block: bilibili.broadcast.message.ogv.LiveUpdateEventKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.message.ogv.LiveUpdateEvent =
  bilibili.broadcast.message.ogv.LiveUpdateEventKt.Dsl._create(bilibili.broadcast.message.ogv.LiveUpdateEvent.newBuilder()).apply { block() }._build()
/**
 * ```
 * 变更通知
 * ```
 *
 * Protobuf type `bilibili.broadcast.message.ogv.LiveUpdateEvent`
 */
public object LiveUpdateEventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.broadcast.message.ogv.LiveUpdateEvent.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.broadcast.message.ogv.LiveUpdateEvent.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.broadcast.message.ogv.LiveUpdateEvent = _builder.build()

    /**
     * ```
     * 直播后状态
     * 1:下线 2:转点播
     * ```
     *
     * `int32 after_premiere_type = 1;`
     */
    public var afterPremiereType: kotlin.Int
      @JvmName("getAfterPremiereType")
      get() = _builder.getAfterPremiereType()
      @JvmName("setAfterPremiereType")
      set(value) {
        _builder.setAfterPremiereType(value)
      }
    /**
     * ```
     * 直播后状态
     * 1:下线 2:转点播
     * ```
     *
     * `int32 after_premiere_type = 1;`
     */
    public fun clearAfterPremiereType() {
      _builder.clearAfterPremiereType()
    }

    /**
     * ```
     * 直播开始绝对时间 单位ms
     * ```
     *
     * `int64 start_time = 2;`
     */
    public var startTime: kotlin.Long
      @JvmName("getStartTime")
      get() = _builder.getStartTime()
      @JvmName("setStartTime")
      set(value) {
        _builder.setStartTime(value)
      }
    /**
     * ```
     * 直播开始绝对时间 单位ms
     * ```
     *
     * `int64 start_time = 2;`
     */
    public fun clearStartTime() {
      _builder.clearStartTime()
    }

    /**
     * ```
     * id
     * ```
     *
     * `string id = 3;`
     */
    public var id: kotlin.String
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * ```
     * id
     * ```
     *
     * `string id = 3;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * ```
     * 服务端播放进度，未打散，负数表示距离开播时间，正数表示已开播时间，单位：毫秒
     * 用户实际播放进度：progress - delay_time
     * ```
     *
     * `int64 progress = 4;`
     */
    public var progress: kotlin.Long
      @JvmName("getProgress")
      get() = _builder.getProgress()
      @JvmName("setProgress")
      set(value) {
        _builder.setProgress(value)
      }
    /**
     * ```
     * 服务端播放进度，未打散，负数表示距离开播时间，正数表示已开播时间，单位：毫秒
     * 用户实际播放进度：progress - delay_time
     * ```
     *
     * `int64 progress = 4;`
     */
    public fun clearProgress() {
      _builder.clearProgress()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.broadcast.message.ogv.LiveUpdateEvent.copy(block: `bilibili.broadcast.message.ogv`.LiveUpdateEventKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.message.ogv.LiveUpdateEvent =
  `bilibili.broadcast.message.ogv`.LiveUpdateEventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

