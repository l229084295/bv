// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/broadcast/message/ogv/live.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.broadcast.message.ogv;

@kotlin.jvm.JvmName("-initializeliveOnlineEvent")
public inline fun liveOnlineEvent(block: bilibili.broadcast.message.ogv.LiveOnlineEventKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.message.ogv.LiveOnlineEvent =
  bilibili.broadcast.message.ogv.LiveOnlineEventKt.Dsl._create(bilibili.broadcast.message.ogv.LiveOnlineEvent.newBuilder()).apply { block() }._build()
/**
 * ```
 * 在线人数事件
 * ```
 *
 * Protobuf type `bilibili.broadcast.message.ogv.LiveOnlineEvent`
 */
public object LiveOnlineEventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.broadcast.message.ogv.LiveOnlineEvent.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.broadcast.message.ogv.LiveOnlineEvent.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.broadcast.message.ogv.LiveOnlineEvent = _builder.build()

    /**
     * ```
     * 在线人数
     * ```
     *
     * `int64 online = 1;`
     */
    public var online: kotlin.Long
      @JvmName("getOnline")
      get() = _builder.getOnline()
      @JvmName("setOnline")
      set(value) {
        _builder.setOnline(value)
      }
    /**
     * ```
     * 在线人数
     * ```
     *
     * `int64 online = 1;`
     */
    public fun clearOnline() {
      _builder.clearOnline()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.broadcast.message.ogv.LiveOnlineEvent.copy(block: `bilibili.broadcast.message.ogv`.LiveOnlineEventKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.message.ogv.LiveOnlineEvent =
  `bilibili.broadcast.message.ogv`.LiveOnlineEventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

