// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/broadcast/message/ogv/freya.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.broadcast.message.ogv;

@kotlin.jvm.JvmName("-initializevipProto")
public inline fun vipProto(block: bilibili.broadcast.message.ogv.VipProtoKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.message.ogv.VipProto =
  bilibili.broadcast.message.ogv.VipProtoKt.Dsl._create(bilibili.broadcast.message.ogv.VipProto.newBuilder()).apply { block() }._build()
/**
 * ```
 * 大会员信息
 * ```
 *
 * Protobuf type `bilibili.broadcast.message.ogv.VipProto`
 */
public object VipProtoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.broadcast.message.ogv.VipProto.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.broadcast.message.ogv.VipProto.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.broadcast.message.ogv.VipProto = _builder.build()

    /**
     * `int32 type = 1;`
     */
    public var type: kotlin.Int
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * `int32 type = 1;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * `int32 status = 2;`
     */
    public var status: kotlin.Int
      @JvmName("getStatus")
      get() = _builder.getStatus()
      @JvmName("setStatus")
      set(value) {
        _builder.setStatus(value)
      }
    /**
     * `int32 status = 2;`
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }

    /**
     * `int64 due_date = 3;`
     */
    public var dueDate: kotlin.Long
      @JvmName("getDueDate")
      get() = _builder.getDueDate()
      @JvmName("setDueDate")
      set(value) {
        _builder.setDueDate(value)
      }
    /**
     * `int64 due_date = 3;`
     */
    public fun clearDueDate() {
      _builder.clearDueDate()
    }

    /**
     * `int32 vip_pay_type = 4;`
     */
    public var vipPayType: kotlin.Int
      @JvmName("getVipPayType")
      get() = _builder.getVipPayType()
      @JvmName("setVipPayType")
      set(value) {
        _builder.setVipPayType(value)
      }
    /**
     * `int32 vip_pay_type = 4;`
     */
    public fun clearVipPayType() {
      _builder.clearVipPayType()
    }

    /**
     * `int32 theme_type = 5;`
     */
    public var themeType: kotlin.Int
      @JvmName("getThemeType")
      get() = _builder.getThemeType()
      @JvmName("setThemeType")
      set(value) {
        _builder.setThemeType(value)
      }
    /**
     * `int32 theme_type = 5;`
     */
    public fun clearThemeType() {
      _builder.clearThemeType()
    }

    /**
     * ```
     * 大会员角标
     * 0:无角标 1:粉色大会员角标 2:绿色小会员角标
     * ```
     *
     * `int32 avatar_subscript = 6;`
     */
    public var avatarSubscript: kotlin.Int
      @JvmName("getAvatarSubscript")
      get() = _builder.getAvatarSubscript()
      @JvmName("setAvatarSubscript")
      set(value) {
        _builder.setAvatarSubscript(value)
      }
    /**
     * ```
     * 大会员角标
     * 0:无角标 1:粉色大会员角标 2:绿色小会员角标
     * ```
     *
     * `int32 avatar_subscript = 6;`
     */
    public fun clearAvatarSubscript() {
      _builder.clearAvatarSubscript()
    }

    /**
     * ```
     * 昵称色值，可能为空，色值示例：#FFFB9E60
     * ```
     *
     * `string nickname_color = 7;`
     */
    public var nicknameColor: kotlin.String
      @JvmName("getNicknameColor")
      get() = _builder.getNicknameColor()
      @JvmName("setNicknameColor")
      set(value) {
        _builder.setNicknameColor(value)
      }
    /**
     * ```
     * 昵称色值，可能为空，色值示例：#FFFB9E60
     * ```
     *
     * `string nickname_color = 7;`
     */
    public fun clearNicknameColor() {
      _builder.clearNicknameColor()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.broadcast.message.ogv.VipProto.copy(block: `bilibili.broadcast.message.ogv`.VipProtoKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.message.ogv.VipProto =
  `bilibili.broadcast.message.ogv`.VipProtoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

