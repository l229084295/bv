// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/broadcast/message/main/resource.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.broadcast.message.main;

@kotlin.jvm.JvmName("-initializetopOnline")
public inline fun topOnline(block: bilibili.broadcast.message.main.TopOnlineKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.message.main.TopOnline =
  bilibili.broadcast.message.main.TopOnlineKt.Dsl._create(bilibili.broadcast.message.main.TopOnline.newBuilder()).apply { block() }._build()
/**
 * ```
 * 当前生效的资源
 * ```
 *
 * Protobuf type `bilibili.broadcast.message.main.TopOnline`
 */
public object TopOnlineKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.broadcast.message.main.TopOnline.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.broadcast.message.main.TopOnline.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.broadcast.message.main.TopOnline = _builder.build()

    /**
     * ```
     * 活动类型
     * 1:七日活动 2:后台配置
     * ```
     *
     * `int32 type = 1;`
     */
    public var type: kotlin.Int
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * ```
     * 活动类型
     * 1:七日活动 2:后台配置
     * ```
     *
     * `int32 type = 1;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * ```
     * 图标
     * ```
     *
     * `string icon = 2;`
     */
    public var icon: kotlin.String
      @JvmName("getIcon")
      get() = _builder.getIcon()
      @JvmName("setIcon")
      set(value) {
        _builder.setIcon(value)
      }
    /**
     * ```
     * 图标
     * ```
     *
     * `string icon = 2;`
     */
    public fun clearIcon() {
      _builder.clearIcon()
    }

    /**
     * ```
     * 跳转链接
     * ```
     *
     * `string uri = 3;`
     */
    public var uri: kotlin.String
      @JvmName("getUri")
      get() = _builder.getUri()
      @JvmName("setUri")
      set(value) {
        _builder.setUri(value)
      }
    /**
     * ```
     * 跳转链接
     * ```
     *
     * `string uri = 3;`
     */
    public fun clearUri() {
      _builder.clearUri()
    }

    /**
     * ```
     * 资源状态标识(后台配置)
     * ```
     *
     * `string unique_id = 4;`
     */
    public var uniqueId: kotlin.String
      @JvmName("getUniqueId")
      get() = _builder.getUniqueId()
      @JvmName("setUniqueId")
      set(value) {
        _builder.setUniqueId(value)
      }
    /**
     * ```
     * 资源状态标识(后台配置)
     * ```
     *
     * `string unique_id = 4;`
     */
    public fun clearUniqueId() {
      _builder.clearUniqueId()
    }

    /**
     * ```
     * 动画资源
     * ```
     *
     * `.bilibili.broadcast.message.main.Animate animate = 5;`
     */
    public var animate: bilibili.broadcast.message.main.Animate
      @JvmName("getAnimate")
      get() = _builder.getAnimate()
      @JvmName("setAnimate")
      set(value) {
        _builder.setAnimate(value)
      }
    /**
     * ```
     * 动画资源
     * ```
     *
     * `.bilibili.broadcast.message.main.Animate animate = 5;`
     */
    public fun clearAnimate() {
      _builder.clearAnimate()
    }
    /**
     * ```
     * 动画资源
     * ```
     *
     * `.bilibili.broadcast.message.main.Animate animate = 5;`
     * @return Whether the animate field is set.
     */
    public fun hasAnimate(): kotlin.Boolean {
      return _builder.hasAnimate()
    }
    public val TopOnlineKt.Dsl.animateOrNull: bilibili.broadcast.message.main.Animate?
      get() = _builder.animateOrNull

    /**
     * ```
     * 红点
     * ```
     *
     * `.bilibili.broadcast.message.main.RedDot red_dot = 6;`
     */
    public var redDot: bilibili.broadcast.message.main.RedDot
      @JvmName("getRedDot")
      get() = _builder.getRedDot()
      @JvmName("setRedDot")
      set(value) {
        _builder.setRedDot(value)
      }
    /**
     * ```
     * 红点
     * ```
     *
     * `.bilibili.broadcast.message.main.RedDot red_dot = 6;`
     */
    public fun clearRedDot() {
      _builder.clearRedDot()
    }
    /**
     * ```
     * 红点
     * ```
     *
     * `.bilibili.broadcast.message.main.RedDot red_dot = 6;`
     * @return Whether the redDot field is set.
     */
    public fun hasRedDot(): kotlin.Boolean {
      return _builder.hasRedDot()
    }
    public val TopOnlineKt.Dsl.redDotOrNull: bilibili.broadcast.message.main.RedDot?
      get() = _builder.redDotOrNull

    /**
     * ```
     * 活动名称
     * ```
     *
     * `string name = 7;`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * ```
     * 活动名称
     * ```
     *
     * `string name = 7;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * ```
     * 轮询间隔 单位秒
     * ```
     *
     * `int64 interval = 8;`
     */
    public var interval: kotlin.Long
      @JvmName("getInterval")
      get() = _builder.getInterval()
      @JvmName("setInterval")
      set(value) {
        _builder.setInterval(value)
      }
    /**
     * ```
     * 轮询间隔 单位秒
     * ```
     *
     * `int64 interval = 8;`
     */
    public fun clearInterval() {
      _builder.clearInterval()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.broadcast.message.main.TopOnline.copy(block: `bilibili.broadcast.message.main`.TopOnlineKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.message.main.TopOnline =
  `bilibili.broadcast.message.main`.TopOnlineKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.broadcast.message.main.TopOnlineOrBuilder.animateOrNull: bilibili.broadcast.message.main.Animate?
  get() = if (hasAnimate()) getAnimate() else null

public val bilibili.broadcast.message.main.TopOnlineOrBuilder.redDotOrNull: bilibili.broadcast.message.main.RedDot?
  get() = if (hasRedDot()) getRedDot() else null

