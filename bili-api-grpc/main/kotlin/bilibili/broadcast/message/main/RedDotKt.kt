// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/broadcast/message/main/resource.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.broadcast.message.main;

@kotlin.jvm.JvmName("-initializeredDot")
public inline fun redDot(block: bilibili.broadcast.message.main.RedDotKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.message.main.RedDot =
  bilibili.broadcast.message.main.RedDotKt.Dsl._create(bilibili.broadcast.message.main.RedDot.newBuilder()).apply { block() }._build()
/**
 * ```
 * 红点
 * ```
 *
 * Protobuf type `bilibili.broadcast.message.main.RedDot`
 */
public object RedDotKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.broadcast.message.main.RedDot.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.broadcast.message.main.RedDot.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.broadcast.message.main.RedDot = _builder.build()

    /**
     * ```
     * 红点类型
     * 1:纯红点 2:数字红点
     * ```
     *
     * `int32 type = 1;`
     */
    public var type: kotlin.Int
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * ```
     * 红点类型
     * 1:纯红点 2:数字红点
     * ```
     *
     * `int32 type = 1;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * ```
     * 如果是数字红点 显示的数字
     * ```
     *
     * `int32 number = 2;`
     */
    public var number: kotlin.Int
      @JvmName("getNumber")
      get() = _builder.getNumber()
      @JvmName("setNumber")
      set(value) {
        _builder.setNumber(value)
      }
    /**
     * ```
     * 如果是数字红点 显示的数字
     * ```
     *
     * `int32 number = 2;`
     */
    public fun clearNumber() {
      _builder.clearNumber()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.broadcast.message.main.RedDot.copy(block: `bilibili.broadcast.message.main`.RedDotKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.message.main.RedDot =
  `bilibili.broadcast.message.main`.RedDotKt.Dsl._create(this.toBuilder()).apply { block() }._build()

