// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/broadcast/message/im/notify.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.broadcast.message.im;

@kotlin.jvm.JvmName("-initializereqServerNotify")
public inline fun reqServerNotify(block: bilibili.broadcast.message.im.ReqServerNotifyKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.message.im.ReqServerNotify =
  bilibili.broadcast.message.im.ReqServerNotifyKt.Dsl._create(bilibili.broadcast.message.im.ReqServerNotify.newBuilder()).apply { block() }._build()
/**
 * ```
 * ```
 *
 * Protobuf type `bilibili.broadcast.message.im.ReqServerNotify`
 */
public object ReqServerNotifyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.broadcast.message.im.ReqServerNotify.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.broadcast.message.im.ReqServerNotify.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.broadcast.message.im.ReqServerNotify = _builder.build()

    /**
     * ```
     * 最新序列号
     * ```
     *
     * `uint64 lastest_seqno = 1;`
     */
    public var lastestSeqno: kotlin.Long
      @JvmName("getLastestSeqno")
      get() = _builder.getLastestSeqno()
      @JvmName("setLastestSeqno")
      set(value) {
        _builder.setLastestSeqno(value)
      }
    /**
     * ```
     * 最新序列号
     * ```
     *
     * `uint64 lastest_seqno = 1;`
     */
    public fun clearLastestSeqno() {
      _builder.clearLastestSeqno()
    }

    /**
     * ```
     * 即时消息 该类消息主要用于系统通知 当客户端sync msg时 不会sync到此类消息
     * ```
     *
     * `.bilibili.broadcast.message.im.Msg instant_msg = 2;`
     */
    public var instantMsg: bilibili.broadcast.message.im.Msg
      @JvmName("getInstantMsg")
      get() = _builder.getInstantMsg()
      @JvmName("setInstantMsg")
      set(value) {
        _builder.setInstantMsg(value)
      }
    /**
     * ```
     * 即时消息 该类消息主要用于系统通知 当客户端sync msg时 不会sync到此类消息
     * ```
     *
     * `.bilibili.broadcast.message.im.Msg instant_msg = 2;`
     */
    public fun clearInstantMsg() {
      _builder.clearInstantMsg()
    }
    /**
     * ```
     * 即时消息 该类消息主要用于系统通知 当客户端sync msg时 不会sync到此类消息
     * ```
     *
     * `.bilibili.broadcast.message.im.Msg instant_msg = 2;`
     * @return Whether the instantMsg field is set.
     */
    public fun hasInstantMsg(): kotlin.Boolean {
      return _builder.hasInstantMsg()
    }
    public val ReqServerNotifyKt.Dsl.instantMsgOrNull: bilibili.broadcast.message.im.Msg?
      get() = _builder.instantMsgOrNull

    /**
     * ```
     * ```
     *
     * `.bilibili.broadcast.message.im.NotifyInfo notify_info = 3;`
     */
    public var notifyInfo: bilibili.broadcast.message.im.NotifyInfo
      @JvmName("getNotifyInfo")
      get() = _builder.getNotifyInfo()
      @JvmName("setNotifyInfo")
      set(value) {
        _builder.setNotifyInfo(value)
      }
    /**
     * ```
     * ```
     *
     * `.bilibili.broadcast.message.im.NotifyInfo notify_info = 3;`
     */
    public fun clearNotifyInfo() {
      _builder.clearNotifyInfo()
    }
    /**
     * ```
     * ```
     *
     * `.bilibili.broadcast.message.im.NotifyInfo notify_info = 3;`
     * @return Whether the notifyInfo field is set.
     */
    public fun hasNotifyInfo(): kotlin.Boolean {
      return _builder.hasNotifyInfo()
    }
    public val ReqServerNotifyKt.Dsl.notifyInfoOrNull: bilibili.broadcast.message.im.NotifyInfo?
      get() = _builder.notifyInfoOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.broadcast.message.im.ReqServerNotify.copy(block: `bilibili.broadcast.message.im`.ReqServerNotifyKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.message.im.ReqServerNotify =
  `bilibili.broadcast.message.im`.ReqServerNotifyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val bilibili.broadcast.message.im.ReqServerNotifyOrBuilder.instantMsgOrNull: bilibili.broadcast.message.im.Msg?
  get() = if (hasInstantMsg()) getInstantMsg() else null

public val bilibili.broadcast.message.im.ReqServerNotifyOrBuilder.notifyInfoOrNull: bilibili.broadcast.message.im.NotifyInfo?
  get() = if (hasNotifyInfo()) getNotifyInfo() else null

