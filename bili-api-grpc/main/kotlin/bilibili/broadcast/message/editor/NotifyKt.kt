// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bilibili/broadcast/message/editor/notify.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package bilibili.broadcast.message.editor;

@kotlin.jvm.JvmName("-initializenotify")
public inline fun notify(block: bilibili.broadcast.message.editor.NotifyKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.message.editor.Notify =
  bilibili.broadcast.message.editor.NotifyKt.Dsl._create(bilibili.broadcast.message.editor.Notify.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `bilibili.broadcast.message.editor.Notify`
 */
public object NotifyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: bilibili.broadcast.message.editor.Notify.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: bilibili.broadcast.message.editor.Notify.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): bilibili.broadcast.message.editor.Notify = _builder.build()

    /**
     * ```
     * 消息唯一标示
     * ```
     *
     * `int64 msg_id = 1;`
     */
    public var msgId: kotlin.Long
      @JvmName("getMsgId")
      get() = _builder.getMsgId()
      @JvmName("setMsgId")
      set(value) {
        _builder.setMsgId(value)
      }
    /**
     * ```
     * 消息唯一标示
     * ```
     *
     * `int64 msg_id = 1;`
     */
    public fun clearMsgId() {
      _builder.clearMsgId()
    }

    /**
     * ```
     * 消息类型
     * ```
     *
     * `int32 msg_type = 2;`
     */
    public var msgType: kotlin.Int
      @JvmName("getMsgType")
      get() = _builder.getMsgType()
      @JvmName("setMsgType")
      set(value) {
        _builder.setMsgType(value)
      }
    /**
     * ```
     * 消息类型
     * ```
     *
     * `int32 msg_type = 2;`
     */
    public fun clearMsgType() {
      _builder.clearMsgType()
    }

    /**
     * ```
     * 接收方uid
     * ```
     *
     * `int64 receiver_uid = 3;`
     */
    public var receiverUid: kotlin.Long
      @JvmName("getReceiverUid")
      get() = _builder.getReceiverUid()
      @JvmName("setReceiverUid")
      set(value) {
        _builder.setReceiverUid(value)
      }
    /**
     * ```
     * 接收方uid
     * ```
     *
     * `int64 receiver_uid = 3;`
     */
    public fun clearReceiverUid() {
      _builder.clearReceiverUid()
    }

    /**
     * ```
     * 接收方类型 
     * ```
     *
     * `int32 receiver_type = 4;`
     */
    public var receiverType: kotlin.Int
      @JvmName("getReceiverType")
      get() = _builder.getReceiverType()
      @JvmName("setReceiverType")
      set(value) {
        _builder.setReceiverType(value)
      }
    /**
     * ```
     * 接收方类型 
     * ```
     *
     * `int32 receiver_type = 4;`
     */
    public fun clearReceiverType() {
      _builder.clearReceiverType()
    }

    /**
     * ```
     * 故事的版本
     * ```
     *
     * `int64 story_version = 5;`
     */
    public var storyVersion: kotlin.Long
      @JvmName("getStoryVersion")
      get() = _builder.getStoryVersion()
      @JvmName("setStoryVersion")
      set(value) {
        _builder.setStoryVersion(value)
      }
    /**
     * ```
     * 故事的版本
     * ```
     *
     * `int64 story_version = 5;`
     */
    public fun clearStoryVersion() {
      _builder.clearStoryVersion()
    }

    /**
     * ```
     * 操作结果的hash值
     * ```
     *
     * `int64 op_hash = 6;`
     */
    public var opHash: kotlin.Long
      @JvmName("getOpHash")
      get() = _builder.getOpHash()
      @JvmName("setOpHash")
      set(value) {
        _builder.setOpHash(value)
      }
    /**
     * ```
     * 操作结果的hash值
     * ```
     *
     * `int64 op_hash = 6;`
     */
    public fun clearOpHash() {
      _builder.clearOpHash()
    }

    /**
     * ```
     * 操作产生用户的uid
     * ```
     *
     * `int64 op_sender = 7;`
     */
    public var opSender: kotlin.Long
      @JvmName("getOpSender")
      get() = _builder.getOpSender()
      @JvmName("setOpSender")
      set(value) {
        _builder.setOpSender(value)
      }
    /**
     * ```
     * 操作产生用户的uid
     * ```
     *
     * `int64 op_sender = 7;`
     */
    public fun clearOpSender() {
      _builder.clearOpSender()
    }

    /**
     * ```
     * patch内容
     * ```
     *
     * `string op_content = 8;`
     */
    public var opContent: kotlin.String
      @JvmName("getOpContent")
      get() = _builder.getOpContent()
      @JvmName("setOpContent")
      set(value) {
        _builder.setOpContent(value)
      }
    /**
     * ```
     * patch内容
     * ```
     *
     * `string op_content = 8;`
     */
    public fun clearOpContent() {
      _builder.clearOpContent()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun bilibili.broadcast.message.editor.Notify.copy(block: `bilibili.broadcast.message.editor`.NotifyKt.Dsl.() -> kotlin.Unit): bilibili.broadcast.message.editor.Notify =
  `bilibili.broadcast.message.editor`.NotifyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

