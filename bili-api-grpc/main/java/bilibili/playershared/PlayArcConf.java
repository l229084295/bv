// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bilibili/playershared/playershared.proto

// Protobuf Java Version: 4.26.1
package bilibili.playershared;

/**
 * <pre>
 * 播放页信息-响应: PlayArcConf
 * </pre>
 *
 * Protobuf type {@code bilibili.playershared.PlayArcConf}
 */
public final class PlayArcConf extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:bilibili.playershared.PlayArcConf)
    PlayArcConfOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      PlayArcConf.class.getName());
  }
  // Use PlayArcConf.newBuilder() to construct.
  private PlayArcConf(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private PlayArcConf() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return bilibili.playershared.Playershared.internal_static_bilibili_playershared_PlayArcConf_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 1:
        return internalGetArcConfs();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return bilibili.playershared.Playershared.internal_static_bilibili_playershared_PlayArcConf_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            bilibili.playershared.PlayArcConf.class, bilibili.playershared.PlayArcConf.Builder.class);
  }

  public static final int ARC_CONFS_FIELD_NUMBER = 1;
  private static final class ArcConfsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.Integer, bilibili.playershared.ArcConf> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.Integer, bilibili.playershared.ArcConf>newDefaultInstance(
                bilibili.playershared.Playershared.internal_static_bilibili_playershared_PlayArcConf_ArcConfsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                bilibili.playershared.ArcConf.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.Integer, bilibili.playershared.ArcConf> arcConfs_;
  private com.google.protobuf.MapField<java.lang.Integer, bilibili.playershared.ArcConf>
  internalGetArcConfs() {
    if (arcConfs_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ArcConfsDefaultEntryHolder.defaultEntry);
    }
    return arcConfs_;
  }
  public int getArcConfsCount() {
    return internalGetArcConfs().getMap().size();
  }
  /**
   * <code>map&lt;int32, .bilibili.playershared.ArcConf&gt; arc_confs = 1;</code>
   */
  @java.lang.Override
  public boolean containsArcConfs(
      int key) {

    return internalGetArcConfs().getMap().containsKey(key);
  }
  /**
   * Use {@link #getArcConfsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, bilibili.playershared.ArcConf> getArcConfs() {
    return getArcConfsMap();
  }
  /**
   * <code>map&lt;int32, .bilibili.playershared.ArcConf&gt; arc_confs = 1;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.Integer, bilibili.playershared.ArcConf> getArcConfsMap() {
    return internalGetArcConfs().getMap();
  }
  /**
   * <code>map&lt;int32, .bilibili.playershared.ArcConf&gt; arc_confs = 1;</code>
   */
  @java.lang.Override
  public /* nullable */
bilibili.playershared.ArcConf getArcConfsOrDefault(
      int key,
      /* nullable */
bilibili.playershared.ArcConf defaultValue) {

    java.util.Map<java.lang.Integer, bilibili.playershared.ArcConf> map =
        internalGetArcConfs().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .bilibili.playershared.ArcConf&gt; arc_confs = 1;</code>
   */
  @java.lang.Override
  public bilibili.playershared.ArcConf getArcConfsOrThrow(
      int key) {

    java.util.Map<java.lang.Integer, bilibili.playershared.ArcConf> map =
        internalGetArcConfs().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessage
      .serializeIntegerMapTo(
        output,
        internalGetArcConfs(),
        ArcConfsDefaultEntryHolder.defaultEntry,
        1);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<java.lang.Integer, bilibili.playershared.ArcConf> entry
         : internalGetArcConfs().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Integer, bilibili.playershared.ArcConf>
      arcConfs__ = ArcConfsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, arcConfs__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof bilibili.playershared.PlayArcConf)) {
      return super.equals(obj);
    }
    bilibili.playershared.PlayArcConf other = (bilibili.playershared.PlayArcConf) obj;

    if (!internalGetArcConfs().equals(
        other.internalGetArcConfs())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetArcConfs().getMap().isEmpty()) {
      hash = (37 * hash) + ARC_CONFS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetArcConfs().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static bilibili.playershared.PlayArcConf parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static bilibili.playershared.PlayArcConf parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static bilibili.playershared.PlayArcConf parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static bilibili.playershared.PlayArcConf parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static bilibili.playershared.PlayArcConf parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static bilibili.playershared.PlayArcConf parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static bilibili.playershared.PlayArcConf parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static bilibili.playershared.PlayArcConf parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static bilibili.playershared.PlayArcConf parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static bilibili.playershared.PlayArcConf parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static bilibili.playershared.PlayArcConf parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static bilibili.playershared.PlayArcConf parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(bilibili.playershared.PlayArcConf prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 播放页信息-响应: PlayArcConf
   * </pre>
   *
   * Protobuf type {@code bilibili.playershared.PlayArcConf}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bilibili.playershared.PlayArcConf)
      bilibili.playershared.PlayArcConfOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bilibili.playershared.Playershared.internal_static_bilibili_playershared_PlayArcConf_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 1:
          return internalGetArcConfs();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 1:
          return internalGetMutableArcConfs();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bilibili.playershared.Playershared.internal_static_bilibili_playershared_PlayArcConf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bilibili.playershared.PlayArcConf.class, bilibili.playershared.PlayArcConf.Builder.class);
    }

    // Construct using bilibili.playershared.PlayArcConf.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      internalGetMutableArcConfs().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return bilibili.playershared.Playershared.internal_static_bilibili_playershared_PlayArcConf_descriptor;
    }

    @java.lang.Override
    public bilibili.playershared.PlayArcConf getDefaultInstanceForType() {
      return bilibili.playershared.PlayArcConf.getDefaultInstance();
    }

    @java.lang.Override
    public bilibili.playershared.PlayArcConf build() {
      bilibili.playershared.PlayArcConf result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public bilibili.playershared.PlayArcConf buildPartial() {
      bilibili.playershared.PlayArcConf result = new bilibili.playershared.PlayArcConf(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(bilibili.playershared.PlayArcConf result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.arcConfs_ = internalGetArcConfs().build(ArcConfsDefaultEntryHolder.defaultEntry);
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof bilibili.playershared.PlayArcConf) {
        return mergeFrom((bilibili.playershared.PlayArcConf)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(bilibili.playershared.PlayArcConf other) {
      if (other == bilibili.playershared.PlayArcConf.getDefaultInstance()) return this;
      internalGetMutableArcConfs().mergeFrom(
          other.internalGetArcConfs());
      bitField0_ |= 0x00000001;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.MapEntry<java.lang.Integer, bilibili.playershared.ArcConf>
              arcConfs__ = input.readMessage(
                  ArcConfsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableArcConfs().ensureBuilderMap().put(
                  arcConfs__.getKey(), arcConfs__.getValue());
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private static final class ArcConfsConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.Integer, bilibili.playershared.ArcConfOrBuilder, bilibili.playershared.ArcConf> {
      @java.lang.Override
      public bilibili.playershared.ArcConf build(bilibili.playershared.ArcConfOrBuilder val) {
        if (val instanceof bilibili.playershared.ArcConf) { return (bilibili.playershared.ArcConf) val; }
        return ((bilibili.playershared.ArcConf.Builder) val).build();
      }

      @java.lang.Override
      public com.google.protobuf.MapEntry<java.lang.Integer, bilibili.playershared.ArcConf> defaultEntry() {
        return ArcConfsDefaultEntryHolder.defaultEntry;
      }
    };
    private static final ArcConfsConverter arcConfsConverter = new ArcConfsConverter();

    private com.google.protobuf.MapFieldBuilder<
        java.lang.Integer, bilibili.playershared.ArcConfOrBuilder, bilibili.playershared.ArcConf, bilibili.playershared.ArcConf.Builder> arcConfs_;
    private com.google.protobuf.MapFieldBuilder<java.lang.Integer, bilibili.playershared.ArcConfOrBuilder, bilibili.playershared.ArcConf, bilibili.playershared.ArcConf.Builder>
        internalGetArcConfs() {
      if (arcConfs_ == null) {
        return new com.google.protobuf.MapFieldBuilder<>(arcConfsConverter);
      }
      return arcConfs_;
    }
    private com.google.protobuf.MapFieldBuilder<java.lang.Integer, bilibili.playershared.ArcConfOrBuilder, bilibili.playershared.ArcConf, bilibili.playershared.ArcConf.Builder>
        internalGetMutableArcConfs() {
      if (arcConfs_ == null) {
        arcConfs_ = new com.google.protobuf.MapFieldBuilder<>(arcConfsConverter);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return arcConfs_;
    }
    public int getArcConfsCount() {
      return internalGetArcConfs().ensureBuilderMap().size();
    }
    /**
     * <code>map&lt;int32, .bilibili.playershared.ArcConf&gt; arc_confs = 1;</code>
     */
    @java.lang.Override
    public boolean containsArcConfs(
        int key) {

      return internalGetArcConfs().ensureBuilderMap().containsKey(key);
    }
    /**
     * Use {@link #getArcConfsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, bilibili.playershared.ArcConf> getArcConfs() {
      return getArcConfsMap();
    }
    /**
     * <code>map&lt;int32, .bilibili.playershared.ArcConf&gt; arc_confs = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, bilibili.playershared.ArcConf> getArcConfsMap() {
      return internalGetArcConfs().getImmutableMap();
    }
    /**
     * <code>map&lt;int32, .bilibili.playershared.ArcConf&gt; arc_confs = 1;</code>
     */
    @java.lang.Override
    public /* nullable */
bilibili.playershared.ArcConf getArcConfsOrDefault(
        int key,
        /* nullable */
bilibili.playershared.ArcConf defaultValue) {

      java.util.Map<java.lang.Integer, bilibili.playershared.ArcConfOrBuilder> map = internalGetMutableArcConfs().ensureBuilderMap();
      return map.containsKey(key) ? arcConfsConverter.build(map.get(key)) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .bilibili.playershared.ArcConf&gt; arc_confs = 1;</code>
     */
    @java.lang.Override
    public bilibili.playershared.ArcConf getArcConfsOrThrow(
        int key) {

      java.util.Map<java.lang.Integer, bilibili.playershared.ArcConfOrBuilder> map = internalGetMutableArcConfs().ensureBuilderMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return arcConfsConverter.build(map.get(key));
    }
    public Builder clearArcConfs() {
      bitField0_ = (bitField0_ & ~0x00000001);
      internalGetMutableArcConfs().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .bilibili.playershared.ArcConf&gt; arc_confs = 1;</code>
     */
    public Builder removeArcConfs(
        int key) {

      internalGetMutableArcConfs().ensureBuilderMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, bilibili.playershared.ArcConf>
        getMutableArcConfs() {
      bitField0_ |= 0x00000001;
      return internalGetMutableArcConfs().ensureMessageMap();
    }
    /**
     * <code>map&lt;int32, .bilibili.playershared.ArcConf&gt; arc_confs = 1;</code>
     */
    public Builder putArcConfs(
        int key,
        bilibili.playershared.ArcConf value) {

      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableArcConfs().ensureBuilderMap()
          .put(key, value);
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>map&lt;int32, .bilibili.playershared.ArcConf&gt; arc_confs = 1;</code>
     */
    public Builder putAllArcConfs(
        java.util.Map<java.lang.Integer, bilibili.playershared.ArcConf> values) {
      for (java.util.Map.Entry<java.lang.Integer, bilibili.playershared.ArcConf> e : values.entrySet()) {
        if (e.getKey() == null || e.getValue() == null) {
          throw new NullPointerException();
        }
      }
      internalGetMutableArcConfs().ensureBuilderMap()
          .putAll(values);
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>map&lt;int32, .bilibili.playershared.ArcConf&gt; arc_confs = 1;</code>
     */
    public bilibili.playershared.ArcConf.Builder putArcConfsBuilderIfAbsent(
        int key) {
      java.util.Map<java.lang.Integer, bilibili.playershared.ArcConfOrBuilder> builderMap = internalGetMutableArcConfs().ensureBuilderMap();
      bilibili.playershared.ArcConfOrBuilder entry = builderMap.get(key);
      if (entry == null) {
        entry = bilibili.playershared.ArcConf.newBuilder();
        builderMap.put(key, entry);
      }
      if (entry instanceof bilibili.playershared.ArcConf) {
        entry = ((bilibili.playershared.ArcConf) entry).toBuilder();
        builderMap.put(key, entry);
      }
      return (bilibili.playershared.ArcConf.Builder) entry;
    }

    // @@protoc_insertion_point(builder_scope:bilibili.playershared.PlayArcConf)
  }

  // @@protoc_insertion_point(class_scope:bilibili.playershared.PlayArcConf)
  private static final bilibili.playershared.PlayArcConf DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new bilibili.playershared.PlayArcConf();
  }

  public static bilibili.playershared.PlayArcConf getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PlayArcConf>
      PARSER = new com.google.protobuf.AbstractParser<PlayArcConf>() {
    @java.lang.Override
    public PlayArcConf parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PlayArcConf> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PlayArcConf> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public bilibili.playershared.PlayArcConf getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

